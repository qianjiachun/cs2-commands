[
  {
      "name": "find",
      "description": "Find concommands with the specified string in their name/help text.",
      "flags": ""
  },
  {
      "name": "log_dumpchannels",
      "description": "Dumps information about all logging channels.",
      "flags": "dontrecord"
  },
  {
      "name": "log_level",
      "description": "Set the spew level of a logging channel.",
      "flags": "dontrecord"
  },
  {
      "name": "log_verbosity",
      "description": "Set the verbosity of a logging channel.",
      "flags": "dontrecord"
  },
  {
      "name": "log_color",
      "description": "Set the color of a logging channel.",
      "flags": "dontrecord"
  },
  {
      "name": "log_flags",
      "description": "Set the flags on a logging channel.",
      "flags": "dontrecord"
  },
  {
      "name": "differences",
      "description": "Show all convars which are not at their default values (optional restricted to specific flags).",
      "flags": ""
  },
  {
      "name": "cvarlist",
      "description": "Show the list of convars/concommands.",
      "flags": ""
  },
  {
      "name": "help",
      "description": "Find help about a convar/concommand.",
      "flags": ""
  },
  {
      "name": "findflags",
      "description": "Find concommands by flags.",
      "flags": ""
  },
  {
      "name": "Test_ExitProcess",
      "description": "Test_ExitProcess <exit code> - immediately kill the process.",
      "flags": "cheat"
  },
  {
      "name": "Test_StartLoop",
      "description": "Test_StartLoop <loop name> - Denote the start of a loop. Really just defines a named point you can jump to.",
      "flags": ""
  },
  {
      "name": "Test_LoopCount",
      "description": "Test_LoopCount <loop name> <count> - loop back to the specified loop start point the specified # of times.",
      "flags": ""
  },
  {
      "name": "Test_Loop",
      "description": "Test_Loop <loop name> - loop back to the specified loop start point unconditionally.",
      "flags": ""
  },
  {
      "name": "Test_LoopForNumSeconds",
      "description": "Test_LoopForNumSeconds <loop name> <time> - loop back to the specified start point for the specified # of seconds.",
      "flags": ""
  },
  {
      "name": "Test_RandomChance",
      "description": "Test_RandomChance <percent chance, 0-100> <token1> <token2...> - Roll the dice and maybe run the command following the percentage chance.",
      "flags": ""
  },
  {
      "name": "Test_StartScript",
      "description": "Start a test script running..",
      "flags": ""
  },
  {
      "name": "Test_Checkpoint",
      "description": "Indicate to a test script that a checkpoint has been reached",
      "flags": ""
  },
  {
      "name": "scrubber",
      "description": "Scrub system off - not a dev build",
      "flags": ""
  },
  {
      "name": "lrucache_stats",
      "description": "Spews information about all CUtlLRUCaches",
      "flags": ""
  },
  {
      "name": "lrucache_reset_stats",
      "description": "Resets stats for the specified CUtlLRUCaches (or all if none specified)",
      "flags": ""
  },
  {
      "name": "lrucache_set_size",
      "description": "Sets the specified cache to the specified size",
      "flags": ""
  },
  {
      "name": "lrucache_flush",
      "description": "Flushes the specified cache",
      "flags": ""
  },
  {
      "name": "loop_dump",
      "description": "Print the listeners of the current loop mode",
      "flags": ""
  },
  {
      "name": "addons",
      "description": "list current addon info.",
      "flags": ""
  },
  {
      "name": "host_timescale_inc",
      "description": "Increment the timescale by one step",
      "flags": "cheat"
  },
  {
      "name": "host_timescale_dec",
      "description": "Decrement the timescale by one step",
      "flags": "cheat"
  },
  {
      "name": "vis_debug_show",
      "description": "Show/hide the vis debug visualization",
      "flags": ""
  },
  {
      "name": "vis_debug_sunclusters",
      "description": "Showing clusters for sun/csm rendering. Red (full sun csm & lighting), Orange (no viewmodel sun or csm), Green (no sun at all)",
      "flags": ""
  },
  {
      "name": "vis_debug_record_start",
      "description": "Record a path to debug vis",
      "flags": ""
  },
  {
      "name": "vis_debug_record_stop",
      "description": "Record a path to debug vis",
      "flags": ""
  },
  {
      "name": "vis_debug_find_los",
      "description": "Find or clear the vis LOS to here",
      "flags": ""
  },
  {
      "name": "vis_debug_tracelos",
      "description": "Trace rays and check vis from the current camera",
      "flags": ""
  },
  {
      "name": "vis_debug_lock",
      "description": "Lock vis LOS origin to current",
      "flags": ""
  },
  {
      "name": "vis_debug_currentcluster",
      "description": "Show the current cluster number",
      "flags": ""
  },
  {
      "name": "vis_debug_dumpvisibleclusters",
      "description": "Show the list of visible clusters",
      "flags": ""
  },
  {
      "name": "vis_debug_drawcluster",
      "description": "Add cluster # to visualization, (-1) to clear",
      "flags": ""
  },
  {
      "name": "vis_debug_sphere",
      "description": "Draw clusters in a sphere of radius around the camera",
      "flags": ""
  },
  {
      "name": "fog_override_color",
      "description": "Sets the fog color override",
      "flags": "cheat"
  },
  {
      "name": "clear",
      "description": "Clear console output.",
      "flags": "dontrecord"
  },
  {
      "name": "clearall",
      "description": "Clear console output from all views.",
      "flags": "dontrecord"
  },
  {
      "name": "consoletool",
      "description": "Open a VConsole subtool.",
      "flags": "dontrecord"
  },
  {
      "name": "condump",
      "description": "dump the text currently in the console to condumpXX.log",
      "flags": ""
  },
  {
      "name": "key_listboundkeys",
      "description": "List bound keys with bindings.",
      "flags": ""
  },
  {
      "name": "key_findbinding",
      "description": "Find key bound to specified command string.",
      "flags": ""
  },
  {
      "name": "toggle",
      "description": "Toggles specified convar value on and off.",
      "flags": "dontrecord"
  },
  {
      "name": "blink",
      "description": "Blink specified convar value between two values at the specified duration.",
      "flags": "dontrecord"
  },
  {
      "name": "incrementvar",
      "description": "Increment specified convar value.",
      "flags": "dontrecord"
  },
  {
      "name": "cyclevar",
      "description": "Cycle through specified convar values.",
      "flags": "dontrecord"
  },
  {
      "name": "exec",
      "description": "Execute a cfg file",
      "flags": "dontrecord"
  },
  {
      "name": "execifexists",
      "description": "Execute a cfg file if file exists",
      "flags": "dontrecord"
  },
  {
      "name": "exec_async",
      "description": "Execute a cfg file over time",
      "flags": "cheat dontrecord"
  },
  {
      "name": "run_perftest",
      "description": "Execute perftest.cfg",
      "flags": "cheat dontrecord"
  },
  {
      "name": "push_var_values",
      "description": "Save convars and config values",
      "flags": ""
  },
  {
      "name": "pop_var_values",
      "description": "Restore previously pushed convars and config values",
      "flags": ""
  },
  {
      "name": "multvar",
      "description": "Multiply specified convar value.",
      "flags": "dontrecord"
  },
  {
      "name": "bind",
      "description": "Bind a key.",
      "flags": "release"
  },
  {
      "name": "bindss",
      "description": "Bind a key for a particular splitscreen player.",
      "flags": "release"
  },
  {
      "name": "bindtoggle",
      "description": "Performs a bind <key> \"increment var <cvar> 0 1 1\".",
      "flags": ""
  },
  {
      "name": "unbindall",
      "description": "Unbind all keys.",
      "flags": "release"
  },
  {
      "name": "unbind",
      "description": "Unbind a key.",
      "flags": "release"
  },
  {
      "name": "binddefaults",
      "description": "Bind all keys to their default values.",
      "flags": "release"
  },
  {
      "name": "writekeybindings",
      "description": "Saves current key bindings to disk.",
      "flags": "release"
  },
  {
      "name": "echoln",
      "description": "Echo the command arguments on the console",
      "flags": ""
  },
  {
      "name": "input_state",
      "description": "input_state",
      "flags": "developmentonly"
  },
  {
      "name": "grep",
      "description": "grep line for pattern, print out matching lines only",
      "flags": ""
  },
  {
      "name": "alias",
      "description": "Alias a command.",
      "flags": ""
  },
  {
      "name": "echo",
      "description": "Echo text to console.",
      "flags": "server_can_execute"
  },
  {
      "name": "repeat_last_console_command",
      "description": "Repeat last console command.",
      "flags": ""
  },
  {
      "name": "maps",
      "description": "Displays list of maps.",
      "flags": ""
  },
  {
      "name": "map",
      "description": "map <mapname> :Load a new map.",
      "flags": "vconsole_fuzzy_matching vconsole_set_focus"
  },
  {
      "name": "changelevel",
      "description": "changelevel <mapname> :Multiplayer change level.",
      "flags": ""
  },
  {
      "name": "connect",
      "description": "Connect to a remote server.",
      "flags": ""
  },
  {
      "name": "connect_hltv",
      "description": "Connect to a remote HLTV server.",
      "flags": ""
  },
  {
      "name": "restart",
      "description": "Poor man's restart: reload the current map from disk.",
      "flags": "cheat vconsole_set_focus"
  },
  {
      "name": "reloadgame",
      "description": "Reload the most recent saved game.",
      "flags": "cheat vconsole_set_focus"
  },
  {
      "name": "load",
      "description": "Usage:.   load [save file name].",
      "flags": "dontrecord vconsole_fuzzy_matching"
  },
  {
      "name": "disconnect",
      "description": "Disconnect from server",
      "flags": ""
  },
  {
      "name": "status",
      "description": "Print connection status",
      "flags": ""
  },
  {
      "name": "cl_fullupdate",
      "description": "Force uncompressed update",
      "flags": "cheat"
  },
  {
      "name": "pause",
      "description": "Toggle the server pause state.",
      "flags": ""
  },
  {
      "name": "setpause",
      "description": "Set the pause state of the server.",
      "flags": ""
  },
  {
      "name": "unpause",
      "description": "Clear the pause state of the server.",
      "flags": ""
  },
  {
      "name": "cmd",
      "description": "Forward command to server.",
      "flags": ""
  },
  {
      "name": "p2p_listpeers",
      "description": "List currently known peers.",
      "flags": ""
  },
  {
      "name": "kickid",
      "description": "Kick a player by userid or uniqueid, with a message.",
      "flags": "dontrecord"
  },
  {
      "name": "kick",
      "description": "Kick a player by name.",
      "flags": "dontrecord"
  },
  {
      "name": "kickid_hltv",
      "description": "Kick a player by userid or uniqueid, with a message.",
      "flags": "dontrecord"
  },
  {
      "name": "demo_writemetafile",
      "description": "save current meta file demo_<version>.meta file for use in demo upconversion.",
      "flags": "dontrecord"
  },
  {
      "name": "r_toggleviewportsize",
      "description": "Toggles viewport size between small + full window.",
      "flags": ""
  },
  {
      "name": "r_viewport",
      "description": "Slams viewport size to a specified value.",
      "flags": ""
  },
  {
      "name": "r_render_coordination_state",
      "description": "Prints out the current render coordination state.",
      "flags": ""
  },
  {
      "name": "r_force_engine_render_frame",
      "description": "Force a single render of the engine viewport.",
      "flags": ""
  },
  {
      "name": "check_dpi",
      "description": "Show the currently detected DPI.",
      "flags": ""
  },
  {
      "name": "screenshot",
      "description": "Take a screenshot: screenshot [filename]",
      "flags": ""
  },
  {
      "name": "jpeg_screenshot",
      "description": "Take a jpeg screenshot: jpeg_screenshot [filename] [quality 1-100].",
      "flags": ""
  },
  {
      "name": "png_screenshot",
      "description": "Take a .png screenshot: png_screenshot [filename]",
      "flags": ""
  },
  {
      "name": "playsound",
      "description": "playsound <soundname>",
      "flags": ""
  },
  {
      "name": "ss_add",
      "description": "Adds a splitscreen user.",
      "flags": ""
  },
  {
      "name": "ss_remove",
      "description": "Removes a splitscreen user.",
      "flags": ""
  },
  {
      "name": "host_writeconfig",
      "description": "Saves out the user config values.",
      "flags": ""
  },
  {
      "name": "stats_print",
      "description": "Prints out perf statistics to the console, clears perf history",
      "flags": ""
  },
  {
      "name": "stats_print_gpu",
      "description": "Prints out GPU perf statistics to the console.  Requires stats_display > 0, and stats_collect_gpu = true.  Optional argument of CSV filename",
      "flags": ""
  },
  {
      "name": "time_asserts",
      "description": "Time asserts and show the lengthiest asserts",
      "flags": "developmentonly"
  },
  {
      "name": "vprof_on",
      "description": "Enable vprof",
      "flags": ""
  },
  {
      "name": "vprof_off",
      "description": "Disable vprof",
      "flags": ""
  },
  {
      "name": "vprof_reset",
      "description": "Reset the stats in VProf profiler",
      "flags": ""
  },
  {
      "name": "vprof_reset_peaks",
      "description": "Reset just the peak time in VProf profiler",
      "flags": ""
  },
  {
      "name": "vprof_generate_report",
      "description": "Generate a report to the console.",
      "flags": ""
  },
  {
      "name": "vprof_generate_report_budget",
      "description": "Generate a report to the console based on budget group.",
      "flags": ""
  },
  {
      "name": "vprof_generate_report_hierarchy",
      "description": "Generate a report to the console.",
      "flags": ""
  },
  {
      "name": "vprof_vtrace",
      "description": "Toggle whether vprof data is sent to VTrace",
      "flags": ""
  },
  {
      "name": "vprof_time_scale",
      "description": "Scale used when displaying time (0 = use default)",
      "flags": "developmentonly missing0"
  },
  {
      "name": "vprof_loadhitstore_scale",
      "description": "Scale used when displaying load-hit-stores (0 = use default)",
      "flags": "developmentonly missing0"
  },
  {
      "name": "vprof_dump_counters",
      "description": "Dump vprof counters to the console",
      "flags": ""
  },
  {
      "name": "mem_dump",
      "description": "Dump memory stats to text file or <stdout>.",
      "flags": ""
  },
  {
      "name": "mem_compact",
      "description": "Compacts the heap",
      "flags": ""
  },
  {
      "name": "vmem_dump",
      "description": "Dump memory stats to log.",
      "flags": ""
  },
  {
      "name": "memory",
      "description": "Print memory stats.",
      "flags": ""
  },
  {
      "name": "memory_check_limit",
      "description": "Assert if peak memory use is over the limit.",
      "flags": "developmentonly"
  },
  {
      "name": "quit",
      "description": "Quit the game",
      "flags": "vconsole_set_focus"
  },
  {
      "name": "crash",
      "description": "Crash the client. Optional parameter -- type of crash:. 0: read from NULL. 1: write to NULL. 2: force an Assert",
      "flags": "cheat"
  },
  {
      "name": "crash_job",
      "description": "Cause the engine to crash in a job thread (Debug!!)",
      "flags": "cheat"
  },
  {
      "name": "crash_thread",
      "description": "Cause the engine to crash in a brand new non-main thread (Debug!!)",
      "flags": "cheat"
  },
  {
      "name": "crash_error",
      "description": "Cause the engine to crash by Plat_FatalError on main thread (Debug!!)",
      "flags": "cheat"
  },
  {
      "name": "crash_error_thread",
      "description": "Cause the engine to crash by Plat_FatalError on non-main thread (Debug!!)",
      "flags": "cheat"
  },
  {
      "name": "crash_error_job",
      "description": "Cause the engine to crash by Plat_FatalError on job thread (Debug!!)",
      "flags": "cheat"
  },
  {
      "name": "force_assert",
      "description": "Fire an assertion failure",
      "flags": "developmentonly"
  },
  {
      "name": "force_fatal_error",
      "description": "Fire a fatal error",
      "flags": "developmentonly"
  },
  {
      "name": "force_hibernate",
      "description": "Force toggle hibernation state",
      "flags": "developmentonly"
  },
  {
      "name": "console_test",
      "description": "Output text to test console",
      "flags": "developmentonly"
  },
  {
      "name": "open_asset",
      "description": "Opens an asset in it's primary editor of choice. Specify the full path to the asset from the mod directory.",
      "flags": ""
  },
  {
      "name": "disable_priority_boost",
      "description": "Disable focus based priority boost",
      "flags": ""
  },
  {
      "name": "enable_priority_boost",
      "description": "Disable focus based priority boost",
      "flags": ""
  },
  {
      "name": "generate_minidump_comment",
      "description": "Generate a minidump comment and spew the results to the console",
      "flags": "developmentonly"
  },
  {
      "name": "sys_info",
      "description": "Print system information to the console",
      "flags": ""
  },
  {
      "name": "force_floating_point_exceptions",
      "description": "Enable floating point exceptions to find bugs",
      "flags": "developmentonly"
  },
  {
      "name": "UpdateBinarySizes",
      "description": "Dumps the binary sizes to use for the game in loadaddress.vpc",
      "flags": ""
  },
  {
      "name": "StackStats_Dump",
      "description": "Dump a named stackstats structure to disk. Usage: stackstats_dump \"structname\" [\"filename\"]",
      "flags": "developmentonly"
  },
  {
      "name": "stop",
      "description": "Finish recording demo.",
      "flags": ""
  },
  {
      "name": "record",
      "description": "Record a demo.",
      "flags": "dontrecord"
  },
  {
      "name": "_record",
      "description": "Record a demo incrementally.",
      "flags": "dontrecord"
  },
  {
      "name": "vtune",
      "description": "Controls VTune's sampling.",
      "flags": ""
  },
  {
      "name": "playdemo",
      "description": "Play a recorded demo file (.dem ).",
      "flags": ""
  },
  {
      "name": "timedemo",
      "description": "Play a demo and report performance info.",
      "flags": ""
  },
  {
      "name": "timedemoquit",
      "description": "Play a demo, report performance info, and then exit",
      "flags": ""
  },
  {
      "name": "listdemo",
      "description": "List demo file contents.",
      "flags": ""
  },
  {
      "name": "benchframe",
      "description": "Takes a snapshot of a particular frame in a time demo.",
      "flags": ""
  },
  {
      "name": "demo_pause",
      "description": "Pauses demo playback.",
      "flags": ""
  },
  {
      "name": "demo_resume",
      "description": "Resumes demo playback.",
      "flags": ""
  },
  {
      "name": "demo_togglepause",
      "description": "Toggles demo playback.",
      "flags": ""
  },
  {
      "name": "demo_goto",
      "description": "Skips to location in demo.",
      "flags": ""
  },
  {
      "name": "demo_gototick",
      "description": "Skips to a tick in demo.",
      "flags": ""
  },
  {
      "name": "demo_marktick",
      "description": "Marks the current demo playback tick for later use",
      "flags": ""
  },
  {
      "name": "demo_gotomark",
      "description": "Skips the current demo playback to the marked tick",
      "flags": ""
  },
  {
      "name": "demo_info",
      "description": "Print information about currently playing demo.",
      "flags": ""
  },
  {
      "name": "demo_timescale",
      "description": "Sets demo replay speed.",
      "flags": ""
  },
  {
      "name": "startdemos",
      "description": "Play demos in demo sequence.",
      "flags": ""
  },
  {
      "name": "nextdemo",
      "description": "Play next demo in sequence.",
      "flags": ""
  },
  {
      "name": "demolist",
      "description": "Print demo sequence list.",
      "flags": ""
  },
  {
      "name": "stopdemos",
      "description": "Stop looping demos (current demo will complete).",
      "flags": ""
  },
  {
      "name": "rpestats",
      "description": "dump rpe",
      "flags": ""
  },
  {
      "name": "instant_replay_pause",
      "description": "Pauses instant replay.",
      "flags": ""
  },
  {
      "name": "instant_replay_resume",
      "description": "Resumes instant replay.",
      "flags": ""
  },
  {
      "name": "instant_replay_togglepause",
      "description": "Toggles instant replay.",
      "flags": ""
  },
  {
      "name": "instant_replay_skip",
      "description": "Number of seconds to skip back to instant replay from current position",
      "flags": ""
  },
  {
      "name": "instant_replay_skip_live",
      "description": "Number of seconds to skip back to instant replay from live",
      "flags": ""
  },
  {
      "name": "instant_replay_goto_tick",
      "description": "Goto a direct timestamp of the replay",
      "flags": ""
  },
  {
      "name": "instant_replay_goto_tick_relative",
      "description": "Goto a direct timestamp of the replay",
      "flags": ""
  },
  {
      "name": "instant_replay_live",
      "description": "If in replay, jumps back to live",
      "flags": ""
  },
  {
      "name": "instant_replay_timescale",
      "description": "Sets instant replay speed.",
      "flags": ""
  },
  {
      "name": "vprof_remote_start",
      "description": "Request a VProf data stream from the remote server (requires authentication)",
      "flags": ""
  },
  {
      "name": "vprof_remote_stop",
      "description": "Stop an existing remote VProf data request",
      "flags": ""
  },
  {
      "name": "rcon",
      "description": "Issue an rcon command.",
      "flags": "dontrecord"
  },
  {
      "name": "cl_precacheinfo",
      "description": "Show precache info (client).",
      "flags": ""
  },
  {
      "name": "cl_spewworldgroups",
      "description": "Spew world groups (client)",
      "flags": "developmentonly"
  },
  {
      "name": "cl_spewserializers",
      "description": "Spew serializers",
      "flags": "cheat"
  },
  {
      "name": "cl_checkdeclareclasses",
      "description": "Check game code serializers",
      "flags": "cheat"
  },
  {
      "name": "sv_pure",
      "description": "Show user data.",
      "flags": ""
  },
  {
      "name": "sv_fullupdate",
      "description": "Force a full update for all clients.",
      "flags": ""
  },
  {
      "name": "users",
      "description": "Show user info for players on server.",
      "flags": ""
  },
  {
      "name": "sv_spewworldgroups",
      "description": "Spew world groups (server)",
      "flags": "developmentonly"
  },
  {
      "name": "sv_shutdown",
      "description": "Sets the server to shutdown when all games have completed",
      "flags": ""
  },
  {
      "name": "sv_showtags",
      "description": "Describe current gametags.",
      "flags": ""
  },
  {
      "name": "sv_clientrates",
      "description": "Show client rates.",
      "flags": ""
  },
  {
      "name": "banip",
      "description": "Add an IP address to the ban list.",
      "flags": ""
  },
  {
      "name": "addip",
      "description": "Add an IP address to the ban list.",
      "flags": ""
  },
  {
      "name": "removeip",
      "description": "Remove an IP address from the ban list.",
      "flags": ""
  },
  {
      "name": "listip",
      "description": "List IP addresses on the ban list.",
      "flags": ""
  },
  {
      "name": "writeip",
      "description": "Save the ban list to file.",
      "flags": ""
  },
  {
      "name": "banid",
      "description": "Add a user ID to the ban list.",
      "flags": ""
  },
  {
      "name": "removeid",
      "description": "Remove a user ID from the ban list.",
      "flags": ""
  },
  {
      "name": "listid",
      "description": "Lists banned users.",
      "flags": ""
  },
  {
      "name": "writeid",
      "description": "Writes a list of permanently-banned user IDs to file.",
      "flags": ""
  },
  {
      "name": "log",
      "description": "Enables logging to file, console, and udp < on | off >.",
      "flags": ""
  },
  {
      "name": "sv_packstats",
      "description": "Show entity packing stats, pass 'clear' as argument to reset counts.",
      "flags": "release"
  },
  {
      "name": "redirectstart",
      "description": "Redirect server console output",
      "flags": "missing0"
  },
  {
      "name": "redirectend",
      "description": "Redirect server console output",
      "flags": "missing0"
  },
  {
      "name": "stats",
      "description": "Prints server performance variables",
      "flags": ""
  },
  {
      "name": "net_stats_json",
      "description": "Output server networking statistics in json format",
      "flags": ""
  },
  {
      "name": "sv_spewmeta",
      "description": "Spew serializer meta",
      "flags": "cheat"
  },
  {
      "name": "sv_metaduplication",
      "description": "Check serializer meta for duplication, add verbose to command for full spew",
      "flags": "cheat"
  },
  {
      "name": "startmovie",
      "description": "Start recording movie frames.",
      "flags": "dontrecord"
  },
  {
      "name": "endmovie",
      "description": "Stop recording movie frames.",
      "flags": "dontrecord"
  },
  {
      "name": "setinfo",
      "description": "Adds a new user info value",
      "flags": "clientcmd_can_execute"
  },
  {
      "name": "cpuinfo",
      "description": "Print CPU configuration information",
      "flags": ""
  },
  {
      "name": "reset_gameconvars",
      "description": "Reset game convars to default values",
      "flags": "cheat"
  },
  {
      "name": "status_json",
      "description": "Print status in JSON format",
      "flags": ""
  },
  {
      "name": "mem_test",
      "description": "",
      "flags": ""
  },
  {
      "name": "dumpstringtable",
      "description": "Usage:  dumpstringtable <tablename |all> <sv | cl> <verbose | simple> <element>      Print string tables to console, verbose to dump data, simple to show name and count only, can specifiy a single numeric element index to restrict spew.",
      "flags": ""
  },
  {
      "name": "playcast",
      "description": "Play a broadcast",
      "flags": ""
  },
  {
      "name": "tv_broadcast_resend",
      "description": "resend broadcast data to broadcast relay",
      "flags": ""
  },
  {
      "name": "tv_status",
      "description": "Show SourceTV server status.",
      "flags": ""
  },
  {
      "name": "tv_relay",
      "description": "Connect to SourceTV server and relay broadcast.",
      "flags": ""
  },
  {
      "name": "tv_stop",
      "description": "Stops the SourceTV broadcast.",
      "flags": ""
  },
  {
      "name": "tv_retry",
      "description": "Reconnects the SourceTV relay proxy.",
      "flags": ""
  },
  {
      "name": "tv_record",
      "description": "Starts SourceTV demo recording.",
      "flags": ""
  },
  {
      "name": "tv_broadcast_status",
      "description": "Print out broadcast status",
      "flags": ""
  },
  {
      "name": "tv_stoprecord",
      "description": "Stops SourceTV demo recording.",
      "flags": ""
  },
  {
      "name": "tv_clients",
      "description": "Shows list of connected SourceTV clients.",
      "flags": ""
  },
  {
      "name": "tv_mem",
      "description": "hltv memory statistics. Use with \"ent 10\" (dump entity 10 memory usage) or \"top 8\" (dump top 8 memory users) or \"class\" CWorld (dump CWorld class)",
      "flags": ""
  },
  {
      "name": "gameui_hide",
      "description": "Hides the game UI",
      "flags": ""
  },
  {
      "name": "escape",
      "description": "Escape key pressed.",
      "flags": "clientcmd_can_execute"
  },
  {
      "name": "gameui_activate",
      "description": "Shows the game UI",
      "flags": ""
  },
  {
      "name": "gameui_preventescape",
      "description": "Escape key doesn't hide game UI",
      "flags": ""
  },
  {
      "name": "gameui_allowescapetoshow",
      "description": "Escape key allowed to show game UI",
      "flags": ""
  },
  {
      "name": "gameui_preventescapetoshow",
      "description": "Escape key doesn't show game UI",
      "flags": ""
  },
  {
      "name": "gameui_allowescape",
      "description": "Escape key allowed to hide game UI",
      "flags": ""
  },
  {
      "name": "progress_enable",
      "description": "",
      "flags": ""
  },
  {
      "name": "bug",
      "description": "bug [auto_fill_tokens] [-title <text>] [-noscreenshot] : Activate the bug reporter.",
      "flags": "dontrecord"
  },
  {
      "name": "auto_bug",
      "description": "auto_bug : create non-interactive bug report.",
      "flags": "dontrecord"
  },
  {
      "name": "+bugvoice",
      "description": "Start recording bug voice attachment.",
      "flags": "dontrecord"
  },
  {
      "name": "-bugvoice",
      "description": "Finish recording bug voice attachment.",
      "flags": "dontrecord"
  },
  {
      "name": "bugvoice_clear",
      "description": "Clear voice attachment data.",
      "flags": "dontrecord"
  },
  {
      "name": "bugvoice_save",
      "description": "Write buffered voice attachment data to file.",
      "flags": "dontrecord"
  },
  {
      "name": "cl_break_on_missing_resource",
      "description": "Break in debugger when missing resource match is found..Format: cl_break_on_missing_resource <substring> /(empty to break on all) / 0 to turn off..",
      "flags": "developmentonly"
  },
  {
      "name": "toggleconsole",
      "description": "Show/hide the console.",
      "flags": "dontrecord"
  },
  {
      "name": "hideconsole",
      "description": "Hide the console.",
      "flags": "dontrecord"
  },
  {
      "name": "showconsole",
      "description": "Show the console.",
      "flags": "dontrecord"
  },
  {
      "name": "path",
      "description": "Show the filesystem path.",
      "flags": ""
  },
  {
      "name": "fs_dump_open_duplicate_times",
      "description": "Set fs_report_long_reads 1 before loading to use this. Prints a list of files that were opened more than once and ~how long was spent reading from them.",
      "flags": ""
  },
  {
      "name": "fs_clear_open_duplicate_times",
      "description": "Clear the list of files that have been opened.",
      "flags": ""
  },
  {
      "name": "ime_info",
      "description": "Spew IME info.",
      "flags": "dontrecord"
  },
  {
      "name": "key_updatelayout",
      "description": "Updates game keyboard layout to current windows keyboard setting.",
      "flags": ""
  },
  {
      "name": "dump_localization_files",
      "description": "List all loaded localization files",
      "flags": ""
  },
  {
      "name": "dump_loc_token",
      "description": "List information on the given token",
      "flags": ""
  },
  {
      "name": "schema_list_bindings",
      "description": "schema_list_bindings <substring> - List registered global-scope schema bindings (classes & enums). If no substring, list them all.",
      "flags": "developmentonly"
  },
  {
      "name": "schema_all_list_bindings",
      "description": "schema_all_list_bindings <substring> - List all scopes registered schema bindings (classes & enums). If no substring, list them all.",
      "flags": "developmentonly"
  },
  {
      "name": "schema_dump_binding",
      "description": "schema_dump_binding <class_or_enum_name> - Print information about the named class or enum.",
      "flags": "developmentonly"
  },
  {
      "name": "schema_detailed_class_layout",
      "description": "schema_detailed_class_layout <class_name> - Print a detailed memory layout of the class (including inline structs).",
      "flags": "developmentonly"
  },
  {
      "name": "schema_stats",
      "description": "schema_stats - Print a summary of various schemasystem statistics.",
      "flags": "developmentonly"
  },
  {
      "name": "schema_meta_stats",
      "description": "schema_meta_stats [<options>]- Print a summary of schemasystem metadata statistics.",
      "flags": "developmentonly"
  },
  {
      "name": "rs_dump_stats",
      "description": "rs_dump_stats - Dump resourcesystem stats.",
      "flags": "developmentonly"
  },
  {
      "name": "resource_repeated_reload",
      "description": "resource_repeated_reload <count> <resource_name> (<resource name> ...): Load and unload the specified resource(s)",
      "flags": ""
  },
  {
      "name": "resource_manifest_validate_modules",
      "description": "Scan all of the loaded modules and validate any resource manifests found",
      "flags": ""
  },
  {
      "name": "resource_list",
      "description": "List loaded resources matching a substring",
      "flags": ""
  },
  {
      "name": "resource_log_allocate_timing",
      "description": "Log time spent in Allocate for all resource types",
      "flags": ""
  },
  {
      "name": "resource_reset_allocate_timing",
      "description": "Reset tracked time spent in Allocate (see resource_log_allocate_timing)",
      "flags": ""
  },
  {
      "name": "resource_leaks",
      "description": "resource_leaks <resource_name>: Show resource leaks for the named resource",
      "flags": ""
  },
  {
      "name": "r_print_texture_stats",
      "description": "Texture stats",
      "flags": ""
  },
  {
      "name": "r_gpu_mem_stats",
      "description": "Display GPU memory usage.",
      "flags": "linked_concommand"
  },
  {
      "name": "r_dx11_report_live_objects",
      "description": "Prints out live D3D11 objects (requires -dx11debug)",
      "flags": ""
  },
  {
      "name": "r_textures_evict_all",
      "description": "Evict all resident texture.",
      "flags": "linked_concommand"
  },
  {
      "name": "r_renderdoc_capture_frame",
      "description": "Triggers a RenderDoc capture",
      "flags": "linked_concommand"
  },
  {
      "name": "mat_assert_on_shader_use",
      "description": "Assert on shader used based on substring of shader name",
      "flags": "developmentonly"
  },
  {
      "name": "mat_reloadmaterials",
      "description": "Reloads all materials. Takes an optional substring as an argument.",
      "flags": ""
  },
  {
      "name": "mat_reinitmaterials",
      "description": "Reinitializes all loaded materials, reloading their shaders.",
      "flags": ""
  },
  {
      "name": "mat_reloadshaders",
      "description": "Reloads all shaders. Takes optional substrings of shader names to recompile as arguments.",
      "flags": ""
  },
  {
      "name": "mat_disable_dynamic_shader_compile",
      "description": "Reloads all shaders from vcs files until the next time mat_reloadshaders is called",
      "flags": ""
  },
  {
      "name": "mat_clearshadercache",
      "description": "Clears the shader cache used for dynamic shader compile.",
      "flags": ""
  },
  {
      "name": "mat_set_shader_quality",
      "description": "Force shader quality setting (valid values are 0 or 1)",
      "flags": ""
  },
  {
      "name": "mat_print_shader_quality",
      "description": "Print current shader quality setting",
      "flags": ""
  },
  {
      "name": "mat_print_materials",
      "description": "Print loaded materials. Takes an optional substring as an argument.",
      "flags": ""
  },
  {
      "name": "mat_print_dead_materials",
      "description": "Print loaded materials that have no valid layers due to not supporting any of the modes in gameinfo.gi.",
      "flags": ""
  },
  {
      "name": "mat_print_error_materials",
      "description": "Print loaded materials that are using the error shader or material.",
      "flags": ""
  },
  {
      "name": "mat_print_materials_last_frame",
      "description": "Print materials used last frame",
      "flags": ""
  },
  {
      "name": "mat_print_materials_unused",
      "description": "Print materials that have never been used",
      "flags": ""
  },
  {
      "name": "mat_print_expensive_materials",
      "description": "Print materials sorted by cost heuristic",
      "flags": ""
  },
  {
      "name": "mat_reset_material_costs",
      "description": "Reset material cost heuristic",
      "flags": ""
  },
  {
      "name": "mat_print_material_info",
      "description": "Print info about a specific material",
      "flags": ""
  },
  {
      "name": "mat_print_textures",
      "description": "Print loaded textures in alphabetical order. Takes an optional substring as an argument.",
      "flags": ""
  },
  {
      "name": "mat_print_textures_size",
      "description": "Print loaded textures in ascending size order. Takes an optional substring as an argument.",
      "flags": ""
  },
  {
      "name": "mat_print_textures_size_in_memory",
      "description": "Print loaded textures in ascending size order as they are in memory. Takes an optional substring as an argument.",
      "flags": ""
  },
  {
      "name": "mat_print_shaders",
      "description": "Print loaded shaders. Takes a substring as an argument.",
      "flags": ""
  },
  {
      "name": "mat_print_shader_info",
      "description": "Print detailed info about a single shader. Takes a shader name (hero.vfx) as an argument.",
      "flags": ""
  },
  {
      "name": "mat_print_modes",
      "description": "Print supported rendering modes.",
      "flags": ""
  },
  {
      "name": "spew_fonts",
      "description": "Spew information about font manager fonts",
      "flags": ""
  },
  {
      "name": "@panorama_dump_symbols",
      "description": "<ESymbolType> Dump all of the symbols in the Panorama symbol table",
      "flags": ""
  },
  {
      "name": "@panorama_print_cache_status",
      "description": "Print internal panorama refcounts for every file",
      "flags": ""
  },
  {
      "name": "@panorama_dispatch_event",
      "description": "Dispatch the event defined by the argument string. No creating panel is specified.",
      "flags": ""
  },
  {
      "name": "@panorama_generate_layout_xsd",
      "description": "Generate the Layout XML Schema Definition for the current run-time (types are dependent on which game DLL is running).",
      "flags": ""
  },
  {
      "name": "dump_panorama_events",
      "description": "print panorama event types and their documentation",
      "flags": ""
  },
  {
      "name": "@panorama_print_svg_stats",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "dump_panorama_css_properties",
      "description": "Prints out all valid panorama CSS properties and their documentation",
      "flags": ""
  },
  {
      "name": "dump_panorama_css_properties_memstats",
      "description": "Prints out mem stats of all valid panorama CSS properties",
      "flags": ""
  },
  {
      "name": "dump_panorama_render_command_stats",
      "description": "",
      "flags": ""
  },
  {
      "name": "lua_report_memory",
      "description": "",
      "flags": ""
  },
  {
      "name": "net_spewcounts",
      "description": "Spew serializer counts.",
      "flags": ""
  },
  {
      "name": "net_spewserializer",
      "description": "Spew serializer info.",
      "flags": "developmentonly"
  },
  {
      "name": "net_why_field_excluded",
      "description": "<classname> <fieldname>:  spew why field was excluded from networking for classname.",
      "flags": "developmentonly"
  },
  {
      "name": "fs_spew_readfieldlist",
      "description": "index <threshold bytes>: spew changes to ent index, optionally only spewing if update is > than threshold bytes",
      "flags": "cheat"
  },
  {
      "name": "fp_trace",
      "description": "Toggle field path tracing to file.",
      "flags": ""
  },
  {
      "name": "net_captureculldata",
      "description": "Captures low-level data to replay path culling algorithm behavior in controlled unit test environment",
      "flags": ""
  },
  {
      "name": "net_validatemessages",
      "description": "Activates/deactivates net message validation",
      "flags": "cheat"
  },
  {
      "name": "net_listallmessages",
      "description": "List all registered net messages",
      "flags": "cheat"
  },
  {
      "name": "net_messageinfo",
      "description": "Display info about a message (by classname or id)",
      "flags": "cheat"
  },
  {
      "name": "net_channels",
      "description": "Shows net channel info",
      "flags": ""
  },
  {
      "name": "net_status",
      "description": "Shows current network status",
      "flags": ""
  },
  {
      "name": "net_connections_stats",
      "description": "Print detailed network statistics for each network connection",
      "flags": ""
  },
  {
      "name": "net_option",
      "description": "Get or set SteamNetworkingSockets options such as fake packet lag and loss",
      "flags": ""
  },
  {
      "name": "sdr",
      "description": "An old command that has been renamed to 'net_option'",
      "flags": ""
  },
  {
      "name": "net_fakelag",
      "description": "Shorthand for 'net_option FakePacketLag_Recv'",
      "flags": ""
  },
  {
      "name": "net_serializedentitymemory",
      "description": "Spew CSerializedEntity memory",
      "flags": ""
  },
  {
      "name": "net_serializedentitymetadatainfo",
      "description": "Spew CSerializedEntity metadata information",
      "flags": ""
  },
  {
      "name": "ik_debug_fabrik_backwards_iteration_toggle",
      "description": "",
      "flags": ""
  },
  {
      "name": "ik_debug_fabrik_forwards_iteration_toggle",
      "description": "",
      "flags": ""
  },
  {
      "name": "phys_debug_draw",
      "description": "Set up debug-draw of physics internal state",
      "flags": ""
  },
  {
      "name": "model_dump_convert_info",
      "description": "Print model load-time conversion info",
      "flags": "gamedll clientdll linked_concommand"
  },
  {
      "name": "print_model_bind_pose",
      "description": "Prints the bind pose of the specified model. Optionally limits to a particular bone and its parent chain, otherwise prints the entire skeleton.",
      "flags": ""
  },
  {
      "name": "reload_model",
      "description": "Force a reload of a vmdl resource",
      "flags": ""
  },
  {
      "name": "snd_front_headphone_position",
      "description": "Specifies the position (in degrees) of the virtual front left/right headphones.",
      "flags": ""
  },
  {
      "name": "snd_rear_headphone_position",
      "description": "Specifies the position  (in degrees) of the virtual rear left/right headphones.",
      "flags": ""
  },
  {
      "name": "snd_front_stereo_speaker_position",
      "description": "Specifies the position (in degrees) of the virtual front left/right speakers.",
      "flags": ""
  },
  {
      "name": "snd_rear_stereo_speaker_position",
      "description": "Specifies the position (in degrees) of the virtual rear left/right speakers.",
      "flags": ""
  },
  {
      "name": "snd_front_surround_speaker_position",
      "description": "Specifies the position (in degrees) of the virtual front left/right speakers.",
      "flags": ""
  },
  {
      "name": "snd_rear_surround_speaker_position",
      "description": "Specifies the position (in degrees) of the virtual rear left/right speakers.",
      "flags": ""
  },
  {
      "name": "snd_side_surround_speaker_position",
      "description": "Specifies the position (in degrees) of the virtual rear left/right speakers.",
      "flags": ""
  },
  {
      "name": "snd_headphone_pan_exponent",
      "description": "Specifies the exponent for the pan xfade from phone to phone if the \"exp\" pan law is being used.",
      "flags": ""
  },
  {
      "name": "snd_stereo_speaker_pan_exponent",
      "description": "Specifies the exponent for the pan xfade from speaker to speaker if the \"exp\" pan law is being used.",
      "flags": ""
  },
  {
      "name": "snd_surround_speaker_pan_exponent",
      "description": "Specifies the exponent for the pan xfade from speaker to speaker if the \"exp\" pan law is being used.",
      "flags": ""
  },
  {
      "name": "snd_headphone_pan_radial_weight",
      "description": "Apply cos(angle) * weight before pan law",
      "flags": ""
  },
  {
      "name": "snd_stereo_speaker_pan_radial_weight",
      "description": "Apply cos(angle) * weight before pan law",
      "flags": ""
  },
  {
      "name": "snd_surround_speaker_pan_radial_weight",
      "description": "Apply cos(angle) * weight before pan law",
      "flags": ""
  },
  {
      "name": "soundsysteminfo",
      "description": "Describe the current sound device without an active voice list.",
      "flags": ""
  },
  {
      "name": "play",
      "description": "Play a sound.",
      "flags": "server_can_execute"
  },
  {
      "name": "playvol",
      "description": "Play a sound at a specified volume.",
      "flags": ""
  },
  {
      "name": "stopsound",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "soundinfo",
      "description": "Describe the current sound device with an active voice list.",
      "flags": ""
  },
  {
      "name": "sndplaydelay",
      "description": "",
      "flags": ""
  },
  {
      "name": "snd_setmixer",
      "description": "Set named Mixgroup of current mixer to mix vol, mute, solo.",
      "flags": "cheat"
  },
  {
      "name": "snd_setmixlayer",
      "description": "Set named Mixgroup of named mix layer to mix vol, mute, solo.",
      "flags": "cheat"
  },
  {
      "name": "snd_soundmixer_setmixlayer_amount",
      "description": "Set named mix layer mix amount.",
      "flags": "cheat"
  },
  {
      "name": "snd_soundmixer_set_trigger_factor",
      "description": "Set named mix layer / mix group, trigger amount.",
      "flags": "cheat"
  },
  {
      "name": "snd_soundmixer_flush",
      "description": "Reload soundmixers.txt file.",
      "flags": ""
  },
  {
      "name": "snd_soundmixer_list_mixers",
      "description": "List all mixers to dev console.",
      "flags": ""
  },
  {
      "name": "snd_soundmixer_list_mix_layers",
      "description": "List all mix layers to dev console.",
      "flags": ""
  },
  {
      "name": "snd_soundmixer_list_mix_groups",
      "description": "List all mix groups to dev console.",
      "flags": ""
  },
  {
      "name": "snd_print_current_mixer_mixgroup",
      "description": "Get data related to mix group matching string",
      "flags": ""
  },
  {
      "name": "snd_async_flush",
      "description": "Flush all unlocked async audio data",
      "flags": ""
  },
  {
      "name": "snd_async_showmem",
      "description": "Show async memory stats",
      "flags": ""
  },
  {
      "name": "snd_async_showmem_summary",
      "description": "Show brief async memory stats",
      "flags": ""
  },
  {
      "name": "snd_async_showmem_music",
      "description": "Show async memory stats for just non-streamed music",
      "flags": ""
  },
  {
      "name": "movie_fixwave",
      "description": "Fixup corrupted .wav file if engine crashed during startmovie/endmovie, etc.",
      "flags": ""
  },
  {
      "name": "snd_compare_soundevents",
      "description": "Compare the compiled and loaded contents of 2 soundevents.",
      "flags": "cheat"
  },
  {
      "name": "snd_print_soundevent",
      "description": "Print the data associated with the specified soundevent.",
      "flags": "developmentonly vconsole_fuzzy_matching vconsole_set_focus"
  },
  {
      "name": "snd_print_soundevent_default_public_properties",
      "description": "Print the default public properties of a specified soundevent. Values do not reflect values set on the soundevent. For that see \"snd_print_soundevent\"",
      "flags": "developmentonly vconsole_fuzzy_matching vconsole_set_focus"
  },
  {
      "name": "snd_list_soundevents",
      "description": "List all available soundevents",
      "flags": "cheat"
  },
  {
      "name": "snd_list_deferred_soundevents",
      "description": "List all current deferred load soundevents",
      "flags": "cheat"
  },
  {
      "name": "snd_list_soundevents_by_stack",
      "description": "List all available soundevents using specified stack name",
      "flags": "cheat"
  },
  {
      "name": "snd_remove_soundevent",
      "description": "Remove the specified soundevent",
      "flags": "cheat"
  },
  {
      "name": "snd_remove_all_soundevents",
      "description": "Remove all soundevents",
      "flags": "cheat"
  },
  {
      "name": "snd_soundevent_clear_deferred",
      "description": "Clear the list of deferred soundevents for loading.",
      "flags": "cheat"
  },
  {
      "name": "snd_steamaudio_export_scene",
      "description": "Exports scene currently used by Steam Audio as a phononscene file.",
      "flags": "cheat"
  },
  {
      "name": "snd_steamaudio_probes_nearby",
      "description": "Load all the probes from a file and log the nearby probes within the radius.",
      "flags": ""
  },
  {
      "name": "snd_get_physics_surface_properties",
      "description": "Get physics surface properties for all the materials.",
      "flags": "cheat"
  },
  {
      "name": "snd_set_physics_surface_properties",
      "description": "Set physics surface properties for materials. Usage: <heuristic #> <commit>",
      "flags": "cheat"
  },
  {
      "name": "vmix_debug_list",
      "description": "Debug dump the list of available vmix graphs",
      "flags": ""
  },
  {
      "name": "vmix_input",
      "description": "Set an input mix value",
      "flags": "cheat"
  },
  {
      "name": "vmix_output",
      "description": "Dump main graph control output values",
      "flags": "cheat"
  },
  {
      "name": "soundlist",
      "description": "List all known sounds.",
      "flags": ""
  },
  {
      "name": "snd_cast",
      "description": "Casts a ray and starts a sound event where the ray hits. The sound event will retrigger periodically if cl_snd_cast_retrigger is set. The sound event will clear previous snd_cast events if cl_snd_cast_clear is set. Usage: snd_cast <eventname> [<retrigger time>] [<max distance>]. Arguments that are specified will become defaults for the remainder of the session.",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_test_soundmessage",
      "description": "test",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_pause_soundevent",
      "description": "Pause the specified soundevent in the list",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_unpause_soundevent",
      "description": "UnPause the first soundevent in the list",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_set_operator_field",
      "description": "Currently sets a single float operator field",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_set_operator_field_by_guid",
      "description": "Currently sets a single float operator field",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_get_operator_field_info",
      "description": "Currently gets info for a single operator field",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_soundevent_profile",
      "description": "Dump a record of current soundevents and profile data",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_flush_operators",
      "description": "Flush and re-parse the sound operator system",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_print_tool_properties",
      "description": "Prints the current state of tool properties.",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_resolve_execute_operator",
      "description": "Resolve the inputs and execute one specified operator from a specified stack",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_print_operator_stacks",
      "description": "Prints a list of currently available stacks",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_print_strings",
      "description": "Prints a list of currently cached strings",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_print_field_name_strings",
      "description": "Prints a list of currently cached field name strings",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_print_groups",
      "description": "Prints the current state of the groups system",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_print_operators",
      "description": "Prints a list of currently available operators",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_print_operator_stack",
      "description": "Prints a master list of currently exposed variables",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_print_operator_stack_opeator",
      "description": "Prints an operator from a stack",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_print_stack_exec_list",
      "description": "Prints the current stack execution list",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_start_soundevent",
      "description": "Starts a specified soundevent",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_start_soundevent_at_pos",
      "description": "Starts a specified soundevent at the given position",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_stop_soundevent_guid",
      "description": "Stops a specified soundevent",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_stop_soundevent_index",
      "description": "Stops a specified soundevent",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_stop_all_soundevents",
      "description": "Stops all soundevents currently on the execution list",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_print_class_sizes",
      "description": "Prints the sizes of relevant sos classes.",
      "flags": "cheat"
  },
  {
      "name": "snd_print_samplers",
      "description": "List all available samplers",
      "flags": "cheat"
  },
  {
      "name": "snd_samplers_play_note",
      "description": "Play a note from a specified sampler",
      "flags": "cheat"
  },
  {
      "name": "snd_samplers_stop_note",
      "description": "Stop a note from a specified sampler",
      "flags": "cheat"
  },
  {
      "name": "snd_print_sequences",
      "description": "List all available midi sequences",
      "flags": "cheat"
  },
  {
      "name": "snd_sequence_stop_track",
      "description": "Stops the specified track",
      "flags": "cheat"
  },
  {
      "name": "snd_sequence_stop_all_tracks",
      "description": "Stops all currently playing sequences",
      "flags": "cheat"
  },
  {
      "name": "snd_sequence_set_track_bpm",
      "description": "Sets the tempo of the specified track",
      "flags": "cheat"
  },
  {
      "name": "snd_sequence_set_track_transpose",
      "description": "Sets the transposition of the specified track",
      "flags": "cheat"
  },
  {
      "name": "snd_print_arrangements",
      "description": "List all available sequence arrangments",
      "flags": "cheat"
  },
  {
      "name": "snd_print_activetracks",
      "description": "List all active tracks",
      "flags": "cheat"
  },
  {
      "name": "snd_arrangement_start",
      "description": "Starts the specified arrangement.",
      "flags": "cheat"
  },
  {
      "name": "snd_vmidi_flush",
      "description": "Purge and reload all vmidi data and files.",
      "flags": "cheat"
  },
  {
      "name": "snd_steamaudio_halton_sequence",
      "description": "Generate Halton Sequence for a given order and number of samples.",
      "flags": "cheat"
  },
  {
      "name": "pixelvis_debug",
      "description": "Dump debug info",
      "flags": "cheat"
  },
  {
      "name": "sc_showclasses",
      "description": "List the object class names known by scenesystem.",
      "flags": "cheat"
  },
  {
      "name": "sc_setclassflags",
      "description": "Low level command to set the flags byte associated with an object class. sc_SetClassFlags <classname> <value>.",
      "flags": "cheat"
  },
  {
      "name": "sc_list_extradata_allocations",
      "description": "Prints out the overall extra data allocation counts",
      "flags": ""
  },
  {
      "name": "sc_listworlds",
      "description": "List all the active sceneworlds",
      "flags": "cheat"
  },
  {
      "name": "sc_dumpworld",
      "description": "Dump a list of the objects in a sceneworld (Usage: sc_dumpworld <world_index>)",
      "flags": "cheat"
  },
  {
      "name": "sc_dumpworld3d",
      "description": "Dump the objects in a sceneworld into a 3d geoview buffer (Usage: sc_dumpworld3d <world_index>)",
      "flags": "cheat"
  },
  {
      "name": "entity_lump_list",
      "description": "List all known entity lumps",
      "flags": ""
  },
  {
      "name": "entity_lump_spew",
      "description": "Dump the contents of an entity lump",
      "flags": ""
  },
  {
      "name": "world_layer_list",
      "description": "List all world layers",
      "flags": ""
  },
  {
      "name": "world_layer_set_visible",
      "description": "Show or hide the specified world layer",
      "flags": ""
  },
  {
      "name": "world_dump_loaded_worlds",
      "description": "Dump all of the worlds that we know about",
      "flags": ""
  },
  {
      "name": "cl_particles_dumplist",
      "description": "Dump all new particles, optional name substring.",
      "flags": "clientdll linked_concommand"
  },
  {
      "name": "cl_particles_dumpsimlist",
      "description": "Dump all simulating particles, optional name substring.",
      "flags": "clientdll linked_concommand"
  },
  {
      "name": "particle_reset_assertions",
      "description": "Causes all single-fire particle assertions to trigger once more.",
      "flags": "developmentonly"
  },
  {
      "name": "particle_stop_all",
      "description": "Stops all particle systems currently playing",
      "flags": "developmentonly clientdll cheat"
  },
  {
      "name": "dumpparticlelist",
      "description": "Print out information on existing particle systems",
      "flags": ""
  },
  {
      "name": "particle_profile",
      "description": "Profile particle",
      "flags": ""
  },
  {
      "name": "particle_profile_spike",
      "description": "Profile particle spike",
      "flags": ""
  },
  {
      "name": "tenfoot_pickle_dictionaries",
      "description": "compiles daisy wheel input dictionaries to more performant form",
      "flags": "clientdll linked_concommand"
  },
  {
      "name": "tenfoot_pickle_single_dictionary",
      "description": "[language] compiles one daisy wheel input dictionary",
      "flags": "clientdll linked_concommand"
  },
  {
      "name": "tenfoot_match",
      "description": "[prefix]: matches a string prefix",
      "flags": "clientdll linked_concommand"
  },
  {
      "name": "tenfoot_text_hotspots",
      "description": "find text autosuggest hot spots",
      "flags": "clientdll linked_concommand"
  },
  {
      "name": "nav_select_radius",
      "description": "Adds all areas in a radius to the selection set",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_toggle_selected_set",
      "description": "Toggles all areas into/out of the selected set.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_store_selected_set",
      "description": "Stores the current selected set for later retrieval.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_recall_selected_set",
      "description": "Re-selects the stored selected set.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_add_to_selected_set",
      "description": "Add current area to the selected set.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_add_to_selected_set_by_id",
      "description": "Add specified area id to the selected set.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_remove_from_selected_set",
      "description": "Remove current area from the selected set.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_toggle_in_selected_set",
      "description": "Remove current area from the selected set.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_clear_selected_set",
      "description": "Clear the selected set.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_begin_selecting",
      "description": "Start continuously adding to the selected set.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_end_selecting",
      "description": "Stop continuously adding to the selected set.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_begin_drag_selecting",
      "description": "Start dragging a selection area.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_end_drag_selecting",
      "description": "Stop dragging a selection area.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_begin_drag_deselecting",
      "description": "Start dragging a selection area.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_end_drag_deselecting",
      "description": "Stop dragging a selection area.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_raise_drag_volume_max",
      "description": "Raise the top of the drag select volume.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_lower_drag_volume_max",
      "description": "Lower the top of the drag select volume.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_raise_drag_volume_min",
      "description": "Raise the bottom of the drag select volume.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_lower_drag_volume_min",
      "description": "Lower the bottom of the drag select volume.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_toggle_selecting",
      "description": "Start or stop continuously adding to the selected set.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_begin_deselecting",
      "description": "Start continuously removing from the selected set.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_end_deselecting",
      "description": "Stop continuously removing from the selected set.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_toggle_deselecting",
      "description": "Start or stop continuously removing from the selected set.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_split",
      "description": "To split an Area into two, align the split line using your cursor and invoke the split command.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_mark",
      "description": "Marks the Area or Ladder under the cursor for manipulation by subsequent editing commands.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_unmark",
      "description": "Clears the marked Area or Ladder.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_disconnect",
      "description": "To disconnect two Areas, mark an Area, highlight a second Area, then invoke the disconnect command. This will remove all connections between the two Areas.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_avoid",
      "description": "Toggles the 'avoid this area when possible' flag used by the AI system.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_level_hull",
      "description": "Find entities that intrude into the nav mesh.  List those entities in console output, and display bounding boxes around them for a while.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_level_hull_move",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_clear_attributes",
      "description": "Clear all nav attributes of selected area.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_clear_attribute",
      "description": "Remove given nav attribute from all areas in the selected set.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_mark_attribute",
      "description": "Set nav attribute for all areas in the selected set.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_select_with_attribute",
      "description": "Selects areas with the given attribute.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_switch",
      "description": "Switches to navmesh for the specified spawngroup",
      "flags": "gamedll"
  },
  {
      "name": "noclip",
      "description": "Toggle. Player becomes non-solid and flies.  Optional argument of 0 or 1 to force enable/disable",
      "flags": "gamedll cheat missing4"
  },
  {
      "name": "weapon_switch",
      "description": "Use a particular weapon   .Arguments: <weapon_name>",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "remove_weapon",
      "description": "Remove a weapon held by the player..      Arguments: <weapon subclass name>",
      "flags": "gamedll cheat missing4"
  },
  {
      "name": "sv_record_bone_setup_stats",
      "description": "generate bone setup statistics",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "rr_forceconcept",
      "description": "fire a response concept directly at a given character..USAGE: rr_forceconcept <target> <concept> \"criteria1:value1,criteria2:value2,...\".criteria values are optional..",
      "flags": "gamedll cheat"
  },
  {
      "name": "firetarget",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_fire",
      "description": "Usage:.   ent_fire <target> [action] [value] [delay].",
      "flags": "gamedll cheat vconsole_fuzzy_matching"
  },
  {
      "name": "ent_cancelpendingentfires",
      "description": "Cancels all ent_fire created outputs that are currently waiting for their delay to expire.",
      "flags": "gamedll"
  },
  {
      "name": "ent_fire_output",
      "description": "Usage:.   ent_fire_output <target> [output name] [value] [delay].",
      "flags": "gamedll cheat vconsole_fuzzy_matching"
  },
  {
      "name": "ent_info",
      "description": "Usage:.   ent_info <class name>.",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_show_response_criteria",
      "description": "Print, to the console, an entity's current criteria set used to select responses..   Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_autoaim",
      "description": "Displays the entity's autoaim radius..      Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_create",
      "description": "Creates an entity of the given designer or subclass name where the player is looking.",
      "flags": "gamedll cheat vconsole_fuzzy_matching"
  },
  {
      "name": "subclass_create",
      "description": "Creates an entity of the given subclass where the player is looking.",
      "flags": "gamedll cheat vconsole_fuzzy_matching"
  },
  {
      "name": "subclass_change",
      "description": "Changes the subclass of the given entity..      Arguments:      <new_subclass> {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat vconsole_fuzzy_matching"
  },
  {
      "name": "ent_teleport",
      "description": "Teleport the specified entity to where the player is looking..     Format: ent_teleport <entity name>",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_orient",
      "description": "Orient the specified entity to match the player's angles. By default, only orients target entity's YAW. Use the 'allangles' option to orient on all axis..   Format: ent_orient <entity name> <optional: allangles>",
      "flags": "gamedll cheat"
  },
  {
      "name": "respawn_player",
      "description": "Respawns the player from death!.",
      "flags": "gamedll cheat"
  },
  {
      "name": "replay_start",
      "description": "Start GOTV replay: replay_start <delay> [<player name or index>]",
      "flags": "gamedll cheat missing4"
  },
  {
      "name": "replay_death",
      "description": "start hltv replay of last death",
      "flags": "gamedll cheat"
  },
  {
      "name": "replay_stop",
      "description": "stop hltv replay",
      "flags": "gamedll missing4"
  },
  {
      "name": "telemetry_message",
      "description": "Place a message in the telemetry timeline",
      "flags": "gamedll cheat"
  },
  {
      "name": "telemetry_toggle_timespan",
      "description": "Starts/stops a timespan with an ever increasing name.",
      "flags": "gamedll cheat"
  },
  {
      "name": "rangefinder",
      "description": "Measures distance along a ray",
      "flags": "gamedll cheat"
  },
  {
      "name": "cast_ray",
      "description": "Tests ray cast",
      "flags": "gamedll cheat"
  },
  {
      "name": "cast_sphere",
      "description": "Tests sphere cast",
      "flags": "gamedll cheat"
  },
  {
      "name": "cast_aabb",
      "description": "Tests box collision detection",
      "flags": "gamedll cheat"
  },
  {
      "name": "cast_capsule",
      "description": "Tests capsule collision detection",
      "flags": "gamedll cheat"
  },
  {
      "name": "cast_convex",
      "description": "Tests convex hull collision detection",
      "flags": "gamedll cheat"
  },
  {
      "name": "cast_cylinder",
      "description": "Tests cylinder collision detection",
      "flags": "gamedll cheat"
  },
  {
      "name": "cast_obb",
      "description": "Tests cylinder collision detection",
      "flags": "gamedll cheat"
  },
  {
      "name": "cast_physics",
      "description": "Tests physics shape collision detection",
      "flags": "gamedll cheat"
  },
  {
      "name": "cast_intervals",
      "description": "Tests interval ray cast",
      "flags": "gamedll cheat"
  },
  {
      "name": "kill",
      "description": "Kills the player with generic damage",
      "flags": "gamedll cheat missing4"
  },
  {
      "name": "explode",
      "description": "Kills the player with explosive damage",
      "flags": "gamedll cheat missing4"
  },
  {
      "name": "killvector",
      "description": "Kills a player applying force. Usage: killvector <player> <x value> <y value> <z value>",
      "flags": "gamedll cheat missing4"
  },
  {
      "name": "explodevector",
      "description": "Kills a player applying an explosive force. Usage: explodevector <player> <x value> <y value> <z value>",
      "flags": "gamedll cheat missing4"
  },
  {
      "name": "say",
      "description": "Display player message",
      "flags": "gamedll missing4"
  },
  {
      "name": "say_team",
      "description": "Display player message to team",
      "flags": "gamedll missing4"
  },
  {
      "name": "give",
      "description": "Give item to player..      Arguments: <item_name>",
      "flags": "gamedll vconsole_fuzzy_matching missing4"
  },
  {
      "name": "setmodel",
      "description": "Changes's player's model",
      "flags": "gamedll cheat"
  },
  {
      "name": "test_dispatcheffect",
      "description": "Test a clientside dispatch effect.. Usage: test_dispatcheffect <effect name> <distance away> <flags> <magnitude> <scale>.   Defaults are: <distance 1024> <flags 0> <magnitude 0> <scale 0>.",
      "flags": "gamedll cheat"
  },
  {
      "name": "god",
      "description": "Toggle by default, or 0 to disable and 1 to enable. Player becomes invulnerable.",
      "flags": "gamedll cheat missing4"
  },
  {
      "name": "setpos",
      "description": "Move player to specified origin (must have sv_cheats).",
      "flags": "gamedll cheat missing4"
  },
  {
      "name": "setpos_player",
      "description": "Move specified player to specified origin (must have sv_cheats).",
      "flags": "gamedll cheat missing4"
  },
  {
      "name": "setang",
      "description": "Snap player eyes to specified pitch yaw <roll:optional> (must have sv_cheats).",
      "flags": "gamedll cheat missing4"
  },
  {
      "name": "setpos_exact",
      "description": "Move player to an exact specified origin (must have sv_cheats).",
      "flags": "gamedll cheat missing4"
  },
  {
      "name": "setang_exact",
      "description": "Snap player eyes and orientation to specified pitch yaw <roll:optional> (must have sv_cheats).",
      "flags": "gamedll cheat missing4"
  },
  {
      "name": "notarget",
      "description": "Toggle. Player becomes hidden to NPCs.",
      "flags": "gamedll cheat missing4"
  },
  {
      "name": "hurtme",
      "description": "Hurts the player..       Arguments: <health to lose>",
      "flags": "gamedll cheat missing4"
  },
  {
      "name": "groundlist",
      "description": "Display ground entity list <index>",
      "flags": "developmentonly gamedll cheat"
  },
  {
      "name": "steamvrevent_quit",
      "description": "steamvrevent_quit",
      "flags": "gamedll missing0"
  },
  {
      "name": "commentary_cvarsnotchanging",
      "description": "",
      "flags": "gamedll"
  },
  {
      "name": "commentary_finishnode",
      "description": "",
      "flags": "gamedll missing4"
  },
  {
      "name": "test_entity_blocker",
      "description": "Test command that drops an entity blocker out in front of the player.",
      "flags": "gamedll cheat"
  },
  {
      "name": "dbghist_addline",
      "description": "Add a line to the debug history. Format: <category id> <line>",
      "flags": "gamedll"
  },
  {
      "name": "dbghist_dump",
      "description": "Dump the debug history to the console. Format: <category id>.    Categories:.     0: Entity I/O.     1: AI Decisions.     2: Scene Print.     3: Alyx Blind.     4: Log of damage done to player.   5: Player Teleport.     6: Blind Zombie Sounds.         7: Player Continuous.",
      "flags": "gamedll"
  },
  {
      "name": "create_flashlight",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "fadeout",
      "description": "fadeout {time r g b}: Fades the screen to black or to the specified color over the given number of seconds.",
      "flags": "gamedll cheat"
  },
  {
      "name": "fadein",
      "description": "fadein {time r g b}: Fades the screen in from black or from the specified color over the given number of seconds.",
      "flags": "gamedll cheat"
  },
  {
      "name": "creditsdone",
      "description": "",
      "flags": "gamedll"
  },
  {
      "name": "shake",
      "description": "Shake the screen.",
      "flags": "gamedll cheat"
  },
  {
      "name": "shatterglass_restore",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "shatterglass_break",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "dump_globals",
      "description": "Dump all global entities/states",
      "flags": "gamedll"
  },
  {
      "name": "tv_msg",
      "description": "Send a screen message to all clients.",
      "flags": "gamedll"
  },
  {
      "name": "global_set",
      "description": "global_set <globalname> <state>: Sets the state of the given env_global (0 = OFF, 1 = ON, 2 = DEAD).",
      "flags": "gamedll cheat"
  },
  {
      "name": "markup_group_spew",
      "description": "Spew all current markup groups and their members",
      "flags": "gamedll cheat"
  },
  {
      "name": "markup_group_ent_text",
      "description": "markup_group_ent_text <markup_group name> -> toggle ent_text for all members of the named markup group",
      "flags": "gamedll cheat"
  },
  {
      "name": "markup_group_ent_bbox",
      "description": "markup_group_ent_bbox <markup_group name> -> toggle ent_bbox for all members of the named markup group",
      "flags": "gamedll cheat"
  },
  {
      "name": "particle_test_start",
      "description": "Dispatches the test particle system with the parameters specified in particle_test_file,. particle_test_attach_mode and particle_test_attach_param on the entity the player is looking at.. Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "particle_test_stop",
      "description": "Stops all particle systems on the selected entities..        Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "particle_test_create",
      "description": "Creates the named particle system where the player is looking..    Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "particle_test_destroy",
      "description": "Destroys all particle systems matching the specified name..       Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "surfaceprop",
      "description": "Reports the surface properties at the cursor",
      "flags": "gamedll cheat"
  },
  {
      "name": "physics_debug_entity",
      "description": "Dumps debug info for an entity",
      "flags": "gamedll"
  },
  {
      "name": "phys_mark_debug",
      "description": "Mark object for debug",
      "flags": "gamedll cheat"
  },
  {
      "name": "phys_shoot",
      "description": "Shoots a phys object.",
      "flags": "gamedll cheat"
  },
  {
      "name": "prop_physics_create",
      "description": "Creates a physics prop with a specific .vmdl aimed away from where the player is looking..  Arguments: {.vmdl name}",
      "flags": "gamedll cheat"
  },
  {
      "name": "collect_entity_model_name",
      "description": "Collect model names of the entities you're pointing at",
      "flags": "gamedll cheat"
  },
  {
      "name": "prop_dynamic_create",
      "description": "Creates a dynamic prop with a specific .vmdl aimed away from where the player is looking..  Arguments: {.vmdl name}",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_rotate",
      "description": "Rotates an entity by a specified # of degrees",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_characterize",
      "description": "Spew PVS debug info for entity",
      "flags": "gamedll"
  },
  {
      "name": "sv_querycache_stats",
      "description": "Display status of the query cache (client only)",
      "flags": "gamedll"
  },
  {
      "name": "scene_playvcd",
      "description": "Play the given VCD as an instanced scripted scene.",
      "flags": "gamedll cheat"
  },
  {
      "name": "listRecentNPCSpeech",
      "description": "Displays a list of the last 5 lines of speech from NPCs.",
      "flags": "gamedll dontrecord"
  },
  {
      "name": "scene_flush",
      "description": "Flush all .vcds from the cache and reload from disk.",
      "flags": "gamedll"
  },
  {
      "name": "report_soundpatch",
      "description": "reports sound patch count",
      "flags": "gamedll"
  },
  {
      "name": "soundscape_flush",
      "description": "Flushes the server & client side soundscapes",
      "flags": "gamedll"
  },
  {
      "name": "sv_soundscape_printdebuginfo",
      "description": "print soundscapes",
      "flags": "gamedll cheat"
  },
  {
      "name": "Test_EHandle",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "Test_CreateEntity",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "Test_RandomPlayerPosition",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "showtriggers_toggle",
      "description": "Displays the movement bounding box for the triggers in orange.  Some entites will also display entity specific overlays..   Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "showtriggers",
      "description": "Enable or Disable showing trigger entities",
      "flags": "gamedll cheat"
  },
  {
      "name": "server_game_time",
      "description": "Gives the game time in seconds (server's curtime)",
      "flags": "gamedll"
  },
  {
      "name": "sv_dev_simulate_gcdown",
      "description": "<state> Turn on/off simulated GC communications failure (GC is down in a way that we know it is down)",
      "flags": "gamedll"
  },
  {
      "name": "nav_delete",
      "description": "Deletes the currently highlighted Area.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_delete_marked",
      "description": "Deletes the currently marked Area (if any).",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_delete_all_hull",
      "description": "Deletes all areas with given hull category.",
      "flags": "gamedll cheat"
  },
  {
      "name": "script_remove_watch_pattern",
      "description": "Remove a watch from the game debug overlay",
      "flags": "gamedll cheat"
  },
  {
      "name": "script_add_debug_filter",
      "description": "Add a filter to the game debug overlay",
      "flags": "gamedll cheat"
  },
  {
      "name": "script_remove_debug_filter",
      "description": "Remove a filter from the game debug overlay",
      "flags": "gamedll cheat"
  },
  {
      "name": "script_trace_enable",
      "description": "Turn on a particular trace output by file or function name",
      "flags": "gamedll cheat"
  },
  {
      "name": "script_trace_disable",
      "description": "Turn off a particular trace output by file or function name",
      "flags": "gamedll cheat"
  },
  {
      "name": "script_trace_enable_key",
      "description": "Turn on a particular trace output by table/instance",
      "flags": "gamedll cheat"
  },
  {
      "name": "script_trace_disable_key",
      "description": "Turn off a particular trace output by table/instance",
      "flags": "gamedll cheat"
  },
  {
      "name": "script_trace_enable_all",
      "description": "Turn on all trace output",
      "flags": "gamedll cheat"
  },
  {
      "name": "script_trace_disable_all",
      "description": "Turn off all trace output",
      "flags": "gamedll cheat"
  },
  {
      "name": "script_clear_watches",
      "description": "Clear all watches from the game debug overlay",
      "flags": "gamedll cheat"
  },
  {
      "name": "script_find",
      "description": "Find a key in the VM",
      "flags": "gamedll cheat"
  },
  {
      "name": "script_resurrect_unreachable",
      "description": "Use the garbage collector to track down reference cycles",
      "flags": "gamedll cheat"
  },
  {
      "name": "script_reload_code",
      "description": "Execute a vscript file, replacing existing functions with the functions in the run script",
      "flags": "gamedll cheat"
  },
  {
      "name": "script_reload_entity_code",
      "description": "Execute all of this entity's VScripts, replacing existing functions with the functions in the run scripts",
      "flags": "gamedll cheat"
  },
  {
      "name": "script_help",
      "description": "Output help for script functions",
      "flags": "gamedll cheat"
  },
  {
      "name": "script_help2",
      "description": "Output help for script functions suitable for auto-completion",
      "flags": "gamedll"
  },
  {
      "name": "script_dump_all",
      "description": "Dump the state of the VM to the console",
      "flags": "gamedll cheat"
  },
  {
      "name": "print_mapgroup_sv",
      "description": "Prints the current mapgroup and the contained maps",
      "flags": "gamedll release"
  },
  {
      "name": "send_round_backup_file_list",
      "description": "",
      "flags": "gamedll missing0 release"
  },
  {
      "name": "mp_backup_restore_list_files",
      "description": "Lists recent backup round files matching the prefix, most recent files first, accepts a numeric parameter to limit the number of files displayed",
      "flags": "gamedll release"
  },
  {
      "name": "mp_backup_restore_load_file",
      "description": "Loads player cash, KDA, scores and team scores; resets to the next round after the backup",
      "flags": "gamedll release"
  },
  {
      "name": "timeout_terrorist_start",
      "description": "",
      "flags": "gamedll"
  },
  {
      "name": "timeout_ct_start",
      "description": "",
      "flags": "gamedll"
  },
  {
      "name": "mp_warmup_start",
      "description": "Start warmup.",
      "flags": "gamedll"
  },
  {
      "name": "mp_warmup_end",
      "description": "End warmup immediately.",
      "flags": "gamedll"
  },
  {
      "name": "endround",
      "description": "End the current round.",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_list_report",
      "description": "Reports all list of all entities in a map, one by one",
      "flags": "gamedll"
  },
  {
      "name": "tv_time_remaining",
      "description": "Print remaining tv broadcast time",
      "flags": "gamedll release"
  },
  {
      "name": "mp_guardian_emit_bounds_config",
      "description": "mp_guardian_emit_bounds_config",
      "flags": "gamedll"
  },
  {
      "name": "mp_guardian_add_bounds_pt",
      "description": "mp_guardian_add_bounds_pt",
      "flags": "gamedll"
  },
  {
      "name": "mp_guardian_shoot_point",
      "description": "mp_guardian_shoot_point",
      "flags": "gamedll"
  },
  {
      "name": "mp_guardian_clear_all_bounds",
      "description": "mp_guardian_clear_all_bounds",
      "flags": "gamedll"
  },
  {
      "name": "mp_guardian_new_bounds",
      "description": "mp_guardian_new_bounds",
      "flags": "gamedll"
  },
  {
      "name": "mp_guardian_bomb_plant_emit_bounds_config",
      "description": "mp_guardian_bomb_plant_emit_bounds_config",
      "flags": "gamedll"
  },
  {
      "name": "mp_guardian_bomb_plant_add_bounds_pt",
      "description": "mp_guardian_bomb_plant_add_bounds_pt",
      "flags": "gamedll"
  },
  {
      "name": "mp_guardian_bomb_plant_clear_all_bounds",
      "description": "mp_guardian_bomb_plant_clear_all_bounds",
      "flags": "gamedll"
  },
  {
      "name": "mp_guardian_bomb_plant_new_bounds",
      "description": "mp_guardian_bomb_plant_new_bounds",
      "flags": "gamedll"
  },
  {
      "name": "mp_guardian_clear_all_player_spawns",
      "description": "mp_guardian_clear_all_player_spawns",
      "flags": "gamedll"
  },
  {
      "name": "mp_guardian_add_player_spawn_pt",
      "description": "mp_guardian_add_player_spawn_pt",
      "flags": "gamedll"
  },
  {
      "name": "mp_dump_timers",
      "description": "Prints round timers to the console for debugging",
      "flags": "gamedll"
  },
  {
      "name": "mp_debug_timeouts",
      "description": "Prints time outs to the console for debugging",
      "flags": "gamedll"
  },
  {
      "name": "mp_scrambleteams",
      "description": "Scramble the teams and restart the game",
      "flags": "gamedll"
  },
  {
      "name": "mp_swapteams",
      "description": "Swap the teams and restart the game",
      "flags": "gamedll"
  },
  {
      "name": "mp_pause_match",
      "description": "Pause the match in the next freeze time",
      "flags": "gamedll"
  },
  {
      "name": "mp_unpause_match",
      "description": "Resume the match",
      "flags": "gamedll"
  },
  {
      "name": "map_showspawnpoints",
      "description": "Shows player spawn points (red=invalid). Optionally pass in the duration.",
      "flags": "gamedll"
  },
  {
      "name": "map_showbombradius",
      "description": "Shows bomb radius from the center of each bomb site and planted bomb.",
      "flags": "gamedll cheat"
  },
  {
      "name": "map_setbombradius",
      "description": "Sets the bomb radius for the map.",
      "flags": "gamedll cheat"
  },
  {
      "name": "sv_game_mode_convars",
      "description": "Display the values of the convars for the current game_mode.",
      "flags": "gamedll"
  },
  {
      "name": "mapgroup",
      "description": "Specify a map group",
      "flags": "gamedll dontrecord"
  },
  {
      "name": "sv_throw_decoygrenade",
      "description": "throw decoy grenade with parmas.",
      "flags": "developmentonly gamedll cheat"
  },
  {
      "name": "sv_throw_molotov",
      "description": "throw molotov grenade with parmas.",
      "flags": "developmentonly gamedll cheat"
  },
  {
      "name": "sv_throw_smokegrenade",
      "description": "throw smoke grenade with parmas.",
      "flags": "developmentonly gamedll cheat"
  },
  {
      "name": "sv_rethrow_last_grenade",
      "description": "Emit the last grenade thrown on the server.",
      "flags": "gamedll cheat"
  },
  {
      "name": "clear_bombs",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "sv_cs_dump_econ_item_stringtable",
      "description": "sv_cs_dump_econ_item_stringtable",
      "flags": "gamedll"
  },
  {
      "name": "timeleft",
      "description": "prints the time remaining in the match",
      "flags": "gamedll missing4"
  },
  {
      "name": "observer_use",
      "description": "",
      "flags": "gamedll missing4"
  },
  {
      "name": "player_ping",
      "description": "Creates a ping notification where the player is looking.",
      "flags": "gamedll missing4"
  },
  {
      "name": "sv_dz_reset_danger_zone",
      "description": "",
      "flags": "gamedll"
  },
  {
      "name": "sv_dz_paradrop",
      "description": "",
      "flags": "gamedll"
  },
  {
      "name": "dz_shuffle_teams",
      "description": "Shuffle all teams for Danger Zone",
      "flags": "gamedll"
  },
  {
      "name": "dz_jointeam",
      "description": "dz_jointeam team# [slot#|name] - Join DZ team N (0 to leave your team).  Server admins can assign other players to teams.",
      "flags": "gamedll missing4"
  },
  {
      "name": "dz_clearteams",
      "description": "Clear all DZ teams",
      "flags": "gamedll"
  },
  {
      "name": "survival_check_num_possible_final_zone",
      "description": "print out a number of all possible final zone",
      "flags": "gamedll"
  },
  {
      "name": "rr_reloadresponsesystems",
      "description": "Reload all response system scripts.",
      "flags": "gamedll cheat"
  },
  {
      "name": "rr_findrules",
      "description": "Search and list rules by substring.",
      "flags": "gamedll"
  },
  {
      "name": "rr_findrules_verbose",
      "description": "Search and list rules by substring.",
      "flags": "gamedll"
  },
  {
      "name": "animevents_dump",
      "description": "List all the currently registered anim events..",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_animgraph_debug",
      "description": "Displays debug draws about the given entity(ies) animgraph. Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "mp_disable_autokick",
      "description": "Prevents a userid from being auto-kicked",
      "flags": "gamedll"
  },
  {
      "name": "givecurrentammo",
      "description": "Give a supply of ammo for current weapon...",
      "flags": "gamedll cheat"
  },
  {
      "name": "prop_debug",
      "description": "Toggle prop debug mode. If on, props will show colorcoded bounding boxes. Red means ignore all damage. White means respond physically to damage but never break. Green maps health in the range of 100 down to 1.",
      "flags": "gamedll cheat"
  },
  {
      "name": "debugoverlay_toggle",
      "description": "Toggles visibility of the debug overlay system.",
      "flags": "gamedll cheat"
  },
  {
      "name": "debugoverlay_cycle_domain",
      "description": "Toggles visibility of the debug overlay system.",
      "flags": "gamedll cheat"
  },
  {
      "name": "debugoverlay_cycle_state",
      "description": "Toggles visibility of the debug overlay system.",
      "flags": "gamedll cheat"
  },
  {
      "name": "debugoverlay_hide_imgui",
      "description": "Hides the overlay.",
      "flags": "gamedll cheat"
  },
  {
      "name": "imgui_set_selection",
      "description": "Sets ImGui selection",
      "flags": "gamedll cheat"
  },
  {
      "name": "imgui_set_status_text",
      "description": "Sets ImGui header status text",
      "flags": "gamedll cheat"
  },
  {
      "name": "save_set_subdirectory",
      "description": "",
      "flags": "gamedll replicated"
  },
  {
      "name": "save_clear_subdirectory",
      "description": "",
      "flags": "gamedll replicated"
  },
  {
      "name": "save",
      "description": "Save Game",
      "flags": "gamedll dontrecord"
  },
  {
      "name": "autosavedangerous",
      "description": "AutoSaveDangerous",
      "flags": "gamedll"
  },
  {
      "name": "autosave",
      "description": "Autosave",
      "flags": "gamedll"
  },
  {
      "name": "autosavedangerousissafe",
      "description": "",
      "flags": "gamedll"
  },
  {
      "name": "save_finish_async",
      "description": "",
      "flags": "gamedll"
  },
  {
      "name": "save_showelapsedtime",
      "description": "display up-to-date elapsed play time",
      "flags": "gamedll"
  },
  {
      "name": "save_watchclass",
      "description": "Restrict spew to entities with matching classname",
      "flags": "gamedll"
  },
  {
      "name": "save_watchentity",
      "description": "Restrict spew to entity index",
      "flags": "gamedll"
  },
  {
      "name": "report_entities",
      "description": "Lists all entities",
      "flags": "developmentonly gamedll cheat"
  },
  {
      "name": "ents",
      "description": "List server entities, sorted by spawn group",
      "flags": "gamedll"
  },
  {
      "name": "ent_spew_derived_classes",
      "description": "Prints out all entity classes which inherit from a specified base class",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "net_reloadgameevents",
      "description": "Reload the game events",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "gameevents_dumptofile",
      "description": "write gameevents keyvalues (sorted by name) to gameevents_<modname>.txt",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "gameevents_analyze",
      "description": "compare game events across all mods",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "ent_debug_origin_changes",
      "description": "turn on, off, or toggle origin changes on server for entity by index",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "_resetgamestats",
      "description": "Erases current game stats and writes out a blank stats file",
      "flags": "gamedll"
  },
  {
      "name": "ent_viewentity",
      "description": "Selects the picked entity as the view entity",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "ent_viewpunch",
      "description": "Used to debug ViewPunch",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "in_forcebuttonstate",
      "description": "Forces a button to be a particular state - WHEN PROCESSING USERCOMMANDS",
      "flags": "developmentonly gamedll vconsole_fuzzy_matching"
  },
  {
      "name": "sv_load_forced_client_names_file",
      "description": "Loads a file containing SteamID64 names for clients",
      "flags": "gamedll release"
  },
  {
      "name": "sv_load_random_client_names_file",
      "description": "Loads a file containing random name words for clients",
      "flags": "gamedll release"
  },
  {
      "name": "host_workshop_map",
      "description": "Get the latest version of the map and host it on this server.",
      "flags": "gamedll"
  },
  {
      "name": "host_workshop_collection",
      "description": "Host a workshop map collection as a mapgroup",
      "flags": "gamedll"
  },
  {
      "name": "buyrandom",
      "description": "Buy random primary and secondary. Primarily for deathmatch where cost is not an issue.",
      "flags": "gamedll missing4"
  },
  {
      "name": "traceattack",
      "description": "traceattack damage hitgroup",
      "flags": "gamedll"
  },
  {
      "name": "CreatePredictionError",
      "description": "Create a prediction error",
      "flags": "gamedll cheat"
  },
  {
      "name": "listissues",
      "description": "List all the issues that can be voted on.",
      "flags": "gamedll missing4"
  },
  {
      "name": "callvote",
      "description": "Start a vote on an issue.",
      "flags": "gamedll missing4"
  },
  {
      "name": "server_snd_cast",
      "description": "Casts a ray and starts a sound event where the ray hits. The sound event will retrigger periodically. Usage: snd_cast <eventname> [<retrigger time>] [<max distance>]. Arguments that are specified will become defaults for the remainder of the session.",
      "flags": "gamedll cheat"
  },
  {
      "name": "mp_bot_ai_bt_clear_cache",
      "description": "Clears the cache for behavior tree files.",
      "flags": "gamedll release"
  },
  {
      "name": "bot_place",
      "description": "bot_place - Places a bot from the map at where the local player is pointing.",
      "flags": "gamedll cheat"
  },
  {
      "name": "bot_add",
      "description": "bot_add <t|ct> <type> <difficulty> <name> - Adds a bot matching the given criteria.",
      "flags": "gamedll"
  },
  {
      "name": "bot_add_t",
      "description": "bot_add_t <type> <difficulty> <name> - Adds a terrorist bot matching the given criteria.",
      "flags": "gamedll"
  },
  {
      "name": "bot_add_ct",
      "description": "bot_add_ct <type> <difficulty> <name> - Adds a Counter-Terrorist bot matching the given criteria.",
      "flags": "gamedll"
  },
  {
      "name": "bot_kill",
      "description": "bot_kill <all> <t|ct> <type> <difficulty> <name> - Kills a specific bot, or all bots, matching the given criteria.",
      "flags": "gamedll cheat"
  },
  {
      "name": "bot_kick",
      "description": "bot_kick <all> <t|ct> <type> <difficulty> <name> - Kicks a specific bot, or all bots, matching the given criteria.",
      "flags": "gamedll"
  },
  {
      "name": "bot_knives_only",
      "description": "Restricts the bots to only using knives",
      "flags": "gamedll"
  },
  {
      "name": "bot_pistols_only",
      "description": "Restricts the bots to only using pistols",
      "flags": "gamedll"
  },
  {
      "name": "bot_snipers_only",
      "description": "Restricts the bots to only using sniper rifles",
      "flags": "gamedll"
  },
  {
      "name": "bot_all_weapons",
      "description": "Allows the bots to use all weapons",
      "flags": "gamedll"
  },
  {
      "name": "bot_goto_mark",
      "description": "Sends a bot to the marked nav area (useful for testing navigation meshes)",
      "flags": "gamedll cheat"
  },
  {
      "name": "bot_goto_selected",
      "description": "Sends a bot to the selected nav area (useful for testing navigation meshes)",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_check_connectivity",
      "description": "Checks to be sure every (or just the marked) nav area can get to every goal area for the map (hostages or bomb site).",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_precise",
      "description": "Toggles the 'dont avoid obstacles' flag used by the AI system.",
      "flags": "gamedll cheat"
  },
  {
      "name": "dm_reset_spawns",
      "description": "",
      "flags": "gamedll"
  },
  {
      "name": "sv_throw_flashgrenade",
      "description": "throw flash grenade with parmas.",
      "flags": "developmentonly gamedll cheat"
  },
  {
      "name": "sv_throw_hegrenade",
      "description": "throw HEgrenade with parmas.",
      "flags": "developmentonly gamedll cheat"
  },
  {
      "name": "ent_text_filter",
      "description": "Set which ent_text filters you want:",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_setpos",
      "description": "Move entity to position",
      "flags": "gamedll cheat missing4"
  },
  {
      "name": "ent_setang",
      "description": "Set entity angles",
      "flags": "gamedll cheat missing4"
  },
  {
      "name": "ent_call",
      "description": "ent_call <funcname> <option:entname> calls function on current look target or filtername, checks on ent, then root, then mode, then map scope",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_script_dump",
      "description": "Dumps the names and values of this entity's script scope to the console.        Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_setname",
      "description": "Sets the targetname of the given entity(s). Arguments:      <new entity name> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_find",
      "description": "Find and list all entities with classnames or targetnames that contain the specified substring..Format: find_ent <substring>.",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_find_index",
      "description": "Display data for entity matching specified index..Format: find_ent_index <index>.",
      "flags": "gamedll cheat"
  },
  {
      "name": "dump_animgraph_list",
      "description": "Displays stats about which animations are updating",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "anim_eval_stats",
      "description": "Displays stats about how many EvaluatePose calls are unused",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "ent_grab",
      "description": "grabs the object in front of the player. Options: -loose -multiple -toggle",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_ungrab",
      "description": "un-grabs all objects",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_name",
      "description": "Displays the entity name",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_actornames",
      "description": "Displays the entity name for all entities that have ShouldDisplayInActorNames true in code",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_text",
      "description": "Displays text debugging information about the given entity(ies) on top of the entity (See Overlay Text).",
      "flags": ""
  },
  {
      "name": "Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "description": "clientdll cheat",
      "flags": ""
  },
  {
      "name": "ent_text_radius",
      "description": "Displays text debugging information about the given entity(ies) [near the player] on top of the entity (See Overlay Text).      2 Arguments:    <Radius> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_text256",
      "description": "Displays text debugging information about the given entity(ies) [within 256 units of the player] on top of the entity (See Overlay Text).   Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_text_clear",
      "description": "Hide text debugging information about the given entity(ies) on top of the entity (See Overlay Text).",
      "flags": ""
  },
  {
      "name": "ent_text_sticky_add",
      "description": "Adds to list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text).    Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_text_sticky_remove",
      "description": "Removes from the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text).        Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_text_sticky_clear",
      "description": "Clears the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text).       Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_text_sticky_dump",
      "description": "Spews the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text). Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_bbox",
      "description": "Displays the movement bounding box for the given entity(ies) in orange.  Some entites will also display entity specific overlays..     Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_absbox",
      "description": "Displays the total bounding box for the given entity(s) in green.  Some entites will also display entity specific overlays.. Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_attachments",
      "description": "Displays the attachment points on an entity..   Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_joints",
      "description": "Displays the joint names + axes an entity..  Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_viewoffset",
      "description": "Displays the eye position for the given entity(ies) in red..     Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_pivot",
      "description": "Displays the pivot for the given entity(ies)..        (y=up=green, z=forward=blue, x=left=red). .     Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_skeleton",
      "description": "Displays the skeleton for the given entity(ies)..  Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_hitbox",
      "description": "Displays the hitboxes for the given entity(ies)..    Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_vcollide_wireframe",
      "description": "Displays the interpolated vcollide wireframe pm am entity..      Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_select",
      "description": "Select or deselects the given entities(s) for later manipulation.    Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_messages",
      "description": "Toggles input/output message display for the selected entity(ies).  The name of the entity will be displayed as well as any messages that it sends or receives..   Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_picker",
      "description": "Toggles 'picker' mode.  When picker is on, the bounding box, pivot and debugging text is displayed for whatever entity the player is looking at..    Arguments:      full - enables all debug information",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_show_damage",
      "description": "Sets damage display mode.  When on, you will see the amount of damage dealt over the target's head.",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_clear_debug_overlays",
      "description": "Clears all debug overlays",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_scale",
      "description": "Scales entities.      Arguments: <scale factor> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_remove",
      "description": "Removes the given entity(s). Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_remove_all",
      "description": "Removes all entities of the specified type.      Arguments:      {entity_name} / {class_name}",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_kill",
      "description": "Kills the given entity(s).     Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_animgraph_setvar",
      "description": "Sets a variable on the animgraph of the given entity(s).   Arguments:   <varname>=<value>  <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_animgraph_record",
      "description": "Toggles recording of animgraph replay of the given entity(s).      Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "gamedll cheat"
  },
  {
      "name": "save_animgraph_recording",
      "description": "Saves all active animgraph recordings to disk",
      "flags": "gamedll cheat"
  },
  {
      "name": "drawline",
      "description": "Draws line between two 3D Points..     Green if no collision.  Red is collides with something. Arguments: x1 y1 z1 x2 y2 z2",
      "flags": "gamedll cheat"
  },
  {
      "name": "drawcross",
      "description": "Draws a cross at the given location.  Arguments: x y z",
      "flags": "gamedll cheat"
  },
  {
      "name": "box",
      "description": "Draw a bbox.        Arguments:  minx miny miny maxx maxy maxz <lifetime = 10.0> <r g b a>.",
      "flags": "gamedll cheat"
  },
  {
      "name": "axis",
      "description": "Draw an axis.      Arguments:  x y z pitch yaw roll <lifetime = 10.0> <r g b a>.",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_hierarchy",
      "description": "Prints the entity hierarchy tree rooted at the specified ent(s)",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_scenehierarchy",
      "description": "Prints the entity scenenode hierarchy tree rooted at the specified ent(s)",
      "flags": "gamedll cheat"
  },
  {
      "name": "phys_dump_intersection_controller",
      "description": "Dump intersection controller status",
      "flags": "gamedll"
  },
  {
      "name": "phys_list",
      "description": "List all physics component contents of every entity in the game;.    -stream [1|0] : initiate|terminate streaming to physics debugger.    -allents: include non-physical entities.    -classes: print class names.    -sdk    : Rubikon build.    -world  : current state of the world.    -world -touch: list body pairs (bodies in contact).    -world -save <name>: save world to a file.    -world -mem: memory dump.    -world -snapshots: Start/Stop dumping snapshots of the world into the current directory.    -world -profiletraces: ProfileRecordedTraces.    -world -agg: current aggregate data registry (loaded resources).",
      "flags": "gamedll"
  },
  {
      "name": "phys_sleep",
      "description": "Put all physics in all the worlds to sleep",
      "flags": "gamedll"
  },
  {
      "name": "phys_wakeup",
      "description": "Wake all physics objects in the Main physics up",
      "flags": "gamedll"
  },
  {
      "name": "ray_bench",
      "description": "Load the rays and run the benchmark",
      "flags": "gamedll"
  },
  {
      "name": "physics_highlight_active",
      "description": "Turns on the absbox for all active physics objects..  0 : un-highlight..",
      "flags": "gamedll"
  },
  {
      "name": "physics_report_active",
      "description": "Lists all active physics objects.  -more : extra info.",
      "flags": "gamedll"
  },
  {
      "name": "physics_add_test",
      "description": "add test object",
      "flags": "gamedll"
  },
  {
      "name": "physics_remove_test",
      "description": "remove test object",
      "flags": "gamedll"
  },
  {
      "name": "phys_create_test_character_proxy",
      "description": "Create test character proxy",
      "flags": "gamedll"
  },
  {
      "name": "test_list_entities",
      "description": "test-list entities",
      "flags": "gamedll cheat"
  },
  {
      "name": "report_simthinklist",
      "description": "Lists all simulating/thinking entities",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "snd_sos_sv_soundevent_start",
      "description": "Test",
      "flags": "gamedll"
  },
  {
      "name": "snd_sos_sv_soundevent_stop_last",
      "description": "Test",
      "flags": "gamedll"
  },
  {
      "name": "snd_sos_sv_test_gender",
      "description": "Test",
      "flags": "gamedll"
  },
  {
      "name": "snd_sos_sv_soundevent_pause_last",
      "description": "Test",
      "flags": "gamedll"
  },
  {
      "name": "snd_sos_sv_soundevent_unpause_last",
      "description": "Test",
      "flags": "gamedll"
  },
  {
      "name": "script_reload",
      "description": "Reload scripts",
      "flags": "gamedll cheat"
  },
  {
      "name": "script_attach_debugger",
      "description": "Connect the vscript VM to the script debugger",
      "flags": "gamedll cheat"
  },
  {
      "name": "script_debug",
      "description": "Toggle the in-game script debug features",
      "flags": "gamedll cheat"
  },
  {
      "name": "script_add_watch",
      "description": "Add a watch to the game debug overlay",
      "flags": "gamedll cheat"
  },
  {
      "name": "script_remove_watch",
      "description": "Remove a watch from the game debug overlay",
      "flags": "gamedll cheat"
  },
  {
      "name": "script_add_watch_pattern",
      "description": "Add a watch to the game debug overlay",
      "flags": "gamedll cheat"
  },
  {
      "name": "cc_emit",
      "description": "Emits a closed caption",
      "flags": "clientdll"
  },
  {
      "name": "cc_random",
      "description": "Emits a random caption",
      "flags": "clientdll"
  },
  {
      "name": "cc_flush",
      "description": "Flushes async'd captions.",
      "flags": "clientdll"
  },
  {
      "name": "cc_showblocks",
      "description": "Toggles showing which blocks are pending/loaded async.",
      "flags": "clientdll"
  },
  {
      "name": "cc_findsound",
      "description": "Searches for soundname which emits specified text.",
      "flags": "clientdll"
  },
  {
      "name": "buymenu",
      "description": "Show or hide main buy menu",
      "flags": "clientdll server_can_execute"
  },
  {
      "name": "autobuy",
      "description": "Attempt to purchase items with the order listed in cl_autobuy",
      "flags": "clientdll clientcmd_can_execute"
  },
  {
      "name": "rebuy",
      "description": "Attempt to repurchase items with the order listed in cl_rebuy",
      "flags": "clientdll clientcmd_can_execute"
  },
  {
      "name": "teammenu",
      "description": "Show team selection window",
      "flags": "clientdll server_can_execute"
  },
  {
      "name": "dm_togglerandomweapons",
      "description": "Turns random weapons in deathmatch on/off",
      "flags": "clientdll server_can_execute clientcmd_can_execute"
  },
  {
      "name": "mat_reloadwearablecustommaterials",
      "description": "Reloads wearable custom materials for the local player",
      "flags": "developmentonly clientdll cheat"
  },
  {
      "name": "cl_dev_decaltrace_blood",
      "description": "Shoot out a decal spray that shoots blood.",
      "flags": "developmentonly clientdll cheat"
  },
  {
      "name": "+lookatweapon",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "-lookatweapon",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "show_loadout_toggle",
      "description": "Toggles loadout display",
      "flags": "clientdll clientcmd_can_execute"
  },
  {
      "name": "cl_sos_test_set_opvar",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_sos_test_get_opvar",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "toggleRdrOpt",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_steamscreenshots",
      "description": "Enable/disable saving screenshots to Steam",
      "flags": "clientdll"
  },
  {
      "name": "error_message_explain_vac",
      "description": "Take user to Steam support article",
      "flags": "missing0 clientdll clientcmd_can_execute"
  },
  {
      "name": "error_message_explain_pure",
      "description": "Take user to Steam support article",
      "flags": "missing0 clientdll clientcmd_can_execute"
  },
  {
      "name": "error_message_explain_unsigned",
      "description": "Take user to Steam support article",
      "flags": "missing0 clientdll clientcmd_can_execute"
  },
  {
      "name": "restart_normal",
      "description": "Restart",
      "flags": "missing0 clientdll clientcmd_can_execute"
  },
  {
      "name": "restart_in_insecure",
      "description": "Restart in insecure mode",
      "flags": "missing0 clientdll clientcmd_can_execute"
  },
  {
      "name": "show_untrusted_warning_again",
      "description": "Show untrusted warning again",
      "flags": "missing0 clientdll clientcmd_can_execute"
  },
  {
      "name": "restart_in_trusted",
      "description": "Restart in trusted mode",
      "flags": "missing0 clientdll clientcmd_can_execute"
  },
  {
      "name": "restart_in_untrusted",
      "description": "Restart in untrusted mode",
      "flags": "missing0 clientdll clientcmd_can_execute"
  },
  {
      "name": "mm_queue_show_stats",
      "description": "Display global server stats",
      "flags": "clientdll clientcmd_can_execute"
  },
  {
      "name": "clutch_mode_toggle",
      "description": "Toggle clutch mode convar",
      "flags": "clientdll release"
  },
  {
      "name": "csgo_launch_workshop_map",
      "description": "Launch a workshop map",
      "flags": "clientdll vconsole_fuzzy_matching vconsole_set_focus"
  },
  {
      "name": "ShowSteamStatsSessionID",
      "description": "Prints out the game stats session ID's (developer convar must be set to non-zero).",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "refresh_ui_audio_state",
      "description": "Restores audio DSP state for the UI.",
      "flags": "clientdll cheat"
  },
  {
      "name": "confirm_join_new_session_exit_current",
      "description": "Confirm that we wish to join a new session, destroying a previous session",
      "flags": "missing0 clientdll clientcmd_can_execute"
  },
  {
      "name": "cl_avatar_convert_rgb",
      "description": "Converts all png avatars in the avatars directory to rgb",
      "flags": "clientdll cheat release"
  },
  {
      "name": "cl_avatar_convert_png",
      "description": "Converts all rgb avatars in the avatars directory to png",
      "flags": "clientdll cheat release"
  },
  {
      "name": "drawoverviewmap",
      "description": "Draws the overview map",
      "flags": "clientdll"
  },
  {
      "name": "hideoverviewmap",
      "description": "Hides the overview map",
      "flags": "clientdll"
  },
  {
      "name": "+quickbuyradial",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "-quickbuyradial",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "+quickgrenaderadial",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "-quickgrenaderadial",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "+quickinv",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "-quickinv",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "+quickgearradial",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "-quickgearradial",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "+radialradio",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "-radialradio",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "+radialradio2",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "-radialradio2",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "+radialradio3",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "-radialradio3",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "map_enable_background_maps",
      "description": "Enables/disables portrait background maps",
      "flags": "clientdll cheat"
  },
  {
      "name": "csgo_video_settings_restore_previous",
      "description": "csgo_video_settings_restore_previous",
      "flags": "clientdll release"
  },
  {
      "name": "drawradar",
      "description": "Draws HUD radar",
      "flags": "clientdll"
  },
  {
      "name": "hideradar",
      "description": "Hides HUD radar",
      "flags": "clientdll"
  },
  {
      "name": "cl_reload_hud",
      "description": "Reloads the hud scale and resets scale and borders",
      "flags": "clientdll"
  },
  {
      "name": "+cl_show_team_equipment",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "-cl_show_team_equipment",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "+spray_menu",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "-spray_menu",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "voice_status_test_toggle",
      "description": "Test voice and status notices",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_mainmenu_show_blog",
      "description": "Show the blog and hide news panel",
      "flags": "missing0 clientdll clientcmd_can_execute"
  },
  {
      "name": "cl_mainmenu_hide_blog",
      "description": "Show the news panel and hide blog",
      "flags": "missing0 clientdll clientcmd_can_execute"
  },
  {
      "name": "confirm_abandon_match",
      "description": "Confirm that we wish to abandon match",
      "flags": "missing0 clientdll clientcmd_can_execute"
  },
  {
      "name": "confirm_join_friend_session_exit_current",
      "description": "Confirm that we wish to join a friend session, destroying a previous session",
      "flags": "missing0 clientdll clientcmd_can_execute"
  },
  {
      "name": "csgo_watch_friend_session_exit_current",
      "description": "",
      "flags": "missing0 clientdll clientcmd_can_execute"
  },
  {
      "name": "confirm_watch_friend_session_exit_current",
      "description": "Confirm that we wish to watch a friend session, destroying a previous session",
      "flags": "missing0 clientdll clientcmd_can_execute"
  },
  {
      "name": "voice_modenable_toggle",
      "description": "Toggle the voice_modenable convar.",
      "flags": "clientdll"
  },
  {
      "name": "localization_quest_item_string_printout",
      "description": "localization_quest_item_string_printout",
      "flags": "clientdll"
  },
  {
      "name": "csgo_econ_action_preview",
      "description": "Preview an economy item",
      "flags": "missing0 clientdll dontrecord clientcmd_can_execute"
  },
  {
      "name": "launch_warmup_map",
      "description": "Launches warmup map",
      "flags": "clientdll dontrecord clientcmd_can_execute"
  },
  {
      "name": "matchdraft_debug_sendlog",
      "description": "Print debug draft into HTTP log",
      "flags": "missing0 clientdll dontrecord release clientcmd_can_execute"
  },
  {
      "name": "mm_queue_draft_show",
      "description": "Display current draft",
      "flags": "missing0 clientdll clientcmd_can_execute"
  },
  {
      "name": "csgo_download_match",
      "description": "Downloads a match via serial code and starts playback",
      "flags": "clientdll dontrecord clientcmd_can_execute"
  },
  {
      "name": "cl_matchstats_print_own_data",
      "description": "cl_matchstats_print_own_data RANGENAME",
      "flags": "clientdll"
  },
  {
      "name": "gcmd",
      "description": "Generate a command",
      "flags": "missing0 clientdll clientcmd_can_execute"
  },
  {
      "name": "confirm_join_party_session_exit_current",
      "description": "Confirm that we wish to join a party session, destroying a previous session",
      "flags": "missing0 clientdll clientcmd_can_execute"
  },
  {
      "name": "confirm_activate_itemid_now",
      "description": "Confirm item activation by item id",
      "flags": "missing0 clientdll clientcmd_can_execute"
  },
  {
      "name": "reload_store_config",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "confirm_purchase_item_def_now",
      "description": "Confirm item purchase",
      "flags": "missing0 clientdll clientcmd_can_execute"
  },
  {
      "name": "cl_sim_grenade_trajectory",
      "description": "Draw trajectory of the deployed grenade if thrown from this position. Takes an optional parameter for how long the drawn trajectory will last.",
      "flags": "clientdll cheat"
  },
  {
      "name": "apply_crosshair_code",
      "description": "Apply a crosshair code to the current crosshair settings.",
      "flags": "clientdll"
  },
  {
      "name": "perfectworld_replenish_funds",
      "description": "Opens Perfect World funds replenishment page for account.",
      "flags": "missing0 clientdll clientcmd_can_execute"
  },
  {
      "name": "debug_purchase_defidx",
      "description": "Purchase an item by defindex",
      "flags": "clientdll release clientcmd_can_execute"
  },
  {
      "name": "cl_quest_schedule_print",
      "description": "cl_quest_schedule_print",
      "flags": "clientdll"
  },
  {
      "name": "cl_quest_events_print",
      "description": "cl_quest_events_print",
      "flags": "clientdll"
  },
  {
      "name": "econ_show_items_with_tag",
      "description": "Lists the item definitions that have a specified tag.",
      "flags": "clientdll"
  },
  {
      "name": "econ_build_pinboard_images_from_collection_name",
      "description": "Renders and saves images for all models in a collection.",
      "flags": "clientdll"
  },
  {
      "name": "dev_simulate_gcdown",
      "description": "<state> Turn on/off simulated GC communications failure (GC is down in a way that we know it is down)",
      "flags": "clientdll"
  },
  {
      "name": "slot11",
      "description": "",
      "flags": "clientdll server_can_execute"
  },
  {
      "name": "slot12",
      "description": "",
      "flags": "clientdll server_can_execute"
  },
  {
      "name": "slot13",
      "description": "",
      "flags": "clientdll server_can_execute"
  },
  {
      "name": "radio",
      "description": "Opens a radio menu",
      "flags": "clientdll"
  },
  {
      "name": "radio1",
      "description": "Opens a radio menu",
      "flags": "clientdll"
  },
  {
      "name": "radio2",
      "description": "Opens a radio menu",
      "flags": "clientdll"
  },
  {
      "name": "radio3",
      "description": "Opens a radio menu",
      "flags": "clientdll"
  },
  {
      "name": "menuselect",
      "description": "menuselect",
      "flags": "clientdll clientcmd_can_execute"
  },
  {
      "name": "cl_report_predcopy_overrides",
      "description": "Report prediction copy overrides",
      "flags": "clientdll"
  },
  {
      "name": "print_mapgroup",
      "description": "Prints the current mapgroup and the contained maps",
      "flags": "clientdll release"
  },
  {
      "name": "cl_game_mode_convars",
      "description": "Display the values of the convars for the current game_mode.",
      "flags": "clientdll"
  },
  {
      "name": "regenerate_weapon_skins",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_cs_dump_econ_item_stringtable",
      "description": "cl_cs_dump_econ_item_stringtable",
      "flags": "clientdll"
  },
  {
      "name": "econ_clear_inventory_images",
      "description": "clear the local inventory images (they will regenerate)",
      "flags": "clientdll"
  },
  {
      "name": "endmatch_votenextmap",
      "description": "Votes for the next map at the end of the match",
      "flags": "clientdll clientcmd_can_execute"
  },
  {
      "name": "cl_rr_reloadresponsesystems",
      "description": "Reload all response system scripts.",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_rr_findrules",
      "description": "Search and list rules by substring.",
      "flags": "clientdll"
  },
  {
      "name": "cl_rr_findrules_verbose",
      "description": "Search and list rules by substring.",
      "flags": "clientdll"
  },
  {
      "name": "cl_ent_animgraph_debug",
      "description": "Displays debug draws about the given entity(ies) animgraph.      Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_prop_debug",
      "description": "Toggle prop debug mode. If on, props will show colorcoded bounding boxes. Red means ignore all damage. White means respond physically to damage but never break. Green maps health in the range of 100 down to 1.",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_debugoverlay_toggle",
      "description": "Toggles visibility of the debug overlay system.",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_debugoverlay_cycle_domain",
      "description": "Toggles visibility of the debug overlay system.",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_debugoverlay_cycle_state",
      "description": "Toggles visibility of the debug overlay system.",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_debugoverlay_hide_imgui",
      "description": "Hides the overlay.",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_imgui_set_selection",
      "description": "Sets ImGui selection",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_imgui_set_status_text",
      "description": "Sets ImGui header status text",
      "flags": "clientdll cheat"
  },
  {
      "name": "game_particle_manager_dump_requeue",
      "description": "Dump contents of particle manager requeue",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "game_particle_manager_list_active",
      "description": "Dump counts of active particles",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "url_execute",
      "description": "Executes url-based commands, used for incoming commands from url-based launches when the game's already running.",
      "flags": "clientdll"
  },
  {
      "name": "cl_report_entities",
      "description": "Lists all entities",
      "flags": "developmentonly clientdll cheat"
  },
  {
      "name": "cl_ents",
      "description": "List client entities, sorted by spawn group",
      "flags": "clientdll"
  },
  {
      "name": "cl_ent_spew_derived_classes",
      "description": "Prints out all entity classes which inherit from a specified base class",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "soundscape_dumpclient",
      "description": "Dumps the client's soundscape data..",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_in_forcebuttonstate",
      "description": "Forces a button to be a particular state - WHEN PROCESSING USERCOMMANDS",
      "flags": "developmentonly clientdll vconsole_fuzzy_matching"
  },
  {
      "name": "cl_record_bone_setup_stats",
      "description": "generate bone setup statistics",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_updatevisibility",
      "description": "Updates visibility bits.",
      "flags": "clientdll"
  },
  {
      "name": "ic",
      "description": "interp entity count.",
      "flags": "clientdll"
  },
  {
      "name": "dlight_debug",
      "description": "Creates a dlight in front of the player",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_removedecals",
      "description": "Remove the decals from the entity under the crosshair.",
      "flags": "clientdll cheat"
  },
  {
      "name": "iv_debug",
      "description": "Spew interpolated var info for entity.",
      "flags": "clientdll"
  },
  {
      "name": "iv_interp",
      "description": "Spew interpolated var info for entity.",
      "flags": "clientdll"
  },
  {
      "name": "iv_on",
      "description": "Spew both interpolated var debug info and history for entity.",
      "flags": "clientdll"
  },
  {
      "name": "iv_off",
      "description": "Turn off all interpolation variable spew.",
      "flags": "clientdll"
  },
  {
      "name": "dump_entity_report",
      "description": "List all entities in the scene",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_dump_projected_texture_count",
      "description": "Print out number of active projected textures",
      "flags": "clientdll"
  },
  {
      "name": "gameinstructor_reload_lessons",
      "description": "Shuts down all open lessons and reloads them from the script file.",
      "flags": "clientdll"
  },
  {
      "name": "gameinstructor_reset_counts",
      "description": "Resets all display and success counts to zero.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "gameinstructor_dump_open_lessons",
      "description": "Gives a list of all currently open lessons.",
      "flags": "clientdll cheat"
  },
  {
      "name": "gameinstructor_dump_run_lesson_counts",
      "description": "Gives a list of lessons that been completed or shown",
      "flags": "clientdll cheat"
  },
  {
      "name": "gameinstructor_teach_lesson",
      "description": "Force a specific lesson to be triggered",
      "flags": "clientdll"
  },
  {
      "name": "p2p_ping",
      "description": "Ping a peer.",
      "flags": "clientdll"
  },
  {
      "name": "servervoice_dump",
      "description": "servervoice_dump",
      "flags": "clientdll"
  },
  {
      "name": "servervoice_clear",
      "description": "servervoice_clear",
      "flags": "clientdll"
  },
  {
      "name": "cl_soundscape_flush",
      "description": "Flushes the client side soundscapes",
      "flags": "clientdll cheat server_can_execute"
  },
  {
      "name": "playsoundscape",
      "description": "Forces a soundscape to play",
      "flags": "clientdll cheat"
  },
  {
      "name": "stopsoundscape",
      "description": "Stops all soundscape processing and fades current looping sounds",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_soundscape_printdebuginfo",
      "description": "print soundscapes",
      "flags": "clientdll"
  },
  {
      "name": "cl_ss_origin",
      "description": "print origin in script format",
      "flags": "clientdll"
  },
  {
      "name": "camerazoomin",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "camerazoomout",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "cl_dumpsplithacks",
      "description": "Dump split screen workarounds.",
      "flags": "clientdll"
  },
  {
      "name": "convert_steamid",
      "description": "Convert SteamID into multiple formats",
      "flags": "clientdll"
  },
  {
      "name": "cl_showents",
      "description": "Dump entity list to console.",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_printfps",
      "description": "Print information from cl_showfps.",
      "flags": "clientdll"
  },
  {
      "name": "cl_resetfps",
      "description": "Reset information from cl_showfps.",
      "flags": "clientdll"
  },
  {
      "name": "ss_teleport",
      "description": "Teleport other splitscreen player to my location.",
      "flags": "developmentonly clientdll cheat"
  },
  {
      "name": "impulse",
      "description": "Triggers impulse command",
      "flags": "clientdll"
  },
  {
      "name": "in_forceinput",
      "description": "Forces a button to be a particular state -- WHEN SAMPLING INPUT",
      "flags": "developmentonly clientdll vconsole_fuzzy_matching"
  },
  {
      "name": "cam_command",
      "description": "Tells camera to change modes",
      "flags": "clientdll cheat"
  },
  {
      "name": "thirdperson",
      "description": "Switch to thirdperson camera.",
      "flags": "clientdll cheat execute_per_tick"
  },
  {
      "name": "firstperson",
      "description": "Switch to firstperson camera.",
      "flags": "clientdll execute_per_tick"
  },
  {
      "name": "thirdperson_mayamode",
      "description": "Switch to thirdperson Maya-like camera controls.",
      "flags": "clientdll cheat"
  },
  {
      "name": "thirdpersonshoulder",
      "description": "Switch to thirdperson-shoulder camera.",
      "flags": "clientdll"
  },
  {
      "name": "camortho",
      "description": "Switch to orthographic camera.",
      "flags": "clientdll cheat"
  },
  {
      "name": "+cammousemove",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "-cammousemove",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "+camdistance",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "-camdistance",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "snapto",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "hud_reloadscheme",
      "description": "Reloads hud layout and animation scripts.",
      "flags": "clientdll"
  },
  {
      "name": "cl_tree_sway_dir",
      "description": "sets tree sway wind direction and strength",
      "flags": "clientdll"
  },
  {
      "name": "cl_particles_dump_effects",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "cl_destroy_ragdolls",
      "description": "Destroys all client-side ragdolls",
      "flags": "clientdll"
  },
  {
      "name": "hmd_anchor_rotate",
      "description": "",
      "flags": "clientdll"
  },
  {
      "name": "cl_querycache_stats",
      "description": "Display status of the query cache (client only)",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_report_soundpatch",
      "description": "reports client-side sound patch count",
      "flags": "clientdll"
  },
  {
      "name": "spec_pos",
      "description": "dump position and angles to the console",
      "flags": "clientdll"
  },
  {
      "name": "getpos",
      "description": "dump position and angles to the console",
      "flags": "clientdll"
  },
  {
      "name": "getpos_exact",
      "description": "dump origin and angles to the console",
      "flags": "clientdll"
  },
  {
      "name": "shake_stop",
      "description": "Stops all active screen shakes..",
      "flags": "clientdll cheat"
  },
  {
      "name": "shake_testpunch",
      "description": "Test a punch-style screen shake..",
      "flags": "clientdll cheat"
  },
  {
      "name": "slot1",
      "description": "",
      "flags": "clientdll server_can_execute"
  },
  {
      "name": "slot2",
      "description": "",
      "flags": "clientdll server_can_execute"
  },
  {
      "name": "slot3",
      "description": "",
      "flags": "clientdll server_can_execute"
  },
  {
      "name": "slot4",
      "description": "",
      "flags": "clientdll server_can_execute"
  },
  {
      "name": "slot5",
      "description": "",
      "flags": "clientdll server_can_execute"
  },
  {
      "name": "slot6",
      "description": "",
      "flags": "clientdll server_can_execute"
  },
  {
      "name": "slot7",
      "description": "",
      "flags": "clientdll server_can_execute"
  },
  {
      "name": "slot8",
      "description": "",
      "flags": "clientdll server_can_execute"
  },
  {
      "name": "slot9",
      "description": "",
      "flags": "clientdll server_can_execute"
  },
  {
      "name": "slot0",
      "description": "",
      "flags": "clientdll server_can_execute"
  },
  {
      "name": "slot10",
      "description": "",
      "flags": "clientdll server_can_execute"
  },
  {
      "name": "cancelselect",
      "description": "",
      "flags": "clientdll server_can_execute"
  },
  {
      "name": "invnext",
      "description": "",
      "flags": "clientdll server_can_execute"
  },
  {
      "name": "invprev",
      "description": "",
      "flags": "clientdll server_can_execute"
  },
  {
      "name": "lastinv",
      "description": "",
      "flags": "clientdll server_can_execute"
  },
  {
      "name": "invnextselect",
      "description": "",
      "flags": "clientdll server_can_execute"
  },
  {
      "name": "invprevselect",
      "description": "",
      "flags": "clientdll server_can_execute"
  },
  {
      "name": "cl_ent_text_filter",
      "description": "Set which ent_text filters you want:",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_setpos",
      "description": "Move entity to position",
      "flags": "clientdll cheat missing4"
  },
  {
      "name": "cl_ent_setang",
      "description": "Set entity angles",
      "flags": "clientdll cheat missing4"
  },
  {
      "name": "cl_ent_call",
      "description": "ent_call <funcname> <option:entname> calls function on current look target or filtername, checks on ent, then root, then mode, then map scope",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_script_dump",
      "description": "Dumps the names and values of this entity's script scope to the console.     Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_setname",
      "description": "Sets the targetname of the given entity(s).      Arguments:      <new entity name> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_find",
      "description": "Find and list all entities with classnames or targetnames that contain the specified substring..Format: find_ent <substring>.",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_find_index",
      "description": "Display data for entity matching specified index..Format: find_ent_index <index>.",
      "flags": "clientdll cheat"
  },
  {
      "name": "buildcubemaps",
      "description": "Build Cubemaps",
      "flags": "clientdll"
  },
  {
      "name": "capturecubemap",
      "description": "Capture Cubemap",
      "flags": "clientdll"
  },
  {
      "name": "cl_dump_animgraph_list",
      "description": "Displays stats about which animations are updating",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_anim_eval_stats",
      "description": "Displays stats about how many EvaluatePose calls are unused",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_ent_grab",
      "description": "grabs the object in front of the player. Options: -loose -multiple -toggle",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_ungrab",
      "description": "un-grabs all objects",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_name",
      "description": "Displays the entity name",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_actornames",
      "description": "Displays the entity name for all entities that have ShouldDisplayInActorNames true in code",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_text",
      "description": "Displays text debugging information about the given entity(ies) on top of the entity (See Overlay Text).",
      "flags": ""
  },
  {
      "name": "cl_ent_text_radius",
      "description": "Displays text debugging information about the given entity(ies) [near the player] on top of the entity (See Overlay Text).   2 Arguments:    <Radius> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_text256",
      "description": "Displays text debugging information about the given entity(ies) [within 256 units of the player] on top of the entity (See Overlay Text).        Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_text_clear",
      "description": "Hide text debugging information about the given entity(ies) on top of the entity (See Overlay Text).",
      "flags": ""
  },
  {
      "name": "cl_ent_text_sticky_add",
      "description": "Adds to list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text). Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_text_sticky_remove",
      "description": "Removes from the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text).     Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_text_sticky_clear",
      "description": "Clears the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text).    Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_text_sticky_dump",
      "description": "Spews the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text).      Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_bbox",
      "description": "Displays the movement bounding box for the given entity(ies) in orange.  Some entites will also display entity specific overlays..  Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_absbox",
      "description": "Displays the total bounding box for the given entity(s) in green.  Some entites will also display entity specific overlays..      Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_attachments",
      "description": "Displays the attachment points on an entity..        Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_joints",
      "description": "Displays the joint names + axes an entity..       Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_viewoffset",
      "description": "Displays the eye position for the given entity(ies) in red..  Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_pivot",
      "description": "Displays the pivot for the given entity(ies)..     (y=up=green, z=forward=blue, x=left=red). .     Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_skeleton",
      "description": "Displays the skeleton for the given entity(ies)..       Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_hitbox",
      "description": "Displays the hitboxes for the given entity(ies).. Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_vcollide_wireframe",
      "description": "Displays the interpolated vcollide wireframe pm am entity..   Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_select",
      "description": "Select or deselects the given entities(s) for later manipulation. Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_messages",
      "description": "Toggles input/output message display for the selected entity(ies).  The name of the entity will be displayed as well as any messages that it sends or receives..        Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_picker",
      "description": "Toggles 'picker' mode.  When picker is on, the bounding box, pivot and debugging text is displayed for whatever entity the player is looking at.. Arguments:      full - enables all debug information",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_show_damage",
      "description": "Sets damage display mode.  When on, you will see the amount of damage dealt over the target's head.",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_clear_debug_overlays",
      "description": "Clears all debug overlays",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_scale",
      "description": "Scales entities.   Arguments: <scale factor> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_remove",
      "description": "Removes the given entity(s).      Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_remove_all",
      "description": "Removes all entities of the specified type.   Arguments:      {entity_name} / {class_name}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_animgraph_record",
      "description": "Toggles recording of animgraph replay of the given entity(s).   Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_save_animgraph_recording",
      "description": "Saves all active animgraph recordings to disk",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_drawline",
      "description": "Draws line between two 3D Points..  Green if no collision.  Red is collides with something. Arguments: x1 y1 z1 x2 y2 z2",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_drawcross",
      "description": "Draws a cross at the given location.       Arguments: x y z",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_box",
      "description": "Draw a bbox.     Arguments:  minx miny miny maxx maxy maxz <lifetime = 10.0> <r g b a>.",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_axis",
      "description": "Draw an axis.   Arguments:  x y z pitch yaw roll <lifetime = 10.0> <r g b a>.",
      "flags": "clientdll cheat"
  },
  {
      "name": "ent_rbox",
      "description": "Displays the total bounding box for the given entity(s) in green.  Some entites will also display entity specific overlays..   Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cli_ent_pivot",
      "description": "Displays the interpolated pivot for the given entity(ies)..       (y=up=green, z=forward=blue, x=left=red). .     Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cli_ent_skeleton",
      "description": "Displays the skeleton for the given entity(ies)..      Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cli_ent_hitbox",
      "description": "Displays the skeleton for the given entity(ies)..        Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cli_ent_attachments",
      "description": "Displays the interpolated attachment points on an entity..  Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "cli_ent_vcollide_wireframe",
      "description": "Displays the interpolated vcollide wireframe pm am entity..  Arguments:      {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "flags": "clientdll cheat"
  },
  {
      "name": "ent_debug_anim",
      "description": "Use the specified entity for animation debugging.",
      "flags": "clientdll"
  },
  {
      "name": "cl_dumpentity",
      "description": "Dumps info about an entity",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_hierarchy",
      "description": "Prints the entity hierarchy tree rooted at the specified ent(s)",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_scenehierarchy",
      "description": "Prints the entity scenenode hierarchy tree rooted at the specified ent(s)",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_phys_dump_intersection_controller",
      "description": "Dump intersection controller status",
      "flags": "clientdll"
  },
  {
      "name": "cl_phys_list",
      "description": "List all physics component contents of every entity in the game;.    -stream [1|0] : initiate|terminate streaming to physics debugger.    -allents: include non-physical entities.    -classes: print class names.    -sdk    : Rubikon build.    -world  : current state of the world.    -world -touch: list body pairs (bodies in contact).    -world -save <name>: save world to a file.    -world -mem: memory dump.    -world -snapshots: Start/Stop dumping snapshots of the world into the current directory.    -world -profiletraces: ProfileRecordedTraces.    -world -agg: current aggregate data registry (loaded resources).",
      "flags": "clientdll"
  },
  {
      "name": "cl_phys_sleep",
      "description": "Put all physics in all the worlds to sleep",
      "flags": "clientdll"
  },
  {
      "name": "cl_phys_wakeup",
      "description": "Wake all physics objects in the Main physics up",
      "flags": "clientdll"
  },
  {
      "name": "cl_physics_highlight_active",
      "description": "Turns on the absbox for all active physics objects..  0 : un-highlight..",
      "flags": "clientdll"
  },
  {
      "name": "cl_physics_report_active",
      "description": "Lists all active physics objects.  -more : extra info.",
      "flags": "clientdll"
  },
  {
      "name": "cl_physics_add_test",
      "description": "add test object",
      "flags": "clientdll"
  },
  {
      "name": "cl_physics_remove_test",
      "description": "remove test object",
      "flags": "clientdll"
  },
  {
      "name": "cl_phys_create_test_character_proxy",
      "description": "Create test character proxy",
      "flags": "clientdll"
  },
  {
      "name": "dump_secondary_scene_worlds",
      "description": "Lists secondary scene worlds and ref counts",
      "flags": "clientdll"
  },
  {
      "name": "cl_test_list_entities",
      "description": "test-list entities",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_report_simthinklist",
      "description": "Lists all simulating/thinking entities",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "snd_sos_cl_soundevent_start",
      "description": "Test",
      "flags": "clientdll"
  },
  {
      "name": "snd_sos_cl_soundevent_stop_last",
      "description": "Test",
      "flags": "clientdll"
  },
  {
      "name": "snd_sos_cl_soundevent_pause_last",
      "description": "Test",
      "flags": "clientdll"
  },
  {
      "name": "snd_sos_cl_soundevent_unpause_last",
      "description": "Test",
      "flags": "clientdll"
  },
  {
      "name": "cl_script_reload",
      "description": "Reload scripts",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_script_attach_debugger",
      "description": "Connect the vscript VM to the script debugger",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_script_debug",
      "description": "Toggle the in-game script debug features",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_script_add_watch",
      "description": "Add a watch to the game debug overlay",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_script_remove_watch",
      "description": "Remove a watch from the game debug overlay",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_script_add_watch_pattern",
      "description": "Add a watch to the game debug overlay",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_script_remove_watch_pattern",
      "description": "Remove a watch from the game debug overlay",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_script_add_debug_filter",
      "description": "Add a filter to the game debug overlay",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_script_remove_debug_filter",
      "description": "Remove a filter from the game debug overlay",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_script_trace_enable",
      "description": "Turn on a particular trace output by file or function name",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_script_trace_disable",
      "description": "Turn off a particular trace output by file or function name",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_script_trace_enable_key",
      "description": "Turn on a particular trace output by table/instance",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_script_trace_disable_key",
      "description": "Turn off a particular trace output by table/instance",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_script_trace_enable_all",
      "description": "Turn on all trace output",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_script_trace_disable_all",
      "description": "Turn off all trace output",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_script_clear_watches",
      "description": "Clear all watches from the game debug overlay",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_script_find",
      "description": "Find a key in the VM",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_script_resurrect_unreachable",
      "description": "Use the garbage collector to track down reference cycles",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_script_reload_code",
      "description": "Execute a vscript file, replacing existing functions with the functions in the run script",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_script_reload_entity_code",
      "description": "Execute all of this entity's VScripts, replacing existing functions with the functions in the run scripts",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_script_help",
      "description": "Output help for script functions",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_script_help2",
      "description": "Output help for script functions suitable for auto-completion",
      "flags": "clientdll"
  },
  {
      "name": "cl_script_dump_all",
      "description": "Dump the state of the VM to the console",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_pred_track",
      "description": "<entindex> <fieldname>:  Track changes to entity index entindex, for field fieldname.",
      "flags": "clientdll"
  },
  {
      "name": "cl_pred_track_off",
      "description": "clear field track changes.",
      "flags": "clientdll"
  },
  {
      "name": "cl_predictioncopy_describe",
      "description": "Describe datamap_t for entindex",
      "flags": "clientdll"
  },
  {
      "name": "cl_predictioncopy_print",
      "description": "Print simple description of prediction copy fields for entindex",
      "flags": "clientdll"
  },
  {
      "name": "ime_supported_info",
      "description": "Spew IME Supported info.",
      "flags": "dontrecord"
  },
  {
      "name": "ime_hkl_info",
      "description": "Spew IME HKL info.",
      "flags": "dontrecord"
  },
  {
      "name": "mm_ignored_sessions_reset",
      "description": "Reset ignored sessions",
      "flags": "developmentonly"
  },
  {
      "name": "mm_datacenter_debugprint",
      "description": "Shows information retrieved from data center",
      "flags": ""
  },
  {
      "name": "mm_debugprint",
      "description": "Show debug information about current matchmaking session",
      "flags": ""
  },
  {
      "name": "voice_reset_mutelist",
      "description": "Reset all mute information for all players who were ever muted.",
      "flags": ""
  },
  {
      "name": "voice_mute",
      "description": "Mute a specific Steam user",
      "flags": ""
  },
  {
      "name": "voice_unmute",
      "description": "Unmute a specific Steam user, or \"all\" to unmute all connected players.",
      "flags": ""
  },
  {
      "name": "voice_show_mute",
      "description": "Show whether current players are muted.",
      "flags": ""
  },
  {
      "name": "game_alias",
      "description": "Set the configuration of game type and mode based on game alias like \"deathmatch\".",
      "flags": "release"
  },
  {
      "name": "groups",
      "description": "Show status of all spawn groups.",
      "flags": "gamedll"
  },
  {
      "name": "r_camerapos",
      "description": "Prints out the current camera position + orientation to the console",
      "flags": "linked_concommand"
  },
  {
      "name": "r_incrementlodscale",
      "description": "Modifies the LOD scale",
      "flags": "linked_concommand"
  },
  {
      "name": "r_setpos",
      "description": "Moves the camera position + orientation to the specified position",
      "flags": "linked_concommand"
  },
  {
      "name": "r_entpos",
      "description": "Moves the camera position + orientation to the named entity",
      "flags": "linked_concommand"
  },
  {
      "name": "commandtool_exec",
      "description": "Runs a command from the command tool",
      "flags": "gamedll"
  },
  {
      "name": "spawn_group_activate",
      "description": "Activate specified spawngroup.",
      "flags": "gamedll cheat"
  },
  {
      "name": "spawn_group_load",
      "description": "Load named spawn group.",
      "flags": "gamedll cheat"
  },
  {
      "name": "spawn_group_unload",
      "description": "Unload named spawn group.",
      "flags": "gamedll cheat"
  },
  {
      "name": "spawn_group_list",
      "description": "List all spawn groups",
      "flags": "gamedll cheat"
  },
  {
      "name": "entityreport",
      "description": "Reports all extant entities. Optional 2nd arg is a substring of a classname that the list will be filtered by.",
      "flags": "gamedll"
  },
  {
      "name": "entitysummary",
      "description": "Summarizes (by class) all extant entities. Optional 2nd arg is a substring of a classname that the list will be filtered by.",
      "flags": "gamedll"
  },
  {
      "name": "cl_groups",
      "description": "Show status of all spawn groups.",
      "flags": "clientdll"
  },
  {
      "name": "cl_decal_debug",
      "description": "Toggles client decal debug visualization",
      "flags": "clientdll"
  },
  {
      "name": "cl_decal_shoot",
      "description": "Shoots a client-side decal",
      "flags": "clientdll"
  },
  {
      "name": "cl_decal_clear_world",
      "description": "Clears world decals",
      "flags": "clientdll"
  },
  {
      "name": "cl_decal_clear_all_entities",
      "description": "Clears decals from all entities",
      "flags": "clientdll"
  },
  {
      "name": "r_printdecalinfo",
      "description": "Prints info about decals currently in the scene",
      "flags": "clientdll"
  },
  {
      "name": "cl_commandtool_exec",
      "description": "Runs a command from the command tool",
      "flags": "clientdll"
  },
  {
      "name": "cl_entityreport",
      "description": "Reports all extant entities. Optional 2nd arg is a substring of a classname that the list will be filtered by.",
      "flags": "clientdll"
  },
  {
      "name": "cl_entitysummary",
      "description": "Summarizes (by class) all extant entities. Optional 2nd arg is a substring of a classname that the list will be filtered by.",
      "flags": "clientdll"
  },
  {
      "name": "testscript_debug",
      "description": "Debug test scripts.",
      "flags": "developmentonly"
  },
  {
      "name": "host_force_frametime_to_equal_tick_interval",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "host_force_max_frametime_to_tick_interval",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "host_framerate",
      "description": "Set to lock per-frame time elapse.",
      "flags": "release"
  },
  {
      "name": "host_timescale",
      "description": "Prescale the clock by this amount.",
      "flags": "replicated cheat"
  },
  {
      "name": "engine_max_resource_system_update_time",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_experimental_lag_limiter",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "vis_sunlight_enable",
      "description": "Toggle whether to use sunlight PVS for sunlight views (0 = sky PVS, 1 = sunlight PVS)",
      "flags": "developmentonly cheat"
  },
  {
      "name": "vis_enable",
      "description": "Toggle static visibility",
      "flags": "developmentonly"
  },
  {
      "name": "r_indirectlighting",
      "description": "Set to use indirect lighting",
      "flags": "cheat"
  },
  {
      "name": "r_rendersun",
      "description": "Render sun lighting",
      "flags": "cheat"
  },
  {
      "name": "r_drawdecals",
      "description": "Set to render decals",
      "flags": "cheat"
  },
  {
      "name": "r_drawviewmodel",
      "description": "Render view model",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_directlighting",
      "description": "Set to use direct lighting",
      "flags": "cheat"
  },
  {
      "name": "r_ssao",
      "description": "Set to use screen-space ambient occlusion",
      "flags": "developmentonly"
  },
  {
      "name": "r_force_zprepass",
      "description": "0: Force z prepass off. 1: Force on. -1: Don't force",
      "flags": "cheat"
  },
  {
      "name": "r_zprepass_normals",
      "description": "0: Use normals reconstructed from depth. 1: Output correct normals in z prepass.",
      "flags": "cheat"
  },
  {
      "name": "r_translucent",
      "description": "Enable rendering of translucent geometry",
      "flags": "cheat"
  },
  {
      "name": "r_worldlod",
      "description": "Set to enable world LOD",
      "flags": "cheat"
  },
  {
      "name": "r_showsunshadowdebugrendertargets",
      "description": "Set to render sun shadow render targets",
      "flags": "cheat"
  },
  {
      "name": "r_showdebugoverlays",
      "description": "Set to render debug overlays",
      "flags": "cheat"
  },
  {
      "name": "r_showsceneobjectbounds",
      "description": "Show scenesystem object bounding boxes",
      "flags": "cheat"
  },
  {
      "name": "r_showsunshadowdebugsplitvis",
      "description": "Set to render sun shadow split visibility debugger",
      "flags": "cheat"
  },
  {
      "name": "r_show_hipoly_draw_calls",
      "description": "Transparent wireframe overlay for draw calls with triangle count higher than specified number",
      "flags": "cheat"
  },
  {
      "name": "r_showdebugrendertarget",
      "description": "Set the debug render target to show, 0 == disable",
      "flags": "cheat"
  },
  {
      "name": "fog_enable",
      "description": "Enable fog",
      "flags": "clientdll cheat"
  },
  {
      "name": "mat_wireframe",
      "description": "0=Off, 1=Surface Wireframe, 2=Transparent Wireframe",
      "flags": "cheat"
  },
  {
      "name": "mat_fullbright",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_max_lighting_complexity",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_luxels",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_lpv_luxels",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "r_drawskybox",
      "description": "Render the 2d skybox.",
      "flags": "cheat"
  },
  {
      "name": "r_size_cull_threshold_fade",
      "description": "% above the screen size percentage where we will start fading out (==0 will disable fading).",
      "flags": "developmentonly"
  },
  {
      "name": "r_size_cull_threshold",
      "description": "Threshold of screen size percentage below which objects get culled",
      "flags": "developmentonly"
  },
  {
      "name": "r_size_cull_threshold_shadow",
      "description": "Threshold of sun shadow map size percentage below which objects get culled",
      "flags": "cheat"
  },
  {
      "name": "r_drawblankworld",
      "description": "Render blank instead of the game world",
      "flags": "cheat"
  },
  {
      "name": "fog_override_enable",
      "description": "Use fog_override convars instead of world fog data",
      "flags": "cheat"
  },
  {
      "name": "fog_override_start",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "fog_override_end",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "fog_override_max_density",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "fog_override_exponent",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "r_dof_override",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "r_dof_override_near_blurry",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "r_dof_override_near_crisp",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "r_dof_override_far_crisp",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "r_dof_override_far_blurry",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "r_dof_override_tilt_to_ground",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_shading_complexity",
      "description": "Visualize shading complexity",
      "flags": "cheat"
  },
  {
      "name": "mat_overdraw",
      "description": "Visualize overdraw",
      "flags": "cheat"
  },
  {
      "name": "tv_relay_rate",
      "description": "default rate for relays",
      "flags": "developmentonly"
  },
  {
      "name": "tv_instant_replay_full_frame",
      "description": "Send embedded full frames",
      "flags": "developmentonly"
  },
  {
      "name": "tv_instant_replay_full_frame_time",
      "description": "Seconds between full frame embeddeds",
      "flags": "developmentonly"
  },
  {
      "name": "tv_extended_logging",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "tv_instant_replay_full_frame_build_threaded",
      "description": "Build the full frames on a seperate job thread",
      "flags": "developmentonly"
  },
  {
      "name": "tv_threaded_merge_entity_deltas",
      "description": "Enable SourceTV threading of delta merging",
      "flags": "developmentonly"
  },
  {
      "name": "spec_replay_leadup_time",
      "description": "Replay time in seconds before the highlighted event",
      "flags": "replicated release"
  },
  {
      "name": "tv_broadcast_url",
      "description": "URL of the broadcast relay",
      "flags": "release"
  },
  {
      "name": "tv_broadcast_url1",
      "description": "URL of the broadcast relay1",
      "flags": "release"
  },
  {
      "name": "r_drawpanorama",
      "description": "Enable the rendering of panorama UI",
      "flags": "cheat"
  },
  {
      "name": "input_downimpulsevalue",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "input_upimpulsevalue",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "input_filter_relative_analog_inputs",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "bug_submitter_override",
      "description": "",
      "flags": "archive"
  },
  {
      "name": "r_skip_precache_validation_check",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sv_pause_on_console_open",
      "description": "1 = Pause the game when pressing ~ to open the console. CTRL+~ opens the console without pause.",
      "flags": "archive"
  },
  {
      "name": "r_add_views_in_pre_output",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_extra_render_frames",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "con_enable",
      "description": "Allows the console to be activated.",
      "flags": "archive"
  },
  {
      "name": "r_debug_draw_safe_area_insets",
      "description": "Render safe area insets as wireframe.",
      "flags": "developmentonly"
  },
  {
      "name": "input_forceuser",
      "description": "Force user input to this split screen player.",
      "flags": "cheat"
  },
  {
      "name": "mouse_disableinput",
      "description": "Set to disable mouse input",
      "flags": "developmentonly"
  },
  {
      "name": "input_button_code_is_scan_code",
      "description": "Bind keys based on keyboard position instead of key name",
      "flags": "archive"
  },
  {
      "name": "convars_echo_toggle_changes",
      "description": "Echo to the console changes caused by toggling.",
      "flags": "developmentonly"
  },
  {
      "name": "joy_axisx_relative",
      "description": "",
      "flags": "archive per_user"
  },
  {
      "name": "joy_axisy_relative",
      "description": "",
      "flags": "archive per_user"
  },
  {
      "name": "joy_axisz_relative",
      "description": "",
      "flags": "archive per_user"
  },
  {
      "name": "joy_axisr_relative",
      "description": "",
      "flags": "archive per_user"
  },
  {
      "name": "joy_axisu_relative",
      "description": "",
      "flags": "archive per_user"
  },
  {
      "name": "joy_axisv_relative",
      "description": "",
      "flags": "archive per_user"
  },
  {
      "name": "joy_axisx_deadzone",
      "description": "",
      "flags": "archive per_user"
  },
  {
      "name": "joy_axisy_deadzone",
      "description": "",
      "flags": "archive per_user"
  },
  {
      "name": "joy_axisz_deadzone",
      "description": "",
      "flags": "archive per_user"
  },
  {
      "name": "joy_axisr_deadzone",
      "description": "",
      "flags": "archive per_user"
  },
  {
      "name": "joy_axisu_deadzone",
      "description": "",
      "flags": "archive per_user"
  },
  {
      "name": "joy_axisv_deadzone",
      "description": "",
      "flags": "archive per_user"
  },
  {
      "name": "player0_using_joystick",
      "description": "",
      "flags": "archive"
  },
  {
      "name": "tv_enable",
      "description": "Activates SourceTV on server.",
      "flags": "notify release"
  },
  {
      "name": "tv_enable1",
      "description": "Activates SourceTV[1] on server.",
      "flags": "notify release"
  },
  {
      "name": "clientport",
      "description": "If non-zero, client binds port to specific address.  Usually you should leave this blank to use a different random system-assigned port for each connection.",
      "flags": "release"
  },
  {
      "name": "hostport",
      "description": "Host game server port",
      "flags": "release"
  },
  {
      "name": "tv_port",
      "description": "Host SourceTV port",
      "flags": "release"
  },
  {
      "name": "r_vconsole_foregroundforcerender",
      "description": "When VConsole is in the foreground, force all engine & tools to render",
      "flags": "developmentonly"
  },
  {
      "name": "r_always_render_all_windows",
      "description": "Always force all engine & tools to render",
      "flags": "developmentonly"
  },
  {
      "name": "r_force_render_frame_count",
      "description": "The number of frames to render when a",
      "flags": "developmentonly"
  },
  {
      "name": "splitscreen_mode",
      "description": "",
      "flags": "archive"
  },
  {
      "name": "jpeg_quality",
      "description": "Set jpeg screenshot quality. [1..100]",
      "flags": "developmentonly"
  },
  {
      "name": "screenshot_subdir",
      "description": "Set the screenshot directory.",
      "flags": "developmentonly"
  },
  {
      "name": "screenshot_prefix",
      "description": "Set the screenshot auto naming prefix.",
      "flags": "developmentonly"
  },
  {
      "name": "screenshot_width",
      "description": "Screenshot width. -1 for screen width.",
      "flags": "developmentonly"
  },
  {
      "name": "screenshot_height",
      "description": "Screenshot height. -1 for screen height.",
      "flags": "developmentonly"
  },
  {
      "name": "cl_playback_screenshots",
      "description": "Allows the client to playback screenshot and jpeg commands in demos.",
      "flags": "developmentonly"
  },
  {
      "name": "voice_sequence_maximum_wait_time",
      "description": "When receiving packets out of sequence, wait this many seconds for missing sequences to arrive",
      "flags": "developmentonly"
  },
  {
      "name": "voice_always_sample_mic",
      "description": "For systems experiencing a hang/stall when using voice chat.",
      "flags": "archive"
  },
  {
      "name": "snd_mute_losefocus",
      "description": "",
      "flags": "archive"
  },
  {
      "name": "voice_threshold",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "voice_threshold_delay",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "soundsystem_update_async",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "stats_display",
      "description": "Displays perf statistics information",
      "flags": "developmentonly"
  },
  {
      "name": "stats_collect_gpu",
      "description": "While doing stats_display, collect GPU perf counters. Used for stats_print_gpu.",
      "flags": "developmentonly"
  },
  {
      "name": "vprof_counters",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "vprof_counters_show_minmax",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "debug_draw_enable",
      "description": "",
      "flags": "developmentonly replicated"
  },
  {
      "name": "engine_rendersystem_used",
      "description": "Rendersystem option in use (changing this does not change the rendersystem).",
      "flags": "developmentonly"
  },
  {
      "name": "engine_rendersystem_init",
      "description": "Rendersystem option requested (changing this does not change the rendersystem).",
      "flags": "developmentonly"
  },
  {
      "name": "engine_platform_name_extended",
      "description": "Platform the engine is running on.",
      "flags": "developmentonly"
  },
  {
      "name": "engine_ostype",
      "description": "OS type the engine is running on.",
      "flags": "developmentonly"
  },
  {
      "name": "engine_cpu_info_extended",
      "description": "CPU the engine is running on.",
      "flags": "developmentonly"
  },
  {
      "name": "cl_language",
      "description": "Language",
      "flags": "developmentonly"
  },
  {
      "name": "sys_minidumpspewlines",
      "description": "Lines of crash dump console spew to keep.",
      "flags": "release"
  },
  {
      "name": "sv_maxrate",
      "description": "Max bandwidth rate allowed on server, 0 == unlimited",
      "flags": "replicated release"
  },
  {
      "name": "sv_minrate",
      "description": "Min bandwidth rate allowed on server, 0 == unlimited",
      "flags": "replicated release"
  },
  {
      "name": "sys_minidumpexpandedspew",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "report_connection_failure_percentage",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "engine_no_focus_sleep",
      "description": "",
      "flags": "archive"
  },
  {
      "name": "engine_no_focus_sleep_vconsole_suppress",
      "description": "When VConsole is in the foreground, don't trigger engine_no_focus_sleep behavior",
      "flags": "developmentonly"
  },
  {
      "name": "engine_show_frame_pacing",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "battery_saver",
      "description": "OBSOLETE replaced by mobile_fps_* - Battery saver mode. 0=off, 1=on",
      "flags": "archive"
  },
  {
      "name": "mobile_fps_limit",
      "description": "MOBILE_FPS_CONTROL: Mobile FPS limit - 15, 30, 60",
      "flags": "archive"
  },
  {
      "name": "mobile_fps_increase_during_touch",
      "description": "MOBILE_FPS_CONTROL: If true we increase framerate limit during touch",
      "flags": "archive"
  },
  {
      "name": "mobile_fps_increase_during_charging",
      "description": "MOBILE_FPS_CONTROL: If true we increase framerate limit while charging",
      "flags": "archive"
  },
  {
      "name": "mobile_fps_increase_during_hfr_animations",
      "description": "MOBILE_FPS_CONTROL: If true we increase framerate limit during HFR-tagged animations and transitions.",
      "flags": "developmentonly missing0"
  },
  {
      "name": "fps_max",
      "description": "Frame rate limiter.  0=no limit.  Does not apply to dedicated server.",
      "flags": "archive release"
  },
  {
      "name": "fps_max_ui",
      "description": "Frame rate limiter while the game UI is displayed.  0=no limit.  Does not apply to dedicated server.",
      "flags": "archive"
  },
  {
      "name": "fps_max_tools",
      "description": "Additional frame rate limit while in tools mode and a window other than the game window has focus. Note that fps_max still applies, this only allows the maximum frame rate for tools mode to be lower. 0=no tools specific limit.",
      "flags": "archive"
  },
  {
      "name": "sv_fps_max",
      "description": "Dedicated server frame rate limiter. 0=tick rate. Only applies to the dedicated server.",
      "flags": "developmentonly missing0"
  },
  {
      "name": "async_serialize",
      "description": "Force async reads to serialize for profiling",
      "flags": "developmentonly"
  },
  {
      "name": "con_logfile_suffix",
      "description": "Suffix to append to the console log, may be changed to reopen the log",
      "flags": "developmentonly"
  },
  {
      "name": "gameevents_showevents",
      "description": "Dump game events to console. (1 = Show Signaling, 2 = Show Posting also).",
      "flags": "developmentonly"
  },
  {
      "name": "gameevents_showeventlisteners",
      "description": "Show listening addition/removals",
      "flags": "developmentonly"
  },
  {
      "name": "execute_command_every_frame",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "engine_show_frame_dispatch",
      "description": "show frame dispatch names.",
      "flags": "developmentonly"
  },
  {
      "name": "engine_show_frame_ticks",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "engine_show_frame_multiple_ticks",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "engine_vr_max_ticks_to_simulate",
      "description": "Max number of ticks to simulate per frame, after which simulation will start to slow down compared to real time.",
      "flags": "developmentonly"
  },
  {
      "name": "engine_render_only",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "engine_allow_multiple_ticks_per_frame",
      "description": "When the client is catching up in low frame rate situations, should we run tick more than once a frame?",
      "flags": "developmentonly"
  },
  {
      "name": "engine_allow_multiple_simulates_per_frame",
      "description": "When the client is catching up in low frame rate situations, should we run client simulate more than once a frame?",
      "flags": "developmentonly"
  },
  {
      "name": "engine_client_tick_pad_enable",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "ss_voice_hearpartner",
      "description": "Route voice between splitscreen players on same system.",
      "flags": "developmentonly"
  },
  {
      "name": "sv_max_unreliable_delta_size",
      "description": "Maximum allowable entity delta size over unreliable delivery.",
      "flags": "developmentonly"
  },
  {
      "name": "sv_disable_reliable_delta_retransmit",
      "description": "Assume that a reliable entity delta will be ack'ed and send future deltas relative to the last reliable delta.",
      "flags": "developmentonly"
  },
  {
      "name": "sv_ents_write_alarm",
      "description": "Print callstack every time CNetworkGameServerBase::WriteEntityUpdate takes more than this amount of milliseconds",
      "flags": "release"
  },
  {
      "name": "sv_filterban",
      "description": "Set packet filtering by IP mode",
      "flags": "developmentonly"
  },
  {
      "name": "sv_banid_enabled",
      "description": "Whether server supports banid command",
      "flags": "release"
  },
  {
      "name": "sv_banid_dev_enabled",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sv_max_queries_sec",
      "description": "Maximum queries per second to respond to from a single IP address.",
      "flags": "release"
  },
  {
      "name": "sv_max_queries_window",
      "description": "Window over which to average queries per second averages.",
      "flags": "release"
  },
  {
      "name": "sv_max_queries_sec_global",
      "description": "Maximum queries per second to respond to from anywhere.",
      "flags": "release"
  },
  {
      "name": "sv_logblocks",
      "description": "If true when log when a query is blocked (can cause very large log files)",
      "flags": "release"
  },
  {
      "name": "sv_logsdir",
      "description": "Folder in the game directory where server logs will be stored.",
      "flags": "archive"
  },
  {
      "name": "sv_logfile",
      "description": "Log server information in the log file.",
      "flags": "archive"
  },
  {
      "name": "sv_logflush",
      "description": "Flush the log file to disk on each write (slow).",
      "flags": "archive"
  },
  {
      "name": "sv_logecho",
      "description": "Echo log information to the console.",
      "flags": "archive"
  },
  {
      "name": "sv_log_onefile",
      "description": "Log server information to only one file.",
      "flags": "archive"
  },
  {
      "name": "sv_logbans",
      "description": "Log server bans in the server logs.",
      "flags": "archive"
  },
  {
      "name": "sv_parallel_packentities",
      "description": "Set to 1 to use threaded snapshot sending on listen servers, 2 for dedicated servers.",
      "flags": "release"
  },
  {
      "name": "sv_networkvar_validate",
      "description": "Validate each StateChanged against known offsets.",
      "flags": "release"
  },
  {
      "name": "sv_enable_delta_packing",
      "description": "When enabled, this allows for entity packing to use the property changes for building up the data. This is many times faster, but can be disabled for error checking.",
      "flags": "release"
  },
  {
      "name": "sv_usenetworkvars",
      "description": "Use networkvar system.",
      "flags": "developmentonly"
  },
  {
      "name": "sv_networkvar_perfieldtracking",
      "description": "Track individual field offset changes, rather than a single dirty flag for the whole entity.",
      "flags": "release"
  },
  {
      "name": "tv_allow_camera_man_override",
      "description": "Allows cameraman_override to have effect. When this is set, the primary interactive caster will have all the relevant fields present in all network packets, in every snapshot. This allows the secondary cameraman (-interactivecaster that connects to a tv port) to override those fields some seconds later regardless of whether they changed originally or not.",
      "flags": "release"
  },
  {
      "name": "sv_enable_alternate_baselines",
      "description": "Allow alternate baseline system, set to 2 for debugging spew.",
      "flags": "release"
  },
  {
      "name": "rcon_password",
      "description": "remote console password.",
      "flags": "dontrecord release server_cannot_query"
  },
  {
      "name": "rcon_connected_clients_allow",
      "description": "Allow clients to use rcon commands on server.",
      "flags": "replicated release"
  },
  {
      "name": "vconsole_rcon_server_details",
      "description": "when non-empty allows for easy vconsole connection to the dedicated server.",
      "flags": "dontrecord release server_cannot_query"
  },
  {
      "name": "sv_rcon_banpenalty",
      "description": "Number of minutes to ban users who fail rcon authentication",
      "flags": "developmentonly"
  },
  {
      "name": "sv_rcon_maxfailures",
      "description": "Max number of times a user can fail rcon authentication before being banned",
      "flags": "developmentonly"
  },
  {
      "name": "sv_rcon_minfailures",
      "description": "Number of times a user can fail rcon authentication in sv_rcon_minfailuretime before being banned",
      "flags": "developmentonly"
  },
  {
      "name": "sv_rcon_minfailuretime",
      "description": "Number of seconds to track failed rcon authentications",
      "flags": "developmentonly"
  },
  {
      "name": "sv_rcon_log",
      "description": "Enable/disable rcon logging.",
      "flags": "developmentonly"
  },
  {
      "name": "closecaption",
      "description": "Enable close captioning.",
      "flags": "clientdll archive userinfo"
  },
  {
      "name": "hostname",
      "description": "Hostname for server.",
      "flags": "release"
  },
  {
      "name": "hostname_in_client_status",
      "description": "Show server hostname in client status.",
      "flags": "release"
  },
  {
      "name": "developer",
      "description": "Set developer message level.",
      "flags": "developmentonly release"
  },
  {
      "name": "violence_hblood",
      "description": "Draw human blood",
      "flags": "archive"
  },
  {
      "name": "violence_hgibs",
      "description": "Show human gib entities",
      "flags": "archive"
  },
  {
      "name": "violence_ablood",
      "description": "Draw alien blood",
      "flags": "archive"
  },
  {
      "name": "violence_agibs",
      "description": "Show alien gib entities",
      "flags": "archive"
  },
  {
      "name": "sv_unlockedchapters",
      "description": "Highest unlocked game chapter.",
      "flags": "archive"
  },
  {
      "name": "name",
      "description": "",
      "flags": "archive per_user"
  },
  {
      "name": "mem_test_quiet",
      "description": "Don't print stats when memtesting",
      "flags": "developmentonly"
  },
  {
      "name": "mem_test_each_frame",
      "description": "Run heap check at end of every frame",
      "flags": "developmentonly"
  },
  {
      "name": "mem_test_every_n_seconds",
      "description": "Run heap check at a specified interval",
      "flags": "developmentonly"
  },
  {
      "name": "engine_sse42",
      "description": "turn on sse4.2 optimizations in the engine",
      "flags": "developmentonly"
  },
  {
      "name": "sv_temp_baseline_string_table_buffer_size",
      "description": "Buffer size for writing string table baselines",
      "flags": "developmentonly"
  },
  {
      "name": "tv_playcast_delay_resync",
      "description": "To alleviate intermittent network connectivity problems, this is the number of seconds to wait before actually re-syncing the stream after failure",
      "flags": "release"
  },
  {
      "name": "tv_playcast_showerrors",
      "description": "Set to display headers upon error (e.g. \"CF-Ray,CF-Cache-Status,Body\" )",
      "flags": "missing0 release"
  },
  {
      "name": "tv_playcast_origin_auth",
      "description": "Get request X-Origin-Auth string",
      "flags": "missing0 release"
  },
  {
      "name": "tv_playcast_max_rcvage",
      "description": "",
      "flags": "missing0 release"
  },
  {
      "name": "tv_playcast_max_rtdelay",
      "description": "",
      "flags": "missing0 release"
  },
  {
      "name": "tv_playcast_delay_prediction",
      "description": "",
      "flags": "release"
  },
  {
      "name": "tv_playcast_retry_timeout",
      "description": "In case of intermittent network problems, how long should playcast retry fragment retrieval before resorting to resync",
      "flags": "release"
  },
  {
      "name": "tv_broadcast_keyframe_interval",
      "description": "The frequency, in seconds, of sending keyframes and delta fragments to the broadcast relay server",
      "flags": "release"
  },
  {
      "name": "tv_broadcast_keyframe_interval1",
      "description": "The frequency, in seconds, of sending keyframes and delta fragments to the broadcast1 relay server",
      "flags": "release"
  },
  {
      "name": "tv_broadcast_startup_resend_interval",
      "description": "The interval, in seconds, of re-sending startup data to the broadcast relay server (useful in case relay crashes, restarts or startup data http request fails)",
      "flags": "release"
  },
  {
      "name": "tv_broadcast_max_requests",
      "description": "Max number of broadcast http requests in flight. If there is a network issue, the requests may start piling up, degrading server performance. If more than the specified number of requests are in flight, the new requests are dropped.",
      "flags": "release"
  },
  {
      "name": "tv_broadcast_max_requests1",
      "description": "Max number of broadcast1 http requests in flight. If there is a network issue, the requests may start piling up, degrading server performance. If more than the specified number of requests are in flight, the new requests are dropped.",
      "flags": "release"
  },
  {
      "name": "tv_broadcast_drop_fragments",
      "description": "Drop every Nth fragment",
      "flags": "missing0 release"
  },
  {
      "name": "tv_broadcast_terminate",
      "description": "Terminate every broadcast with a stop command",
      "flags": "missing0 release"
  },
  {
      "name": "tv_broadcast_origin_auth",
      "description": "X-Origin-Auth header of the broadcast POSTs",
      "flags": "missing0 release"
  },
  {
      "name": "tv_broadcast_origin_auth1",
      "description": "X-Origin-Auth header of the broadcast1 POSTs",
      "flags": "missing0 release"
  },
  {
      "name": "tv_broadcast_origin_delay",
      "description": "Injection delay request for CDN rebroadcast frameworks, seconds",
      "flags": "missing0 release"
  },
  {
      "name": "tv_maxrate",
      "description": "Max SourceTV spectator bandwidth rate allowed, 0 == unlimited",
      "flags": "release"
  },
  {
      "name": "tv_rate_multiplier",
      "description": "Multiply requested rate by this value to adjust Dota TV send rate",
      "flags": "developmentonly"
  },
  {
      "name": "tv_relaypassword",
      "description": "SourceTV password for relay proxies",
      "flags": "protected notify dontrecord release"
  },
  {
      "name": "tv_chattimelimit",
      "description": "Limits spectators to chat only every n seconds",
      "flags": "release"
  },
  {
      "name": "tv_chatgroupsize",
      "description": "Set the default chat group size",
      "flags": "release"
  },
  {
      "name": "tv_grouprelaydatareliable",
      "description": "When enabled, this will collect all information for relay sending into a single datagram to ensure that the data stays together through a potentially large number of relays",
      "flags": "developmentonly"
  },
  {
      "name": "tv_grouprelaydataunreliable",
      "description": "When enabled, this will collect all information for relay sending into a single datagram to ensure that the data stays together through a potentially large number of relays",
      "flags": "developmentonly"
  },
  {
      "name": "tv_grouprelaydatavoice",
      "description": "Similar to tv_grouprelaydata, but controls whether or not the voice channels should be routed into the grouped data for the relays",
      "flags": "developmentonly"
  },
  {
      "name": "tv_autoretry",
      "description": "Relay proxies retry connection after network timeout",
      "flags": "release"
  },
  {
      "name": "tv_timeout",
      "description": "SourceTV connection timeout in seconds.",
      "flags": "release"
  },
  {
      "name": "tv_snapshotrate",
      "description": "Snapshots broadcast per second",
      "flags": "replicated release"
  },
  {
      "name": "tv_snapshotrate1",
      "description": "Snapshots broadcast per second, GOTV[1]",
      "flags": "release"
  },
  {
      "name": "demo_writefullupdate_rate",
      "description": "Interval time in seconds to write full updates to demo.",
      "flags": "developmentonly"
  },
  {
      "name": "sv_replaysdir",
      "description": "Directory to store replays in",
      "flags": "developmentonly"
  },
  {
      "name": "tv_demo_starttick",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "tv_maxclients",
      "description": "Maximum client number on SourceTV server.",
      "flags": "release"
  },
  {
      "name": "tv_maxclients_relayreserved",
      "description": "This number of relay client connections are reserved for SourceTV relays.",
      "flags": "release"
  },
  {
      "name": "tv_update_hibernation_enabled",
      "description": "Allow SourceTV to control server hibernation state.",
      "flags": "developmentonly"
  },
  {
      "name": "tv_autorecord",
      "description": "Automatically records all games as SourceTV demos.",
      "flags": "release"
  },
  {
      "name": "tv_broadcast",
      "description": "Automatically broadcasts all games as GOTV demos through Steam.",
      "flags": "release"
  },
  {
      "name": "tv_broadcast1",
      "description": "Automatically broadcasts all games as GOTV[1] demos through Steam.",
      "flags": "release"
  },
  {
      "name": "tv_name",
      "description": "SourceTV host name",
      "flags": "release"
  },
  {
      "name": "tv_password",
      "description": "SourceTV password for all clients",
      "flags": "protected notify dontrecord release"
  },
  {
      "name": "tv_advertise_watchable",
      "description": "GOTV advertises the match as watchable via game UI, clients watching via UI will not need to type password",
      "flags": "protected notify dontrecord release"
  },
  {
      "name": "tv_window_size",
      "description": "Specifies the number of seconds worth of frames that the tv replay system should keep in memory. Increasing this greatly increases the amount of memory consumed by the TV system",
      "flags": "developmentonly"
  },
  {
      "name": "tv_enable_delta_frames",
      "description": "Indicates whether or not the tv should use delta frames for storage of intermediate frames. This takes more CPU but significantly less memory.",
      "flags": "release"
  },
  {
      "name": "tv_overridemaster",
      "description": "Overrides the SourceTV master root address.",
      "flags": "release"
  },
  {
      "name": "tv_dispatchmode",
      "description": "Dispatch clients to relay proxies: 0=never, 1=if appropriate, 2=always",
      "flags": "release"
  },
  {
      "name": "tv_transmitall",
      "description": "Transmit all entities (not only director view)",
      "flags": "replicated release"
  },
  {
      "name": "tv_debug",
      "description": "SourceTV debug info.",
      "flags": "release"
  },
  {
      "name": "tv_title",
      "description": "Set title for SourceTV spectator UI",
      "flags": "release"
  },
  {
      "name": "tv_deltacache",
      "description": "Enable delta entity bit stream cache",
      "flags": "release"
  },
  {
      "name": "tv_relayvoice",
      "description": "Relay voice data: 0=off, 1=on",
      "flags": "release"
  },
  {
      "name": "tv_secret_code",
      "description": "When enabled, this will use a uniquely generated server code to authenticate relay connections. This code is coordinated via the GC or some external means rather than by clients directly",
      "flags": "developmentonly"
  },
  {
      "name": "tv_relay_secret_code",
      "description": "When enabled, this will use a uniquely generated server code to authenticate relay to relay connections. This code is coordinated via the GC or some external means rather than by clients directly",
      "flags": "developmentonly"
  },
  {
      "name": "tv_relay_quit_after_game",
      "description": "Quit after a game has been relayed, do not hibernate",
      "flags": "developmentonly"
  },
  {
      "name": "entity_log_load_unserialize",
      "description": "Output unserialization of entities on map load. 0 - off, 1 - client/server, 2 - server, 3 - client",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "demo_recordcommands",
      "description": "Record commands typed at console into .dem files.",
      "flags": "cheat"
  },
  {
      "name": "demo_quitafterplayback",
      "description": "Quits game after demo playback.",
      "flags": "release"
  },
  {
      "name": "demo_pauseatservertick",
      "description": "Pauses demo playback at server tick",
      "flags": "developmentonly"
  },
  {
      "name": "demo_usefastgoto",
      "description": "Use fast frame skipping when available for demo_goto commands.",
      "flags": "developmentonly"
  },
  {
      "name": "timedemo_start",
      "description": "Starts timedemo on given tick.",
      "flags": "developmentonly"
  },
  {
      "name": "timedemo_end",
      "description": "Ends timedemo on given tick.",
      "flags": "developmentonly"
  },
  {
      "name": "demo_flush",
      "description": "Flush writing the demo file every network update",
      "flags": "archive"
  },
  {
      "name": "demo_allow_game_mismatch",
      "description": "Allow playback of demo even if game directories are not matched [may crash or fail to load].",
      "flags": "developmentonly"
  },
  {
      "name": "demo_debug",
      "description": "Turn on demo debug spew.",
      "flags": "developmentonly"
  },
  {
      "name": "cl_showdemooverlay",
      "description": "How often to flash demo recording/playback overlay (0 - disable overlay, -1 - show always)",
      "flags": "developmentonly"
  },
  {
      "name": "cl_flushentitypacket",
      "description": "For debugging. Force the engine to flush an entity packet.",
      "flags": "cheat"
  },
  {
      "name": "cl_parallel_readpacketentities",
      "description": "Set to 1 to use threading snapshot reading (if game supports and server is sending bitcounts).",
      "flags": "developmentonly"
  },
  {
      "name": "cl_parallel_readpacketentities_threshold",
      "description": "Use parallel processing of snapshot reading if above this many entries.",
      "flags": "developmentonly"
  },
  {
      "name": "cl_profilereadpacketentities",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cl_parallel_readpacketentities_type",
      "description": ".   -1 = use default (parallel controller split).   0 = single threaded combined (i.e., ReadFieldList and Decode combined into one call).   1 = single threaded split (first pass ReadFieldList, second pass Decode).       2 = worker thread for decode (main thread does ReadFieldList, worker thread does Decode).       3 = parallel combined (threadpool does read/decode on work items in parallel).  4 = parallel split.     5 = parallel controller combined (like parallel, but uses a parallelcontroller so each thread in pool can share a single SerializedEntity.",
      "flags": ""
  },
  {
      "name": "instant_replay",
      "description": "Enable instant replay recording.",
      "flags": "developmentonly"
  },
  {
      "name": "instant_replay_history_limit",
      "description": "Maximum amount of minutes to save history (0 is unlimited).",
      "flags": "developmentonly"
  },
  {
      "name": "instant_replay_history_limit_low",
      "description": "Maximum amount of minutes to save history on low memory (32 bit) systems (0 is unlimited).",
      "flags": "developmentonly"
  },
  {
      "name": "rcon_address",
      "description": "Address of remote server if sending unconnected rcon commands (format x.x.x.x:p)",
      "flags": "dontrecord release server_cannot_query"
  },
  {
      "name": "cl_clock_correction",
      "description": "Enable/disable clock correction on the client.",
      "flags": "cheat"
  },
  {
      "name": "cl_clockdrift_max_ticks",
      "description": "Maximum number of ticks the clock is allowed to drift before the client snaps its clock to the server's.",
      "flags": "cheat"
  },
  {
      "name": "cl_clock_showdebuginfo",
      "description": "Show debugging info about the clock drift, 1= resets, 2=adjustments, 3=verbose",
      "flags": "developmentonly"
  },
  {
      "name": "cl_clock_correction_force_server_tick",
      "description": "Force clock correction to match the server tick + this offset (-999 disables it).",
      "flags": "cheat"
  },
  {
      "name": "cl_clock_correction_adjustment_max_amount",
      "description": "Sets the maximum number of milliseconds per second it is allowed to correct the client clock. It will only correct this amount if the difference between the client and server clock is equal to or larger than cl_clock_correction_adjustment_max_offset.",
      "flags": "cheat"
  },
  {
      "name": "cl_clock_correction_adjustment_min_offset",
      "description": "If the clock offset is less than this amount (in milliseconds), then no clock correction is applied.",
      "flags": "cheat"
  },
  {
      "name": "cl_clock_correction_adjustment_max_offset",
      "description": "As the clock offset goes from cl_clock_correction_adjustment_min_offset to this value (in milliseconds), it moves towards applying cl_clock_correction_adjustment_max_amount of adjustment. That way, the response is small when the offset is small.",
      "flags": "cheat"
  },
  {
      "name": "cl_resend",
      "description": "Delay in seconds before the client will resend the 'connect' attempt",
      "flags": "release"
  },
  {
      "name": "cl_connectionretrytime_p2p",
      "description": "Number of seconds over which to spread retry attempts for P2P.",
      "flags": "release"
  },
  {
      "name": "password",
      "description": "Current server access password",
      "flags": "archive dontrecord server_cannot_query"
  },
  {
      "name": "cl_clockdbg",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cl_clock_unhook",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cl_timeout",
      "description": "After this many seconds without receiving a packet from the server, the client will disconnect itself",
      "flags": "archive"
  },
  {
      "name": "cl_disconnect_soundevent",
      "description": "This soundevent is called to stop the desired soundevents when the game is disconnected.",
      "flags": "developmentonly"
  },
  {
      "name": "tv_nochat",
      "description": "Don't receive chat messages from other SourceTV spectators",
      "flags": "archive userinfo"
  },
  {
      "name": "cl_ignorepackets",
      "description": "Force client to ignore packets (for debugging).",
      "flags": "cheat"
  },
  {
      "name": "cl_predict_after_every_createmove",
      "description": "run prediction after every CreateMove instead of only after CreateMove for the final tick in a frame.",
      "flags": "developmentonly"
  },
  {
      "name": "spec_replay_rate_base",
      "description": "Base time scale of Killer Replay.Experimental.",
      "flags": "replicated release"
  },
  {
      "name": "rate",
      "description": "Min bytes/sec the host can receive data",
      "flags": "archive userinfo"
  },
  {
      "name": "cl_usercmd_dbg",
      "description": "show usercmd payload sizing info for packets with more than this many usercmds",
      "flags": "developmentonly"
  },
  {
      "name": "cl_usercmd_maxcount",
      "description": "max number of CUserCmds to send in one packet",
      "flags": "release"
  },
  {
      "name": "r_aspectratio",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cl_interpolate",
      "description": "Interpolate entities on the client.",
      "flags": "developmentonly clientdll userinfo"
  },
  {
      "name": "cl_cache_sendtable",
      "description": "Cache sendtables",
      "flags": "developmentonly"
  },
  {
      "name": "cl_sendtable_cache_filename",
      "description": "Send tables cache file",
      "flags": "developmentonly"
  },
  {
      "name": "cl_spawngroup_spewresources",
      "description": "Spew all manifest add/updates.",
      "flags": "developmentonly"
  },
  {
      "name": "cl_log_tick",
      "description": "Log when a tick is received.",
      "flags": "developmentonly"
  },
  {
      "name": "cl_log_tick_skips",
      "description": "Log when the tick delta >= this",
      "flags": "developmentonly"
  },
  {
      "name": "cl_spawngroup_log",
      "description": "Dump the contents of the next spawngroup manifest to file.",
      "flags": "developmentonly"
  },
  {
      "name": "cl_debug_overlays_broadcast",
      "description": "Render debug overlays from server.",
      "flags": "release"
  },
  {
      "name": "sv_pausable_dev",
      "description": "Whether listen server is pausable when running -dev and playing solo against bots",
      "flags": "developmentonly"
  },
  {
      "name": "sv_pausable_dev_ds",
      "description": "Whether dedicated server is pausable when running -dev and playing solo against bots",
      "flags": "developmentonly"
  },
  {
      "name": "sv_pure_kick_clients",
      "description": "If set to 1, the server will kick clients with mismatching files. Otherwise, it will issue a warning to the client.",
      "flags": "release"
  },
  {
      "name": "sv_pure_trace",
      "description": "If set to 1, the server will print a message whenever a client is verifying a CRC for a file.",
      "flags": "release"
  },
  {
      "name": "sv_cheats",
      "description": "Allow cheats on server",
      "flags": "notify replicated release"
  },
  {
      "name": "sv_lan",
      "description": "Server is a lan server ( no heartbeat, no authentication, no non-class C addresses )",
      "flags": "release"
  },
  {
      "name": "sv_pausable",
      "description": "Is the server pausable.",
      "flags": "release"
  },
  {
      "name": "sv_voicecodec",
      "description": "Specifies which voice codec DLL to use in a game. Set to the name of the DLL without the extension.",
      "flags": "release"
  },
  {
      "name": "sv_pvs_max_distance",
      "description": "if set, adds a maximum range to PVS/PAS checks",
      "flags": "replicated release"
  },
  {
      "name": "sv_parallel_sendsnapshot",
      "description": "Set to 1 to use threading snapshot sending on listen servers, 2 for dedicated servers.",
      "flags": "release"
  },
  {
      "name": "sv_skyname",
      "description": "Current name of the skybox texture",
      "flags": "gamedll clientdll archive replicated"
  },
  {
      "name": "sv_debug_overlays_bandwidth",
      "description": "Broadcast server debug overlays traffic",
      "flags": "release"
  },
  {
      "name": "sv_debug_overlays_broadcast",
      "description": "Broadcast server debug overlays",
      "flags": "notify cheat release"
  },
  {
      "name": "sv_voiceenable",
      "description": "",
      "flags": "archive notify release"
  },
  {
      "name": "voice_debugfeedbackfrom",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sv_reserve_slots_for_reconnecting_players_kick_prior",
      "description": "Kick a previously connected player with the same steamID if a replacement comes along",
      "flags": "developmentonly"
  },
  {
      "name": "sv_memlimit",
      "description": "If set, whenever a game ends, if the total memory used by the server is greater than this # of megabytes, the server will exit.",
      "flags": "cheat release"
  },
  {
      "name": "sv_hibernate_postgame_delay",
      "description": "# of seconds to wait after final client leaves before hibernating.",
      "flags": "release"
  },
  {
      "name": "sv_hibernate_when_empty",
      "description": "Puts the server into extremely low CPU usage mode when no clients connected",
      "flags": "release"
  },
  {
      "name": "sv_shutdown_immediately_on_request",
      "description": "The server will always shutdown on receiving the shutdown request, even if not hibernating",
      "flags": "developmentonly"
  },
  {
      "name": "sv_search_key",
      "description": "",
      "flags": "release"
  },
  {
      "name": "sv_region",
      "description": "The region of the world to report this server in.",
      "flags": "release"
  },
  {
      "name": "sv_cluster",
      "description": "Data center cluster this server lives in.",
      "flags": "release"
  },
  {
      "name": "sv_instancebaselines",
      "description": "Enable instanced baselines. Saves network overhead.",
      "flags": "developmentonly"
  },
  {
      "name": "sv_stats",
      "description": "Collect CPU usage stats",
      "flags": "developmentonly"
  },
  {
      "name": "sv_password",
      "description": "Server password for entry into multiplayer games",
      "flags": "protected notify dontrecord release"
  },
  {
      "name": "sv_tags",
      "description": "Server tags. Used to provide extra information to clients when they're browsing for servers. Separate tags with a comma.",
      "flags": "notify release"
  },
  {
      "name": "sv_visiblemaxplayers",
      "description": "Overrides the max players reported to prospective clients",
      "flags": "release"
  },
  {
      "name": "sv_alternateticks",
      "description": "If set, server only simulates entities on even numbered ticks..",
      "flags": "sponly release"
  },
  {
      "name": "sv_steamgroup",
      "description": "The ID of the steam group that this server belongs to. You can find your group's ID on the admin profile page in the steam community.",
      "flags": "notify release"
  },
  {
      "name": "sv_steamgroup_exclusive",
      "description": "If set, only members of Steam group will be able to join the server when it's empty, public people will be able to join the server only if it has players.",
      "flags": "release"
  },
  {
      "name": "sv_hosting_lobby",
      "description": "",
      "flags": "developmentonly replicated"
  },
  {
      "name": "sv_mmqueue_reservation",
      "description": "Server queue reservation",
      "flags": "developmentonly dontrecord"
  },
  {
      "name": "sv_mmqueue_reservation_timeout",
      "description": "Time in seconds before mmqueue reservation expires.",
      "flags": "developmentonly"
  },
  {
      "name": "sv_mmqueue_reservation_extended_timeout",
      "description": "Extended time in seconds before mmqueue reservation expires.",
      "flags": "developmentonly"
  },
  {
      "name": "spawngroup_ignore_timeouts",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sv_snapshot_unlimited",
      "description": "For debugging, don't throw away old snapshots so that if you break in debugger (on remote client or server) it won't require an uncompressed update to resume.  You may run out of memory of course...",
      "flags": "replicated release"
  },
  {
      "name": "sv_timeout",
      "description": "After this many seconds without a message from fully connected client, the client is dropped",
      "flags": "developmentonly"
  },
  {
      "name": "spec_replay_enable",
      "description": "Enable Killer Replay, requires hltv server running (0:off, 1:default, 2:force)",
      "flags": "replicated release missing3"
  },
  {
      "name": "spec_replay_message_time",
      "description": "How long to show the message about Killer Replay after death. The best setting is a bit shorter than spec_replay_autostart_delay + spec_replay_leadup_time + spec_replay_winddown_time",
      "flags": "replicated release"
  },
  {
      "name": "spec_replay_rate_limit",
      "description": "Minimum allowable pause between replay requests in seconds",
      "flags": "replicated release"
  },
  {
      "name": "spec_replay_on_death",
      "description": "When > 0, sets the mode whereas players see delayed replay, and are segregated into a domain of chat and voice separate from the alive players",
      "flags": "replicated release"
  },
  {
      "name": "replay_debug",
      "description": "",
      "flags": "replicated release"
  },
  {
      "name": "sv_maxclientframes",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sv_extra_client_connect_time",
      "description": "Seconds after client connect during which extra frames are buffered to prevent non-delta'd update",
      "flags": "developmentonly"
  },
  {
      "name": "sv_maxreplay",
      "description": "Maximum replay time in seconds",
      "flags": "developmentonly"
  },
  {
      "name": "sv_stressbots",
      "description": "If set to 1, the server calculates data and fills packets to bots. Used for perf testing.",
      "flags": "release"
  },
  {
      "name": "sv_sendtables",
      "description": "Force full sendtable sending path.",
      "flags": "developmentonly"
  },
  {
      "name": "fs_async_threads",
      "description": "Number of IO threads in async filesystem (-1 == auto)",
      "flags": "developmentonly"
  },
  {
      "name": "fs_report_async_io",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "fs_report_sync_opens",
      "description": "0:Off, 1:Always, 2:Not during load",
      "flags": "release"
  },
  {
      "name": "fs_report_long_reads",
      "description": "0:Off, 1:All (for tracking accumulated duplicate read times), >1:Microsecond threashold",
      "flags": "developmentonly"
  },
  {
      "name": "fs_warning_mode",
      "description": "0:Off, 1:Warn main thread, 2:Warn other threads",
      "flags": "developmentonly"
  },
  {
      "name": "fs_fake_read_delay_ms",
      "description": "Add N ms of delay to every low-level read operation, to simulate a slow disk",
      "flags": "developmentonly"
  },
  {
      "name": "filesystem_buffer_size",
      "description": "Size of per file buffers. 0 for none",
      "flags": "developmentonly"
  },
  {
      "name": "filesystem_unbuffered_io",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "filesystem_native",
      "description": "Use native FS or STDIO",
      "flags": "developmentonly"
  },
  {
      "name": "filesystem_max_stdio_read",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "filesystem_report_buffered_io",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "filesystem_fake_latency",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cl_cursor_scale",
      "description": "Cursor size scaling factor.",
      "flags": "archive"
  },
  {
      "name": "cl_auto_cursor_scale",
      "description": "Automatic cursor size scaling.",
      "flags": "archive"
  },
  {
      "name": "joy_wingmanwarrior_centerhack",
      "description": "Wingman warrior centering hack.",
      "flags": "archive"
  },
  {
      "name": "joy_wingmanwarrior_turnhack",
      "description": "Wingman warrior hack related to turn axes.",
      "flags": "archive"
  },
  {
      "name": "joy_axisbutton_threshold",
      "description": "Analog axis range before a button press is registered.",
      "flags": "archive"
  },
  {
      "name": "resourcesystem_multiframe_finalize_time_msec",
      "description": "Max time to spend finalizing resources per frame in miliseconds.",
      "flags": "developmentonly"
  },
  {
      "name": "d3d_max_feature_level",
      "description": "Report the maximum D3D feature level available.",
      "flags": "developmentonly"
  },
  {
      "name": "r_low_latency",
      "description": "NVIDIA Low Latency (0 = off, 1 = on, 2 = on + boost)",
      "flags": "developmentonly"
  },
  {
      "name": "r_low_latency_trigger_flash",
      "description": "NVIDIA Low Latency Trigger Flash",
      "flags": "developmentonly"
  },
  {
      "name": "r_suppress_redundant_state_changes",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_draw_first_tri_only",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "r_draw_instances",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "r_texturefilteringquality",
      "description": "0: Bilinear, 1: Trilinear, 2: Aniso 2x, 3: Aniso 4x, 4: Aniso 8x, 5: Aniso 16x",
      "flags": "developmentonly"
  },
  {
      "name": "r_fullscreen_gamma",
      "description": "Screen Gamma (only in fullscreen modes)",
      "flags": "archive"
  },
  {
      "name": "r_wait_on_present",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_async_shader_compile_notify_frequency",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_multigpu_num_gpus_found",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_multigpu_num_gpus_used",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_dx11_software_cmd_lists",
      "description": "Enable Software Command lists for DX11 (Avoid using deferred contexts)",
      "flags": "developmentonly"
  },
  {
      "name": "r_use_memory_budget_model",
      "description": "Use a model of GPU memory use to determine budget rather than querying the OS.",
      "flags": "developmentonly"
  },
  {
      "name": "r_renderdoc_open_captures",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_timestamp_query_multiplier",
      "description": "Set the TIMESTAMP query cycle multiplier, for drivers that lie",
      "flags": "developmentonly"
  },
  {
      "name": "r_pipeline_stats_present_flush",
      "description": "Experimental: Set to 1 to enable full GPU pipeline flushing after each present.",
      "flags": "developmentonly"
  },
  {
      "name": "r_pipeline_stats_command_flush",
      "description": "Experimental: Set to 1 to enable full GPU pipeline flushing after each command list.",
      "flags": "developmentonly"
  },
  {
      "name": "r_pipeline_stats_use_flush_api",
      "description": "Experimental: Set to 1 to use the ID3D11DeviceContext11::Flush() to flush the GPU pipeline instead of queries.",
      "flags": "developmentonly"
  },
  {
      "name": "r_pipeline_stats_flush_before_sleeping",
      "description": "Experimental: Set to 1 to enable GPU pipeline flushes right before the render thread sleeps to wait for more work.",
      "flags": "developmentonly"
  },
  {
      "name": "r_frame_sync_enable",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_force_no_present",
      "description": "Force the render device to not present frames.",
      "flags": "cheat"
  },
  {
      "name": "multigpu_skip_transfers",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "multigpu_skip_semaphores",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_texture_pool_size",
      "description": "Total size of the texture pool in MB",
      "flags": "developmentonly"
  },
  {
      "name": "r_texture_stream_mip_bias",
      "description": "Biases the mip level the texture streaming system choses to stream for each texture.",
      "flags": "developmentonly"
  },
  {
      "name": "r_max_texture_pool_size",
      "description": "Upper limit on texture pool size.",
      "flags": "developmentonly"
  },
  {
      "name": "r_texture_nonstreaming_load",
      "description": "Allow immediately loading mips of textures (when possible) when their headers are loaded, saving IO & reducing latency.",
      "flags": "developmentonly"
  },
  {
      "name": "r_texture_hookup_uses_threadpool",
      "description": "Async Texture hookup uses its own threadpool instead of the global pool.",
      "flags": "developmentonly"
  },
  {
      "name": "r_texture_stream_max_resolution",
      "description": "Maximum resolution for top mip level in streaming textures. -1 = ignored.",
      "flags": "developmentonly"
  },
  {
      "name": "r_texture_stream_resolution_bias",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_validate_texture_streaming",
      "description": "Dumps state of texture streaming at the next frame boundary.",
      "flags": "developmentonly"
  },
  {
      "name": "r_fallback_texture_orange",
      "description": "Display fallback texture as orange",
      "flags": "developmentonly"
  },
  {
      "name": "r_texture_eager_eviction",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_texture_stream_throttle_amount",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_texture_stream_throttle_count",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_texture_stream_throttle_count_over_budget",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_texture_streamout_unthrottle_ms",
      "description": "After hitting throttling limits for streamout, allow it to continue up to this number of milliseconds.",
      "flags": "developmentonly"
  },
  {
      "name": "r_texture_streaming_timesliced",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_texture_budget_dynamic",
      "description": "Dynamically adjust texture streaming budget based on GPU memory usage.",
      "flags": "developmentonly"
  },
  {
      "name": "r_texture_budget_update_period",
      "description": "Time (in seconds) between updating texture memory budget.",
      "flags": "developmentonly"
  },
  {
      "name": "r_texture_budget_threshold",
      "description": "Reduce texture memory pool size when this percentage of the budget is full.",
      "flags": "developmentonly"
  },
  {
      "name": "r_texture_pool_reduce_rate",
      "description": "Reduce texture memory pool size by this many MB / s when over budget.",
      "flags": "developmentonly"
  },
  {
      "name": "r_texture_pool_increase_rate",
      "description": "Increase texture memory pool size by this many MB / s when under budget.",
      "flags": "developmentonly"
  },
  {
      "name": "r_texture_stream_resolution_bias_update_period",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_texture_stream_resolution_bias_increase_rate",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_texture_stream_resolution_bias_decrease_rate",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_texture_stream_resolution_bias_min",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mat_shader_cache",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mat_warn_bad_modes",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mat_assert_on_error_shader_use",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mat_hide_error_shader",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mat_shading_complexity_color",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_shading_complexity_max_instruction_count",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_shading_complexity_max_register_count",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_overdraw_color",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "font_show_glyph_miss",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mat_colorcorrection",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mat_viewportscale",
      "description": "Scale down the main viewport (to reduce GPU impact on CPU profiling)",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "@panorama_disable_blur",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_disable_box_shadow",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_disable_render_callbacks",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_disable_draw_fancy_quad",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_disable_layer_clear",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_disable_draw_text",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_force_text_shadow_strength",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_disable_draw_text_shadow",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_disable_layer_cache",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_use_backbuffer_directly",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_highlight_composition_layers",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_highlight_slow_operations",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_highlight_bad_opacity_masks",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_stats_log_time",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_min_comp_layer_cache_cost",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_comp_layer_lru_lifetime",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_command_reordering",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_composition_atlas",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_temp_comp_layer_min_dimension",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_disable_render_target_cache",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_render_target_cache_max_size",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "snd_ui_spatialization_spread",
      "description": "",
      "flags": "developmentonly cheat"
  },
  {
      "name": "panorama_spew_async_event_substring",
      "description": "If non-empty, print debug info about async event queue and dispatch behavior for events containing the substring.",
      "flags": "developmentonly missing0"
  },
  {
      "name": "panorama_js_minidumps",
      "description": "Enable sending minidumps on JS Exceptions.",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_max_fps",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_max_overlay_fps",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_max_oof_overlay_up_fps",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_large_dispatch_event_queue",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_frame_limit_v8_gc_microseconds",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_reload_animations",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_debug_overlay_opacity_min",
      "description": "",
      "flags": "missing0 archive"
  },
  {
      "name": "@panorama_debug_overlay_opacity_max",
      "description": "",
      "flags": "missing0 archive"
  },
  {
      "name": "@panorama_debug_overlay_opacity",
      "description": "",
      "flags": "missing0 archive"
  },
  {
      "name": "@panorama_cache_command_list_repaint_threshold",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_cache_command_list_size_threshold",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_disallow_hover_styles",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_debug_ready_for_display",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_style_flag_force_invalidate",
      "description": "Force style invalidation of the entire panel subtree when adding / removing style flags.",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_classes_force_invalidate",
      "description": "Force style invalidation of the entire panel subtree when adding / removing classes.",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_show_fps",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "@panorama_show_fps_scale",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "@panorama_clear_frames_on_device_restore",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_disable_descendant_filtering",
      "description": "Disable descendant selector filtering",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_suspend_paint",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_enable_secondary_layout_pass",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_joystick_axis_repeat_interval_start",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_joystick_axis_repeat_interval_end",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_joystick_axis_repeat_curve_time",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_joystick_button_repeat_interval_start",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_joystick_button_repeat_interval_end",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_joystick_button_repeat_curve_time",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_steampad_button_repeat_interval_start",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "@panorama_steampad_button_repeat_interval_end",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "@panorama_steampad_button_repeat_curve_time",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "@panorama_debug_dead_pad",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "steamcontroller_flow_sensitivity",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "@panorama_dragscroll_affordance",
      "description": "Minimum mouse movement in pixels before a move is treated as a drag scroll",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_dragscroll_mintime",
      "description": "Minimum time that the mouse button must be down before a move is treated as a drag scroll",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_dragscroll_velocitymultiplier",
      "description": "Multiplier for flick velocity off of actual measured velocity",
      "flags": "developmentonly missing0"
  },
  {
      "name": "forceactivecontrollertype",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_spew_layout_invalidates",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_transition_time_factor",
      "description": "A float representing a scale factor for transitions. 1.0 is normal, 2.0 would be twice as fast as normal, 0.5 half as fast",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_max_text_shadow_strength",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_allow_transitions",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_2d_translate_no_comp_layer",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_might_scroll_no_comp_layer",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_box_shadow_no_comp_layer",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_simple_borders_no_comp_layer",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_allow_texture_composition_layer_fast_path",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_transforms_no_comp_layer",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_transform_parents_no_layer_for_perspective",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_hsbc_through_fast_path",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "@panorama_track_render_commands",
      "description": "",
      "flags": "developmentonly missing0"
  },
  {
      "name": "lua_assert_on_error",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "lua_shipping_assert_on_error",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "dti_report_stddev_threshold",
      "description": "For network encoding stats, provide a notes field if field change count is above this many standard deviations for the average field change counts for the serializer.",
      "flags": "release"
  },
  {
      "name": "net_culloptimization",
      "description": "Enable optimization of slow path that makes HLTV CPU consumption high in AnimGraph-using mods. Will switch to this on by default soon.",
      "flags": "developmentonly"
  },
  {
      "name": "net_filelogging",
      "description": "Log packets to files",
      "flags": "developmentonly"
  },
  {
      "name": "net_qosinterval_spew",
      "description": "Spew QoS interval data as we gather it",
      "flags": "developmentonly"
  },
  {
      "name": "net_qospacketloss_percentage_threshold",
      "description": "Spew a warning if packet loss percentage is above this threshold",
      "flags": "developmentonly"
  },
  {
      "name": "net_log_processing",
      "description": "Log network processing",
      "flags": "developmentonly"
  },
  {
      "name": "net_showudp",
      "description": "Dump UDP packets summary to console",
      "flags": "release"
  },
  {
      "name": "net_showudp_remoteonly",
      "description": "Dump non-loopback udp only",
      "flags": "release"
  },
  {
      "name": "net_showmsg",
      "description": "Show incoming message: <0|1|2|name> where 1 == all and 2 == all except net_NOP",
      "flags": "developmentonly"
  },
  {
      "name": "net_showreliable",
      "description": "Like net_showmsg, but only spew reliable messages",
      "flags": "developmentonly"
  },
  {
      "name": "net_showpeaks",
      "description": "Show messages for large packets only: <size>",
      "flags": "developmentonly"
  },
  {
      "name": "net_showdrop",
      "description": "Show dropped packets in console",
      "flags": "developmentonly"
  },
  {
      "name": "net_compresspackets_minsize",
      "description": "Don't bother compressing packets below this size.",
      "flags": "developmentonly"
  },
  {
      "name": "net_restrict_showmsg_socket",
      "description": "If set, only net_showmsg spew for data inbound on this socket name e.g. client, server, etc.",
      "flags": "developmentonly"
  },
  {
      "name": "net_max_message_process_count",
      "description": "Maximum number of messages to process from a client in a single frame (0 == no limit).",
      "flags": "developmentonly"
  },
  {
      "name": "net_max_message_queue_size",
      "description": "Maximum number of messages to allow waiting in queue after processing; exceeding this disconnects the client. 0 == no limit",
      "flags": "developmentonly"
  },
  {
      "name": "net_detailed_canpacket_log",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "net_showoob",
      "description": "Show connectionless UDP traffic.",
      "flags": "developmentonly"
  },
  {
      "name": "ip",
      "description": "Overrides IP for multihomed hosts",
      "flags": "release"
  },
  {
      "name": "hostip",
      "description": "Host game server ip",
      "flags": "release"
  },
  {
      "name": "net_public_adr",
      "description": "For servers behind NAT/DHCP meant to be exposed to the public internet, this is the public facing ip address string: (\"x.x.x.x\" )",
      "flags": "release"
  },
  {
      "name": "net_usesocketsforloopback",
      "description": "Use network sockets layer even for listen server local player's packets (multiplayer only).",
      "flags": "developmentonly"
  },
  {
      "name": "net_maxroutable",
      "description": "Requested max packet size before packets are 'split'.",
      "flags": "archive userinfo"
  },
  {
      "name": "net_p2p_listen_dedicated",
      "description": "Should dedicated server listen for new-style P2P?",
      "flags": "developmentonly"
  },
  {
      "name": "net_fs_showindirections",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "labelled_debug_helper_show_text",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "labelled_debug_helper_show_position",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "labelled_debug_helper_arc_segments",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "labelled_debug_helper_enabled",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "labelled_debug_helper_scale",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "labelled_debug_helper_skeleton_show_bone_names",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "ik_debug_perlin_solver",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "model_default_preview_sequence_name",
      "description": "",
      "flags": "gamedll clientdll archive replicated"
  },
  {
      "name": "phys_build_mesh_wings",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "ik_hinge_debug_bone_index",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "ik_debug_chain_to_filter_by",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "mesh_calculate_curvature_smooth_pass_count",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "mesh_calculate_curvature_smooth_invert",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "mesh_calculate_curvature_smooth_weight",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "anim_decode_forcewritealltransforms",
      "description": "Force BatchAnimationDecode to write transformations for all bones",
      "flags": "developmentonly"
  },
  {
      "name": "iv_debugbone",
      "description": "Debug bone name for interpolation spew of CAnimationState.",
      "flags": "release"
  },
  {
      "name": "skel_constraints_enable",
      "description": "",
      "flags": "replicated cheat"
  },
  {
      "name": "cl_skel_constraints_enable",
      "description": "",
      "flags": "replicated cheat"
  },
  {
      "name": "sv_skel_constraints_enable",
      "description": "",
      "flags": "replicated cheat"
  },
  {
      "name": "anim_resource_validate_on_load",
      "description": "Validates the animation group channel list against the animations on load for every animation",
      "flags": "release"
  },
  {
      "name": "animgraph_footlock_ground_roll",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "animgraph_motionmatching_print_compressionstats",
      "description": "",
      "flags": "developmentonly replicated"
  },
  {
      "name": "animgraph_force_full_network_updates",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "animgraph_enable_dirty_netvar_optimization",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "animgraph_verify_dirty_netvar_optimization",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "animgraph_footlock_enabled",
      "description": "A master convar that effectively disables the entire footlock node.",
      "flags": "developmentonly replicated"
  },
  {
      "name": "animgraph_footlock_hip_offset_enable",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "animgraph_footlock_tilt_mode",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "animgraph_footlock_use_hip_shift",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "animgraph_footlock_draw_footbase",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "animgraph_footlock_trace_ground_enabled",
      "description": "Convar for toggling foot lock ground tracking.",
      "flags": "developmentonly replicated"
  },
  {
      "name": "animgraph_footlock_calculate_tilt",
      "description": "",
      "flags": "developmentonly replicated"
  },
  {
      "name": "animgraph_footlock_auto_ledge_detection",
      "description": "Attempt to detect when the foot is partially hanging off a ledge and stop it tilting to reach the bottom",
      "flags": "developmentonly replicated"
  },
  {
      "name": "animgraph_footlock_auto_stair_detection",
      "description": "Attempt to detect when the foot is on a stair and will stop it from tilting to reach the next step",
      "flags": "developmentonly replicated"
  },
  {
      "name": "animgraph_footlock_debug_foot_index",
      "description": "",
      "flags": "developmentonly replicated"
  },
  {
      "name": "animgraph_footlock_debug_type",
      "description": "",
      "flags": "developmentonly replicated"
  },
  {
      "name": "ik_debug_groundtraces",
      "description": "Show IK trace related details",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "animgraph_slowdownonslopes_enabled",
      "description": "",
      "flags": "developmentonly replicated"
  },
  {
      "name": "animgraph_ik_debug",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "ik_debug_fabrik_backwards_enabled",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "ik_debug_fabrik_forwards_enabled",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "ik_debug_fabrik_backwards_iterations",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "ik_debug_fabrik_forwards_iterations",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "ik_fabrik_align_chain",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "ik_fabrik_override_num_iterations",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "ik_fabrik_forwards_enabled",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "ik_fabrik_backwards_enabled",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "ik_debug_dogleg3bone",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "ik_debug_dogleg3bone_enabled",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "ik_debug_all_chains_unique_color_per_chain",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "ik_debug_planetilt",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "ik_debug_planetilt_axis_length",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "ik_planetilt_enable",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "ik_debug_constraints",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "ik_final_fixup_enable",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "ik_debug_targets",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "ik_constraints_enabled",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "ik_enable",
      "description": "Enable IK.",
      "flags": "cheat"
  },
  {
      "name": "phys_implicit_integarator",
      "description": "Use implicit integrator for gyroscopic forces",
      "flags": "developmentonly notify replicated"
  },
  {
      "name": "phys_drag_multiplier",
      "description": "Multiply air drag",
      "flags": "developmentonly notify replicated"
  },
  {
      "name": "phys_buoyancy_horizontal_damping_multiplier",
      "description": "Multiply water damping for buoyancy affecting linear velocity in the horizontal plane",
      "flags": "developmentonly notify replicated"
  },
  {
      "name": "phys_buoyancy_vertical_damping_multiplier",
      "description": "Multiply water damping for buoyancy affecting linear velocity in the vertical direction",
      "flags": "developmentonly notify replicated"
  },
  {
      "name": "phys_buoyancy_angular_damping_multiplier",
      "description": "Multiply water damping for buoyancy affecting angular velocity",
      "flags": "developmentonly notify replicated"
  },
  {
      "name": "phys_buoyancy_drag_multiplier",
      "description": "Multiply water drag (tries to equalize object velocity with the velocity of the water flow)",
      "flags": "developmentonly notify replicated"
  },
  {
      "name": "phys_fastaddcloneshape",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "rubikon_joint_deepdebugging",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "rubikon_joint_always_draw_at_pivot_point",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "phys_debug_showdefaultmaterial",
      "description": "If enabled, surfaces with default material are highlighted in physics debug geometry.",
      "flags": "cheat"
  },
  {
      "name": "phys_build_mass",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "phys_build_bounds",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "physics_hull_sphere_cast_sat_experimental",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_step",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_sleep_threshold",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_resim_after",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_max_ticks_per_frame",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_step_variability",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_interpolation_strategy",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_rigid_update",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_quasistatic_iters",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_per_bone_scale_enable",
      "description": "Enable per-bone scale in cloth, an experimental feature that is to be universally enabled after a small period of testing",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_guard_threshold",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_watch",
      "description": "",
      "flags": "developmentonly replicated"
  },
  {
      "name": "cloth_debug",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_damping_multiplier",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_damping_bias",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_ground_plane_thickness",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_node_debug_axis_length",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_quad_smooth_rate",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_rod_smooth_rate",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_quad_smooth_iterations",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_rod_smooth_iterations",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_debug_draw_nodepth_alpha",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_ground_offset",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_legacy_stretch_force",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_legacy_support",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_wind",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_wind_pitch",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_dry_drag",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_dry_drag_soften",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_approximate_collide",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "phys_validate",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "phys2_debug_broadphase",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "physics_sphere_cast_with_epsilon_experimental",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_simulate",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_batch",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cl_jiggle_bone_debug",
      "description": "Display physics-based 'jiggle bone' debugging information",
      "flags": "cheat"
  },
  {
      "name": "cl_jiggle_bone_debug_yaw_constraints",
      "description": "Display physics-based 'jiggle bone' debugging information",
      "flags": "cheat"
  },
  {
      "name": "cl_jiggle_bone_debug_pitch_constraints",
      "description": "Display physics-based 'jiggle bone' debugging information",
      "flags": "cheat"
  },
  {
      "name": "cl_jiggle_bone_invert",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "cl_jiggle_bone_sanity",
      "description": "Prevent jiggle bones from pointing directly away from their target in case of numerical instability.",
      "flags": "developmentonly"
  },
  {
      "name": "phys_jiggle_bone_enable",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "phys_old_contact_draw",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "phys2_contact_debug_draw_size",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "phys_cull_internal_mesh_contacts",
      "description": "",
      "flags": "developmentonly replicated"
  },
  {
      "name": "phys_fast_report_contacts",
      "description": "when 1, fast path for collision reporting is implemented making triggers faster in some cases",
      "flags": "developmentonly"
  },
  {
      "name": "hullivr_edge_merge_tan",
      "description": "Should we try to straighten two faces connected to this edge? (tangent)",
      "flags": "developmentonly replicated"
  },
  {
      "name": "hullivr_faceisland_merge_tan",
      "description": "Should we try to straighten an island of faces deviating from their average normal (tangent)?",
      "flags": "developmentonly replicated"
  },
  {
      "name": "hullivr_faceisland_merge_disp",
      "description": "Should we straighten face island if the displacement is this much? (inches)",
      "flags": "developmentonly replicated"
  },
  {
      "name": "hullivr_version",
      "description": "",
      "flags": "developmentonly replicated"
  },
  {
      "name": "vphysics_force_apply_magnitude",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "vphysics_return_implicit_velocity",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "phys_position_iterations",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "phys_velocity_iterations",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "vphys2_friction_factor",
      "description": "Change global friction factor",
      "flags": "cheat"
  },
  {
      "name": "vphys2_restitution_factor",
      "description": "Change global restitution factor",
      "flags": "cheat"
  },
  {
      "name": "phys_reload_immediately",
      "description": "Set to 1 to reload resources and reconstruct physics of entities on the fly. May unexpectedly change behavior or crash the game, because game code is generally unaware of underlying resource reloads and may hold references to physics that may become invalid during resource reload. It is inherently harder for physics to deal with resource reloads because of persistent nature of objects being simulated (textures can be easily reloaded on the fly; if an entity holds a handle to a ragdoll body part, it may expect that handle to stay valid while the ragdoll exists)",
      "flags": "developmentonly"
  },
  {
      "name": "cloth_reload_immediately",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "phys_step_threaded",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "snd_occlusion_bounces",
      "description": "",
      "flags": "replicated cheat"
  },
  {
      "name": "snd_occlusion_indirect_radius",
      "description": "",
      "flags": "developmentonly cheat"
  },
  {
      "name": "snd_occlusion_debug_listener_pos",
      "description": "",
      "flags": "developmentonly cheat"
  },
  {
      "name": "snd_occlusion_indirect_min",
      "description": "",
      "flags": "developmentonly cheat"
  },
  {
      "name": "snd_occlusion_indirect_max",
      "description": "",
      "flags": "developmentonly cheat"
  },
  {
      "name": "snd_sos_show_operator_pause_entry",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_steamaudio_pathing_enablevis",
      "description": "Enable visualization for pathing.",
      "flags": "cheat"
  },
  {
      "name": "snd_steamaudio_pathing_enablevalidationvis",
      "description": "Enable visualization for pathing validation.",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_show_operator_stop_entry",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_limit_self",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "snd_sos_show_queuetotrack",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_show_voice_elapsed_time",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "snd_sos_show_soundevent_start",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_show_operator_init",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_show_operator_updates",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_show_operator_shutdown",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_list_operator_updates",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_show_operator_event_filter",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_show_operator_operator_filter",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_show_operator_not_executing",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_show_operator_event_and_stack",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_show_operator_field_filter",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_print_full_field_info",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_print_field_references",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_show_soundevent_param_overwrite",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_max_event_base_depth",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "snd_sos_show_parameter_overwrite_warnings",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "snd_sos_opvar_debug",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_show_opvar_updates",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_show_opvar_updates_filter",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_soundevent_filter",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_pause_system",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_block_stop_global_stack",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_block_global_stack",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_ingame_debug",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_show_track_list",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "snd_sequencer_show_bpm",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sequencer_show_events",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sequencer_show_quantize_queue",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_enable_subgraph_log",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "snd_enable_subgraph_corenull_passthrough",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "silence_dsp",
      "description": "When on, silences all DSP mixes.",
      "flags": "cheat"
  },
  {
      "name": "adsp_room_min",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "adsp_duct_min",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "adsp_hall_min",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "adsp_tunnel_min",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "adsp_street_min",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "adsp_alley_min",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "adsp_courtyard_min",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "adsp_openspace_min",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "adsp_openwall_min",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "adsp_openstreet_min",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "adsp_opencourtyard_min",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "adsp_debug",
      "description": "",
      "flags": "archive"
  },
  {
      "name": "adsp_door_height",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "adsp_wall_height",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "adsp_low_ceiling",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "snd_mergemethod",
      "description": "Sound merge method (0 == sum and clip, 1 == max, 2 == avg).",
      "flags": "developmentonly"
  },
  {
      "name": "snd_gamevolume",
      "description": "Game volume",
      "flags": "archive"
  },
  {
      "name": "snd_voipvolume",
      "description": "Voice volume",
      "flags": "archive"
  },
  {
      "name": "snd_gamevoicevolume",
      "description": "Game v.o. volume",
      "flags": "archive"
  },
  {
      "name": "snd_delay_sound_ms_shift",
      "description": "Sound device synchronization shift (ms)",
      "flags": "developmentonly"
  },
  {
      "name": "snd_delay_sound_ms_max",
      "description": "Sound device synchronization max delay (ms)",
      "flags": "developmentonly"
  },
  {
      "name": "volume",
      "description": "Sound volume",
      "flags": "archive"
  },
  {
      "name": "snd_toolvolume",
      "description": "Volume of sounds in tools (e.g. Hammer, SFM)",
      "flags": "archive"
  },
  {
      "name": "snd_musicvolume",
      "description": "Music volume",
      "flags": "archive"
  },
  {
      "name": "snd_autodetect_latency",
      "description": "",
      "flags": "archive"
  },
  {
      "name": "snd_mixahead",
      "description": "",
      "flags": "archive"
  },
  {
      "name": "snd_mix_async",
      "description": "",
      "flags": "developmentonly cheat"
  },
  {
      "name": "dsp_dist_min",
      "description": "",
      "flags": "cheat demo"
  },
  {
      "name": "dsp_dist_max",
      "description": "",
      "flags": "cheat demo"
  },
  {
      "name": "dsp_mix_min",
      "description": "",
      "flags": "developmentonly demo"
  },
  {
      "name": "dsp_mix_max",
      "description": "",
      "flags": "developmentonly demo"
  },
  {
      "name": "dsp_db_min",
      "description": "",
      "flags": "developmentonly demo"
  },
  {
      "name": "dsp_db_mixdrop",
      "description": "",
      "flags": "developmentonly demo"
  },
  {
      "name": "snd_showstart",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_filter",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "dsp_automatic",
      "description": "",
      "flags": "developmentonly demo"
  },
  {
      "name": "dsp_off",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "dsp_volume",
      "description": "",
      "flags": "archive demo"
  },
  {
      "name": "dsp_vol_5ch",
      "description": "",
      "flags": "developmentonly demo"
  },
  {
      "name": "dsp_vol_4ch",
      "description": "",
      "flags": "developmentonly demo"
  },
  {
      "name": "dsp_vol_2ch",
      "description": "",
      "flags": "developmentonly demo"
  },
  {
      "name": "snd_mixer_master_level",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_mixer_master_dsp",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_showclassname",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_list",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_disable_mixer_solo",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_soundmixer",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "snd_disable_mixer_duck",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_soundmixer_version",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "snd_async_spew_blocking",
      "description": "Spew message to console any time async sound loading blocks on file i/o.",
      "flags": "developmentonly"
  },
  {
      "name": "snd_refdist",
      "description": "Reference distance for snd_refdb",
      "flags": "cheat"
  },
  {
      "name": "snd_refdb",
      "description": "Reference dB at snd_refdist",
      "flags": "cheat"
  },
  {
      "name": "snd_gain",
      "description": "",
      "flags": "archive"
  },
  {
      "name": "snd_gain_max",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_gain_min",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_default_update_stack",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "snd_compare_KV_convert",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "snd_sos_use_case_sensitive_soundevents",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "snd_sos_soundevent_deferred_interval_time",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "snd_sos_soundevent_max_deferred_time",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "speaker_config",
      "description": "",
      "flags": "archive"
  },
  {
      "name": "sound_device_override",
      "description": "ID of the sound device to use",
      "flags": "archive release"
  },
  {
      "name": "snd_enable_imgui",
      "description": "Game/Sound System Debugger",
      "flags": "developmentonly archive cheat menubar_item"
  },
  {
      "name": "snd_hrtf_distance_behind",
      "description": "HRTF calculations will calculate the player as being this far behind the camera.",
      "flags": "developmentonly"
  },
  {
      "name": "dota_enable_spatial_audio",
      "description": "Flag to enable spatial audio in Dota 2.",
      "flags": "developmentonly"
  },
  {
      "name": "dota_spatial_audio_mix",
      "description": "Mix value to blend spatial and non-spatial audio in Dota 2.",
      "flags": "developmentonly"
  },
  {
      "name": "snd_vmix_show_input_updates",
      "description": "If set to 1, show all incoming updates to vmix inputs..",
      "flags": "cheat"
  },
  {
      "name": "snd_vmix_override_mix_decay_time",
      "description": "If set > 0, overrides how long the decay time is on all mix graphs (in seconds)..",
      "flags": "cheat"
  },
  {
      "name": "snd_report_verbose_error",
      "description": "If set to 1, report more error found when playing sounds..",
      "flags": "cheat"
  },
  {
      "name": "snd_envelope_rate",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_ducktovolume",
      "description": "",
      "flags": "archive"
  },
  {
      "name": "snd_duckerattacktime",
      "description": "",
      "flags": "archive"
  },
  {
      "name": "snd_duckerreleasetime",
      "description": "",
      "flags": "archive"
  },
  {
      "name": "snd_duckerthreshold",
      "description": "",
      "flags": "archive"
  },
  {
      "name": "voice_loopback",
      "description": "",
      "flags": "userinfo"
  },
  {
      "name": "voice_fadeouttime",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "voice_stall_ms",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "voice_min_buffer_ms",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "voice_initial_buffer_ms",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "snd_sos_show_block_debug",
      "description": "Spew data about the list of block entries.",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_show_entry_match_free",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "snd_op_test_convar",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_dsp_distance_min",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_dsp_distance_max",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "snd_sos_report_entity_deleted",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "snd_sos_calc_angle_debug",
      "description": "",
      "flags": "replicated cheat"
  },
  {
      "name": "snd_sos_show_mixgroup_path_errors",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "snd_occlusion_debug",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "cl_snd_cast_clear",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cl_snd_cast_retrigger",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "snd_occlusion_min_wall_thickness",
      "description": "",
      "flags": "replicated cheat"
  },
  {
      "name": "snd_occlusion_report",
      "description": "",
      "flags": "developmentonly cheat"
  },
  {
      "name": "snd_occlusion_override",
      "description": "",
      "flags": "developmentonly replicated cheat"
  },
  {
      "name": "snd_occlusion_visualize",
      "description": "",
      "flags": "developmentonly cheat"
  },
  {
      "name": "snd_occlusion_rays",
      "description": "",
      "flags": "replicated cheat"
  },
  {
      "name": "snd_steamaudio_max_occlusion_samples",
      "description": "The maximum number of rays that can be traced for volumetric occlusion by Steam Audio.",
      "flags": "cheat"
  },
  {
      "name": "snd_steamaudio_num_rays",
      "description": "The number of rays to trace for reflection modeling by Steam Audio.",
      "flags": "cheat"
  },
  {
      "name": "snd_steamaudio_num_diffuse_samples",
      "description": "The number of directions considered for ray bounce by Steam Audio.",
      "flags": "cheat"
  },
  {
      "name": "snd_steamaudio_num_bounces",
      "description": "The maximum number of times any ray can bounce when using Steam Audio.",
      "flags": "cheat"
  },
  {
      "name": "snd_steamaudio_num_threads",
      "description": "Sets the number of threads used for realtime reflection by Steam Audio.",
      "flags": "cheat"
  },
  {
      "name": "snd_steamaudio_ir_duration",
      "description": "The time delay between a sound being emitted and the last audible reflection in Steam Audio.",
      "flags": "cheat"
  },
  {
      "name": "snd_steamaudio_ambisonics_order",
      "description": "The amount of directional detail in the simulated by Steam Audio.",
      "flags": "cheat"
  },
  {
      "name": "snd_steamaudio_max_convolution_sources",
      "description": "The maximum number of simultaneous sources that can be modeled by Steam Audio.",
      "flags": "cheat"
  },
  {
      "name": "snd_steamaudio_reverb_order",
      "description": "Ambisonics order to use for convolution reverb. 0th order = 1 channel, 1st order = 4 channels.",
      "flags": "developmentonly"
  },
  {
      "name": "snd_steamaudio_hybrid_reverb_transition_time",
      "description": "Set the transition time (in seconds) between convolution and parametric reverb.",
      "flags": "developmentonly"
  },
  {
      "name": "snd_steamaudio_hybrid_reverb_overlap",
      "description": "Set the overlap fraction (0 to 1) for hybrid reverb.",
      "flags": "developmentonly"
  },
  {
      "name": "snd_steamaudio_reverb_update_rate",
      "description": "Set the maximum update rate (in Hz) for reverb.",
      "flags": "developmentonly"
  },
  {
      "name": "snd_steamaudio_enable_custom_hrtf",
      "description": "Enable custom HRTF loading.",
      "flags": "developmentonly"
  },
  {
      "name": "snd_steamaudio_active_hrtf",
      "description": "Index of active HRTF.",
      "flags": "developmentonly"
  },
  {
      "name": "snd_steamaudio_enable_pathing",
      "description": "This variable is checked by soundstack to globally enabling pathing for audio processing.",
      "flags": "cheat"
  },
  {
      "name": "snd_steamaudio_load_pathing_data",
      "description": "If set, baked pathing data is loaded. Steam Audio Hammer entities can successfully use pathing in this case.",
      "flags": "cheat"
  },
  {
      "name": "snd_steamaudio_load_reverb_data",
      "description": "If set, baked reverb data is loaded. Reset it to zero during an format changes of baked data until all data is updated.",
      "flags": "cheat"
  },
  {
      "name": "mat_tonemap_csgo_force_rate",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_tonemap_csgo_force_accelerate_exposure_down",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_tonemap_csgo_force_use_alpha",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_tonemap_csgo_force_scale",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_tonemap_csgo_uncap_exposure",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_tonemap_csgo_debug",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mat_tonemap_csgo_bloom_start_value",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_tonemap_csgo_bloom_scale",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "volume_fog_enable_jitter",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "volume_fog_enable_stereo",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "volume_fog_disable",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "volume_fog_clipmap_update",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "volume_fog_clipmaps_enabled",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "volume_fog_intermediate_textures_hdr",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "volume_fog_enlarge_frusta",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "volume_fog_dither_scale",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "volume_fog_show_volumes",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "volume_fog_width",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "volume_fog_height",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "volume_fog_depth",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "volume_fog_jitter_offset_random",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_light_probe_volume_debug_grid_albedo",
      "description": "albedo for LPV debug grid",
      "flags": "cheat"
  },
  {
      "name": "rtx_force_default_hitgroup",
      "description": "Forces all ray traced geometry to use default hit shaders instead of specialized ones.",
      "flags": "developmentonly"
  },
  {
      "name": "csm_slope_scale_db_override",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "csm_split_log_scalar",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "csm_res_override_0",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "csm_res_override_1",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "csm_res_override_2",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "csm_res_override_3",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "csm_bias_override_0",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "csm_bias_override_1",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "csm_bias_override_2",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "csm_bias_override_3",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "csm_max_num_cascades_override",
      "description": "Number of cascades in sunlight shadow",
      "flags": "developmentonly"
  },
  {
      "name": "csm_max_shadow_dist_override",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "csm_viewmodel_shadows",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "csm_viewmodel_max_shadow_dist",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "csm_viewmodel_farz",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "csm_viewmodel_max_visible_dist",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "csm_viewdir_shadow_bias",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "csm_cascade_viewdir_shadow_bias_scale",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "csm_cascade0_override_dist",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "csm_cascade1_override_dist",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "csm_cascade2_override_dist",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "csm_cascade3_override_dist",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "r_stereo_multiview_instancing",
      "description": "Use multiview instancing for stereo rendering.",
      "flags": "cheat"
  },
  {
      "name": "sc_log_submits",
      "description": "Log out display list submits from scenesystem",
      "flags": "cheat"
  },
  {
      "name": "sc_max_framebuffer_copies_per_layer",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_queue_reflection_views_to_layers",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_show_rejected_objects",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_show_rejected_objects_range",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_allow_secondary_contexts",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_force_single_display_list_per_layer",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_parallel_render_a_view",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_no_cull",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_no_vis",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_bounds_group_cull",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_disable_culling_boxes",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "sc_layer_batch_threshold",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_layer_batch_threshold_fullsort",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_disable_shadow_materials",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "sc_disable_shadow_fastpath",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "sc_extended_stats",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "sc_hdr_enabled_override",
      "description": "Override default setting for HDR rendering. -1 default, 0 NoHdr, 1 Hdr, 2 Hdr 1010102 3 Hdr 111110",
      "flags": "developmentonly"
  },
  {
      "name": "r_lightBinnerFarPlane",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "r_cs_skinning",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_force_translation_in_projection",
      "description": "If enabled, the camera's translation will be included in the projection matrix.",
      "flags": "cheat"
  },
  {
      "name": "sc_dump_lists",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "sc_disable_baked_lighting",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_check_world",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "sc_lod_distance_scale_override",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "r_fallback_texture_lod_scale",
      "description": "Scale factor for requested texture size (texture streaming) - used for geo that doesn't have a precomputed UV density measure",
      "flags": "cheat"
  },
  {
      "name": "r_texture_lod_scale",
      "description": "Scale factor for requested texture size (texture streaming)",
      "flags": "cheat"
  },
  {
      "name": "sc_force_lod_level",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "sc_reject_all_objects",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "sc_skip_traversal",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "sc_disable_procedural_layer_rendering",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "sc_only_render_shadowcasters",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "sc_only_render_opaque",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "sc_skip_identical_rt_binds",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_throw_away_all_layers",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_keep_all_layers",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_batch_layer_cb_updates",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_new_morph_atlasing",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_spew_cmt_usage",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_disableThreading",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "r_shadows",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "debugoverlay_show_text_outline",
      "description": "Toggle display of box around text",
      "flags": "cheat"
  },
  {
      "name": "debugoverlay_force_respect_ttl",
      "description": "Force respect TTL even when clearing scopes",
      "flags": "cheat"
  },
  {
      "name": "screenmessage_show",
      "description": "Enable display of console messages on screen. 1 = Enabled, 0 = Disabled, -1 = Enabled if vgui is not present",
      "flags": "cheat"
  },
  {
      "name": "debugoverlay_ignore_source",
      "description": "Draw everything normal and ignore the source for rendering",
      "flags": "cheat"
  },
  {
      "name": "debugoverlay_draw_current",
      "description": "Tell debugoverlay to not draw any entries that have aged out by the time of rendering. Useful if sim runs more often than rendering.",
      "flags": "cheat"
  },
  {
      "name": "r_reset_character_decals",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_character_decal_resolution",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_character_decal_renderdoc_capture",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_fullscreen_quad_single_triangle",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_ssao_radius",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_ssao_bias",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_ssao_strength",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_ssao_blur",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mat_tonemap_force_min",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_tonemap_force_max",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_tonemap_force_percent_target",
      "description": "Override. Old default was 45.",
      "flags": "cheat"
  },
  {
      "name": "mat_tonemap_force_percent_bright_pixels",
      "description": "Override. Old value was 1.0",
      "flags": "cheat"
  },
  {
      "name": "mat_tonemap_force_average_lum_min",
      "description": "Override. Old default was 3.0",
      "flags": "cheat"
  },
  {
      "name": "mat_tonemap_force_rate",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_tonemap_force_accelerate_exposure_down",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_tonemap_force_use_alpha",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_tonemap_force_scale",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_tonemap_uncap_exposure",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_tonemap_debug",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mat_tonemap_force_log_lum_min",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_tonemap_force_log_lum_max",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_tonemap_bloom_start_value",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_tonemap_bloom_scale",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "sc_show_tonemap_visualizer",
      "description": "SceneSystem/Tonemap Visualizer",
      "flags": "developmentonly cheat menubar_item"
  },
  {
      "name": "mat_tonemap_csgo_force_min",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_tonemap_csgo_force_max",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "mat_tonemap_csgo_force_percent_target",
      "description": "Override. Old default was 45.",
      "flags": "cheat"
  },
  {
      "name": "mat_tonemap_csgo_force_percent_bright_pixels",
      "description": "Override. Old value was 1.0",
      "flags": "cheat"
  },
  {
      "name": "mat_tonemap_csgo_force_average_lum_min",
      "description": "Override. Old default was 3.0",
      "flags": "cheat"
  },
  {
      "name": "sc_show_gpu_profiler",
      "description": "SceneSystem/GPU Profiler",
      "flags": "developmentonly cheat menubar_item"
  },
  {
      "name": "sc_show_texture_visualizer",
      "description": "SceneSystem/Texture Visualizer",
      "flags": "developmentonly cheat menubar_item"
  },
  {
      "name": "sc_draw_aggregate_meshes",
      "description": "SceneSystem/Aggregates/Draw Aggregates",
      "flags": "developmentonly menubar_item"
  },
  {
      "name": "sc_aggregate_gpu_culling",
      "description": "Toggles GPU culling of aggregate meshes",
      "flags": "developmentonly"
  },
  {
      "name": "sc_aggregate_gpu_occlusion_culling",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_aggregate_gpu_culling_show_culled",
      "description": "SceneSystem/Aggregates/Show GPU Culled Meshes",
      "flags": "developmentonly menubar_item"
  },
  {
      "name": "sc_aggregate_gpu_culling_conservative_bounds",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_aggregate_material_solo",
      "description": "",
      "flags": "developmentonly cheat"
  },
  {
      "name": "r_aoproxy_min_dist",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_aoproxy_min_dist_box",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_aoproxy_cull_dist",
      "description": "Distance to cull the AO proxy as a factor of size",
      "flags": "developmentonly"
  },
  {
      "name": "r_morphing_enabled",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "r_skinning_enabled",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "sc_force_push_constant_update_every_draw",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_allow_dynamic_constant_batching",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_visualize_sceneobjects",
      "description": "1 = visualize bounds, 2 = visualize sceneobject mesh materials, 3 = required texture size, 4 = bounds group, 5 = LOD, 6 == LPV Binding",
      "flags": "developmentonly"
  },
  {
      "name": "sc_visualize_batches",
      "description": "color per batch",
      "flags": "developmentonly"
  },
  {
      "name": "sc_mesh_backface_culling",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_force_materials_batchable",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "sc_disable_world_materials",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "fog_override",
      "description": "Overrides the map's fog settings (-1 populates fog_ vars with map's values)",
      "flags": "clientdll cheat"
  },
  {
      "name": "fog_color",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "fog_hdrcolorscale",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_dither_scale",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "lb_cubemap_normalization_max",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "lb_cubemap_normalization_roughness_begin",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_directional_lightmaps",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_light_probe_volume_debug_colors",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "r_cubemap_debug_colors",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "r_light_probe_volume_debug_grid",
      "description": "Show LPV debug grid, 0: off, 1: closest only 2: closest and keep 3: all",
      "flags": "cheat"
  },
  {
      "name": "r_light_probe_volume_debug_grid_bbox",
      "description": "Show LPV bounding box when debug grid is on, 0: off, 1: on",
      "flags": "cheat"
  },
  {
      "name": "lb_shadow_map_culling",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "lb_allow_time_sliced_shadow_map_rendering",
      "description": "Allow time-sliced shadow buffer rendering when enabled via gameinfo.gi",
      "flags": "developmentonly"
  },
  {
      "name": "lb_convert_to_barn_lights_falloff_match_point",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "lb_sun_csm_size_cull_threshold_texels",
      "description": "Size, in texels, where we will cull an object in the shadowmap",
      "flags": "developmentonly"
  },
  {
      "name": "lb_csm_override_staticgeo_cascades",
      "description": "Override Cascades that will render static objects with lb_csm_override_staticgeo_cascades_value",
      "flags": "developmentonly"
  },
  {
      "name": "lb_csm_override_staticgeo_cascades_value",
      "description": "If lb_csm_override_staticgeo_cascades, override value used to determine which cascades render static objects",
      "flags": "developmentonly"
  },
  {
      "name": "sc_cache_envmap_lpv_lookup",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_cpu_light_binner_use_gpu",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_cpu_light_binner_default_spec_env_fade_time",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_cpu_light_binner_allow_sun_shadows_on_spots",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_cpu_light_binner_shadow_target_size",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_cpu_light_binner_spot_shadow_size",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_cpu_light_binner_32bit_shadows",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_override_shadow_fade_min_dist",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "sc_override_shadow_fade_max_dist",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "lb_enable_lights",
      "description": "SceneSystem/LightBinner/Enable Lights",
      "flags": "developmentonly cheat menubar_item"
  },
  {
      "name": "lb_enable_envmaps",
      "description": "SceneSystem/LightBinner/Enable EnvMaps",
      "flags": "developmentonly cheat menubar_item"
  },
  {
      "name": "lb_use_illumination_silhouette",
      "description": "SceneSystem/LightBinner/Use Illumination Bounds",
      "flags": "developmentonly cheat menubar_item"
  },
  {
      "name": "lb_use_ellipsoid_bounds",
      "description": "",
      "flags": "developmentonly cheat"
  },
  {
      "name": "lb_debug_silhouette",
      "description": "SceneSystem/LightBinner/Debug Silhouettes",
      "flags": "developmentonly cheat menubar_item"
  },
  {
      "name": "lb_debug_tiles",
      "description": "SceneSystem/LightBinner/Debug Tiles",
      "flags": "developmentonly cheat menubar_item"
  },
  {
      "name": "lb_enable_stationary_lights",
      "description": "Allows rendering stationary/mixed lights",
      "flags": "developmentonly cheat"
  },
  {
      "name": "lb_enable_dynamic_lights",
      "description": "Allows rendering dynamic lights",
      "flags": "developmentonly cheat"
  },
  {
      "name": "lb_enable_shadow_casting",
      "description": "Allow stationary/dynamic lights to cast shadows.",
      "flags": "developmentonly"
  },
  {
      "name": "lb_enable_baked_shadows",
      "description": "SceneSystem/LightBinner/Enable Baked Shadows",
      "flags": "developmentonly cheat menubar_item"
  },
  {
      "name": "lb_mixed_shadows",
      "description": "SceneSystem/LightBinner/Enable Mixed Shadows",
      "flags": "developmentonly cheat menubar_item"
  },
  {
      "name": "lb_debug_shadow_atlas",
      "description": "SceneSystem/LightBinner/Debug Dynamic Shadow Atlas",
      "flags": "developmentonly cheat menubar_item"
  },
  {
      "name": "lb_debug_light_bounds",
      "description": "SceneSystem/LightBinner/Debug Light Bounds",
      "flags": "developmentonly cheat menubar_item"
  },
  {
      "name": "lb_show_light_fog_clipmap_cb_cost",
      "description": "Show cost of lights in fog clipmap constant buffer. yellow = 1 cost, red = 6 cost",
      "flags": "cheat"
  },
  {
      "name": "lb_enable_binning",
      "description": "SceneSystem/LightBinner/Enable Binning",
      "flags": "developmentonly menubar_item"
  },
  {
      "name": "lb_tile_pixels",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "lb_bin_slices",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "lb_shadow_texture_width_override",
      "description": "Override width of shadow atlas texture",
      "flags": "developmentonly"
  },
  {
      "name": "lb_shadow_texture_height_override",
      "description": "Override height of shadow atlas texture",
      "flags": "developmentonly"
  },
  {
      "name": "lb_csm_cascade_size_override",
      "description": "Override width/height of individual cascades in the CSM",
      "flags": "developmentonly"
  },
  {
      "name": "lb_csm_receiver_plane_depth_bias",
      "description": "Depth bias applied to shadow receiver",
      "flags": "developmentonly"
  },
  {
      "name": "lb_csm_draw_alpha_tested",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "lb_csm_draw_translucent",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "lb_enable_sunlight",
      "description": "SceneSystem/LightBinner/Enable Sunlight",
      "flags": "developmentonly cheat menubar_item"
  },
  {
      "name": "lb_low_quality_shader_fade_region_rescale",
      "description": "For envmaps in low quality shader mode, how much of the fade region to scale the envmap box by.",
      "flags": "developmentonly cheat"
  },
  {
      "name": "lb_max_visible_envmaps_override",
      "description": "Override maximum visible envmaps",
      "flags": "developmentonly cheat"
  },
  {
      "name": "lb_max_visible_barn_lights_override",
      "description": "Override maximum visible barn lights",
      "flags": "developmentonly cheat"
  },
  {
      "name": "lb_shadow_map_allocation_failure_policy",
      "description": "What happens when a shadow map fails allocation? 0 = don't render, 1 = render unshadowed",
      "flags": "developmentonly cheat"
  },
  {
      "name": "lb_enable_legacy_point_light_shadows",
      "description": "Enable shadows on legacy light_omni (non-barn) lights, not supported by cpu lightbinner",
      "flags": "developmentonly cheat"
  },
  {
      "name": "r_pixelvisibility_partial",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "r_dopixelvisibility",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "r_pixelvisibility_spew",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "r_drawpixelvisibility",
      "description": "Show the occlusion proxies",
      "flags": "developmentonly"
  },
  {
      "name": "r_render_to_cubemap_debug",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_draw_overlays",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_use_clear_subrect",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_enable_discard",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_disable_spotlight_shadows",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "sc_shadow_depth_bias_state_override",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_shadow_depth_bias",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_shadow_slopescale_depth_bias",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_shadow_depth_bias_clamp",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_light_probe_volume_debug_grid_prim",
      "description": "0: spheres, 1: cubes",
      "flags": "cheat"
  },
  {
      "name": "r_light_probe_volume_debug_grid_samplesize",
      "description": "sphere radius (world) for LPV debug grid",
      "flags": "cheat"
  },
  {
      "name": "r_light_probe_volume_debug_grid_roughness",
      "description": "roughness for LPV debug grid",
      "flags": "cheat"
  },
  {
      "name": "r_light_probe_volume_debug_grid_metalness",
      "description": "metalness for LPV debug grid",
      "flags": "cheat"
  },
  {
      "name": "r_grass_vertex_lighting",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_grass_alpha_test",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_grass_start_fade",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_grass_end_fade",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_grass_density_mode",
      "description": "0 = Density corresponds to blade existance, 1 = Density corresponds to blade height, 2 = Both 0 and 1",
      "flags": "developmentonly"
  },
  {
      "name": "r_grass_quality",
      "description": "0 = Off, 1 = Low, 2 = Med, 3 = high, 4 = ultra",
      "flags": "developmentonly"
  },
  {
      "name": "r_grass_max_brightness_change",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_grass_allow_flattening",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_grass_parallel_load",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_render_world_node_bounds",
      "description": "Render world node bounds",
      "flags": "cheat"
  },
  {
      "name": "r_lightmap_size",
      "description": "Maximum lightmap resolution.",
      "flags": "developmentonly"
  },
  {
      "name": "r_lightmap_size_directional_irradiance",
      "description": "Maximum lightmap resolution for directional_irradiance channel. -1 = use value of r_lightmap_size",
      "flags": "developmentonly"
  },
  {
      "name": "r_lightmap_set",
      "description": "Lightmap set to use, only works on map load",
      "flags": "cheat"
  },
  {
      "name": "r_world_allow_bindless_desc",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "sc_allow_precomputed_vismembers",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_drawworld",
      "description": "Render the world.",
      "flags": "cheat"
  },
  {
      "name": "r_world_wind_strength",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_world_wind_offset_speed",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_world_wind_frequency_grass",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_world_wind_frequency_trees",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_world_wind_dir",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_world_wind_smooth_time",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_world_frame_load_threshold_ms",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_particle_max_detail_level",
      "description": "The maximum detail level of particle to create",
      "flags": "developmentonly"
  },
  {
      "name": "r_drawparticles",
      "description": "Enable/disable particle rendering",
      "flags": "cheat"
  },
  {
      "name": "r_draw_particle_children_with_parents",
      "description": "Draw particle children with parents (-1=use gameinfo, 0=no, 1=yes)",
      "flags": "cheat"
  },
  {
      "name": "r_particle_debug_filter",
      "description": "Limit debug visualizations to substring match of effect name",
      "flags": "developmentonly"
  },
  {
      "name": "r_particle_debug_randomseeds",
      "description": "Use random seeds in debug",
      "flags": "developmentonly"
  },
  {
      "name": "r_particle_render_test",
      "description": "render particles 100 times and show perf",
      "flags": "developmentonly"
  },
  {
      "name": "r_particle_render_refreshes_sleep_timer",
      "description": "Disable to get a better look at what's happening offscreen",
      "flags": "developmentonly"
  },
  {
      "name": "particles_multiplier",
      "description": "Multiply # of rendered particles by this for perf testing",
      "flags": "cheat"
  },
  {
      "name": "r_particle_min_timestep",
      "description": "A minimum on particle simulation time, particle simulation happening more frequently than this will lerp.",
      "flags": "developmentonly"
  },
  {
      "name": "particle_snapshot_allow_combined_models",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_particle_max_draw_distance",
      "description": "The maximum distance that particles will render",
      "flags": "cheat"
  },
  {
      "name": "particle_layer_id_whitelist",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cl_particle_batch_mode",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cl_particle_fallback_multiplier",
      "description": "Multiplier for falling back to cheaper effects under load.",
      "flags": "developmentonly"
  },
  {
      "name": "cl_particle_fallback_base",
      "description": "Base for falling back to cheaper effects under load.",
      "flags": "developmentonly"
  },
  {
      "name": "cl_particle_retire_cost",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "cl_particle_simulate",
      "description": "Enables/Disables Particle Simulation",
      "flags": "cheat"
  },
  {
      "name": "cl_particle_max_count",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "cl_aggregate_particles",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_freezeparticles",
      "description": "Pause particle simulation",
      "flags": "cheat"
  },
  {
      "name": "r_threaded_particles",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_particle_timescale",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_particle_debug_force_simulation",
      "description": "-1 for all asleep, 1 for all awake",
      "flags": "developmentonly"
  },
  {
      "name": "cl_particle_log_creates",
      "description": "Print debug message every time a particle collection is created",
      "flags": "developmentonly"
  },
  {
      "name": "cl_particle_sim_fallback_threshold_ms",
      "description": "Amount of simulation time that can elapse before new systems start falling back to cheaper versions",
      "flags": "developmentonly"
  },
  {
      "name": "cl_particle_sim_fallback_base_multiplier",
      "description": "How aggressive the switch to fallbacks will be depending on how far over the cl_particle_sim_fallback_threshold_ms the sim time is.  Higher numbers are more aggressive.",
      "flags": "developmentonly"
  },
  {
      "name": "r_particle_cables_cast_shadows",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "particle_powsimd_random_range_exp",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_particle_max_texture_layers",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_particle_mixed_resolution_viewstart",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_particle_enable_fastpath",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "r_particle_force_material_binds",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "panorama_debugger_theme",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "@panorama_debug_movies",
      "description": "",
      "flags": "developmentonly missing0 clientdll"
  },
  {
      "name": "@panorama_movie_async_load_size_bytes",
      "description": "",
      "flags": "developmentonly missing0 clientdll"
  },
  {
      "name": "@panorama_movie_force_not_ready_behavior",
      "description": "",
      "flags": "developmentonly missing0 clientdll"
  },
  {
      "name": "@console_position_and_size",
      "description": "",
      "flags": "missing0 clientdll archive"
  },
  {
      "name": "@console_max_history",
      "description": "",
      "flags": "developmentonly missing0 clientdll"
  },
  {
      "name": "@console_max_autocomplete",
      "description": "",
      "flags": "developmentonly missing0 clientdll"
  },
  {
      "name": "@console_max_lines",
      "description": "",
      "flags": "developmentonly missing0 clientdll"
  },
  {
      "name": "@panorama_dragscroll_minflickvelocity",
      "description": "Minimum velocity that the mouse must be moving as mouse up time to qualify as a drag scroll flick",
      "flags": "developmentonly missing0 clientdll"
  },
  {
      "name": "@panorama_dragscroll_maxflickvelocity",
      "description": "Maximum velocity for a drag scroll flick",
      "flags": "developmentonly missing0 clientdll"
  },
  {
      "name": "@panorama_daisy_wheel",
      "description": "Daisy wheel input mode: RS | ABXY",
      "flags": "developmentonly missing0 clientdll"
  },
  {
      "name": "nav_path_optimizer_debug",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_path_jump_process_debug",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_path_debug",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_enable",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_use_opt",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_separating_dist_override",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_calc_z",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_constrain_results",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_constrain_results_relax",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_constrain_spring",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_constrain_spring_relax",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_draw_calc",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_draw_boundary",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_draw_constraint_spline",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_draw_constraint_spring",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_draw_speed",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_draw_accel",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_spring_const_override",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_spring_tension_max_override",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_spring_forward_dist_base",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_spring_forward_dist_time_limit",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_spring_factor_dist",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_spring_factor_deriv",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_spring_factor_speed",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_spring_max_dist",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_spring_timestep_min",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_spring_timestep_max",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_spring_timestep_factor_speed",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_spring_timestep_factor_accel",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_spring_yaw_rotation_speed",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_spring_yaw_threshold",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_relax",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_smooth_relax_use_timesteps",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_curve_iter",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_curve_step",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_curve_max_step",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_curve_set",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_curve_lock",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_curve_alt",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_pathfind_debug_log",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_pathfind_debug_draw",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_pathfind_debug_draw_errors",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_pathfind_debug_draw_costs",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_pathfind_debug_draw_total_costs",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_pathfind_inadmissable_heuristic_factor",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "population_distribution_debug",
      "description": "",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "nav_bfs_debug",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_search_lattice_progressive_scale",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "nav_search_lattice_initial_scale",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "navspace_debug_pathfind",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "navspace_debug_stringpull",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "navspace_debug_trace",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "navspace_debug_transition_calc",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "navspace_create_water_transition_connections",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "navspace_create_water_smooth_connections",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "navspace_create_tactial_connections",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "navspace_draw_water_changes",
      "description": "Draw changes in water volumes",
      "flags": "gamedll cheat"
  },
  {
      "name": "navspace_block_size_max",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "npcsolve_path_lookahead_const",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "npcsolve_path_lookahead_dist",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "npcsolve_path_close_const",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "npcsolve_path_close_max_tension",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "npcsolve_path_vel_const",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "npcsolve_attract_draw",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "npcsolve_drag_linear",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "npcsolve_constraint_npc",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "npcsolve_constraint_nav",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "npcsolve_separation",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "npcsolve_separation_const",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "npcsolve_separation_dist",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "npcsolve_separation_r2",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "npcsolve_separation_jitter",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "npcsolve_separation_draw",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "npcsolve_forward",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "npcsolve_forward_const",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "npcsolve_forward_dist",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "npcsolve_forward_margin",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "navnetsolve_draw_tri",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "fire_extinguishes_under_water",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "nav_volume_debug",
      "description": "Draw or print debug information about nav volume queries.",
      "flags": "gamedll cheat"
  },
  {
      "name": "cojob_max_no_yield_time_us",
      "description": "Will spew if a job takes longer than the specified number of microseconds",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "cojob_lock_hold_warning_threshold_ms",
      "description": "How long in milliseconds before we warn about lock hold duration",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "nav_select_hull",
      "description": "Restrict area selection to areas that can support a hull of the given category",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_select_allow_blocked",
      "description": "When selecting an area under nav_edit, allow area marked as blocked.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_select_area_id",
      "description": "Select nav area with matching ID.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_select_block_id",
      "description": "Select nav space block with matching ID.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_limit",
      "description": "The maximum number of areas to draw in edit mode",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_drag_selection_volume_zmax_offset",
      "description": "The offset of the nav drag volume top from center",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "nav_drag_selection_volume_zmin_offset",
      "description": "The offset of the nav drag volume bottom from center",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "nav_split_show_line",
      "description": "Show the free split line.",
      "flags": "gamedll cheat"
  },
  {
      "name": "navspace_draw_cluster",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "navspace_draw_cluster_neighbor",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_path",
      "description": "Calculate and draw a path from player/camera position to the test position.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_path_space",
      "description": "Should nav_test_path test 3d navigation?  1 = space to space, 2 = multi-modal space/ground",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_path_space_fly",
      "description": "Test flight paths",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_path_space_swim",
      "description": "Test swim paths",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_path_lock_start",
      "description": "Lock the pathfinding start to the current intersection point.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_path_lock_goal",
      "description": "Lock the pathfinding goal to the current intersection point.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_path_opt",
      "description": "Enable path optimization for nav_edit_path paths.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_path_opt_transitions",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_path_expansion_search",
      "description": "Extend nav_test_path by doing an expansion search on that path.  Convar value defines dist.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_path_move",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_path_return",
      "description": "Calculate a return path from cursor position to the path calculated by nav_test_path.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_rays",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_ray_space",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_boundary_zone_circle",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_boundary_zone_path",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_boundary_zone_rays",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_boundary_zone_rays_random",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_boundary_zone_rays_margin",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_boundary_zone_force",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_boundary_zone_grid_dim",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_bfs_lattice_dist_0",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_bfs_lattice_spacing_0",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_bfs_lattice_dist_1",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_bfs_lattice_spacing_1",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_bfs_lattice_dist_2",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_bfs_lattice_spacing_2",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_bfs_lattice_mark",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_bfs_simple",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_bfs_lattice_simple",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_bfs_lattice_hex",
      "description": "Demonstrates searching hexagonal lattice over nav mesh.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_detour",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_smooth",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_smooth_in_yaw",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_smooth_in_speed",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_smooth_path_speed",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_smooth_separating_dist",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_smooth_spring_const",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_smooth_spring_tension_max",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_smooth_extern_push",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_find_nearest",
      "description": "Calculate the nearest point on the navmesh to the trace point.  Uses selection from nav_select_hull.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_find_nearest_clear",
      "description": "Calculate the nearest point on the navmesh to the trace point.  Uses selection from nav_select_hull.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_find_z",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_multi_connection",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_split_obstacle",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_split_obstacle_size",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_split_obstacle_update_pos",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_split_obstacle_dirty",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_split_obstacle_leave",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_find_random_connected",
      "description": "Demonstrates finding random points that are connected in the nav mesh to the start point.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_find_random_connected_dist_min",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_find_random_connected_dist_max",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_genrt",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_genrt_place",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_spline",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_curve_opt",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_force_npc_repath",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_npc_collision",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_npc_collision_show_geometry",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_npc_area",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_test_pos_name",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "nav_test_pos_place",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_no_navmesh",
      "description": "Block loading of the navmesh. Unplayable, only used for memory sampling.",
      "flags": "developmentonly gamedll cheat"
  },
  {
      "name": "nav_genrt_no_split",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_genrt_no_splice",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_genrt_step",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_genrt_debug",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_obstruction_draw_dist",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_obstacle_validate",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_obstruction_draw",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_obstruction_draw_fail_block",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_debug_blocked",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_obstacle_genrt",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_obstruction_draw_change",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_avoid_obstacles",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_path_draw_arrow",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_path_draw_tick",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_path_draw_areas",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_path_draw_connected_areas",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_path_draw_ground_segments",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_path_draw_ladder_segments",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_path_draw_jump_segments",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_path_draw_climb_segments",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_path_draw_link_segments",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_path_debug_compute_with_open_goal",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_path_fixup_gap_segments",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_path_record_enable",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_path_record_draw_last_fail",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_path_optimize",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_path_optimize_portals",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_path_fixup_climb_up_segments",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "cq_debug",
      "description": "Verbose command queue logging.",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "cq_force_percent",
      "description": "debugging, force client tick rate faster/slower by specified percentage.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "cq_buffer_bloat_msecs",
      "description": "max buffer bloat before we reset and discard buffered user commands.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "cq_min_queue_size",
      "description": "min buffer queue target size.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "cq_resolve_commands_per_second",
      "description": "once cq_starve_hold_time elapses, we return to cq_min_queue_size over this many commands per second.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "cq_queue_sample_count",
      "description": "how many frames of samples to store in the buffer sample queue.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "cq_dropped_command_msecs",
      "description": "max msecs of starved usercmds to queue before dropping any additional.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "cq_adjust_deadzone_ticks",
      "description": "don't adjust rate faster/slower if average queue is this close to goal.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "cq_starve_hold_msecs",
      "description": "if we starve, we hold the faster time dilation for at least this many msecs.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "cq_starve_increment_msecs",
      "description": "if we starve, we increment target queue only this often, 0 to disable.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "cq_fake_starve",
      "description": "if set, starve this many commands by discarding during process usercmds.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "cq_logging",
      "description": "command queue logging of events.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "cq_logging_interval",
      "description": "command queue logging per player stats every N seconds, 0 to disable.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "cq_runtests",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "cq_runtests_interval",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "cq_runtests_broadcast_info",
      "description": "send message to remote client console when tests change.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_remapper_range_multiplier",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_player_search_range",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_remapper_loopsoundfix",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "g_debug_angularsensor",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "sv_disable_querycache",
      "description": "debug - disable trace query cache",
      "flags": "developmentonly gamedll clientdll replicated cheat"
  },
  {
      "name": "phys_ragdoll_force_magnitude",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ragdoll_sleepaftertime",
      "description": "After this many seconds of being basically stationary, the ragdoll will go to sleep.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "g_ragdoll_maxcount",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ragdoll_lru_debug_removal",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "sv_ragdoll_lru_debug",
      "description": "",
      "flags": "gamedll replicated cheat"
  },
  {
      "name": "ragdoll_lru_min_age",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "g_ragdoll_important_maxcount",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "scene_maxcaptionradius",
      "description": "Only show closed captions if recipient is within this many units of speaking actor (0==disabled).",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "cc_showmissing",
      "description": "Show missing closecaption entries.",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "cc_norepeat",
      "description": "In multiplayer games, don't repeat captions more often than this many seconds.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "scene_print",
      "description": "When playing back a scene, print timing and event info to console.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "scene_clientflex",
      "description": "Do client side flex animation.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_regeneration_force_on",
      "description": "Cheat to test regenerative health systems",
      "flags": "gamedll cheat"
  },
  {
      "name": "snd_opvar_set_point_debug",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "snd_opvar_set_point_update_interval",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "snd_steamaudio_dynamicpathing_max_samples",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "snd_steamaudio_pathing_enable_caching",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "snd_steamaudio_pathing_caching_threshold",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "snd_new_visualize",
      "description": "Displays soundevent name played at it's 3d position",
      "flags": "gamedll cheat"
  },
  {
      "name": "soundevent_check_networked_entity",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "snd_disable_radar_visualize",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ai_debug_soundent",
      "description": "Reports sounds being entered into the AI sound list. Set to 1 to see all sounds, set to 2 to only see DANGER sounds.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "ai_debug_soundent_duration",
      "description": "Length of time to display ai_debug_soundent visual displays.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "soundpatch_captionlength",
      "description": "How long looping soundpatch captions should display for.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "soundscape_debug",
      "description": "When on, draws lines to all env_soundscape entities. Green lines show the active soundscape, red lines show soundscapes that aren't in range, and white lines show soundscapes that are in range, but not the active soundscape.",
      "flags": "gamedll cheat"
  },
  {
      "name": "steamlearn_enable",
      "description": "Enable SteamLearn data assembly and messaging",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "steamlearn_override_inference_keys",
      "description": "Keys for overriding inference keys",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "phys_pushscale",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "debug_takedamage_summaries",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "g_debug_transitions",
      "description": "Set to 1 and restart the map to be warned if the map has no trigger_transition volumes. Set to 2 to see a dump of all entities & associated results during a transition.",
      "flags": "developmentonly gamedll cheat"
  },
  {
      "name": "snd_sos_debug_trigger_opvar",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "teleport_trigger_debug",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_strict_notarget",
      "description": "If set, notarget will cause entities to never think they are in the pvs",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "voice_serverdebug",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_alltalk",
      "description": "Players can hear all other players' voice communication, no team restrictions",
      "flags": "gamedll notify release missing3"
  },
  {
      "name": "mp_tournament_whitelist",
      "description": "Specifies the item whitelist file to use.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "gc_secret_key",
      "description": "Secret key for authenticating with the GC.",
      "flags": "developmentonly gamedll protected"
  },
  {
      "name": "nav_draw_area_filled",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_area_ztest",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_blocked",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_blocked_connections",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_connected_area_radius",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_hull_support",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_connections",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_indices",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_inset_margin",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_should_be_destroyed",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_split_by_obstacle_mgr",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_split_by_nav_link_mgr",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_vert_hotspots",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_externally_created",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_area_ground",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_vertex_normal",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_edit",
      "description": "Set to one to interactively edit the Navigation Mesh. Set to zero to leave edit mode.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_edit_validate",
      "description": "Validate navmesh structures.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_space_select_dist",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_mesh",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_mesh_offset",
      "description": "Vertical offset for drawing the mesh (useful for flat planes where the mesh is often a fixed offset from the physical ground",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_jump_links",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_mesh_grid",
      "description": "Draw the mesh's spatial grid structure around the edit cursor position.",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_markup",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_markup_offset",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_space_swim",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_space_fly",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_space_neighbors",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_space_portals",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_space_bounds",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_attribute_game",
      "description": "Draw all nav areas with this game attribute",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_attribute_dynamic",
      "description": "Draw all nav areas with this dynamic attribute",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_links",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_link_alignment",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_show_area_info_font",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_show_area_info_font_size",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_show_area_info_font_voffset",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_show_area_connections",
      "description": "Show connections to selected area when true",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_show_area_verts",
      "description": "Show area vertex positions",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_show_area_water_info",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "motdfile",
      "description": "The MOTD file to load.",
      "flags": "gamedll release"
  },
  {
      "name": "hostfile",
      "description": "The HOST file to load.",
      "flags": "gamedll release"
  },
  {
      "name": "sv_shared_team_pvs",
      "description": "PVS is shared between teams",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sk_autoaim_mode",
      "description": "",
      "flags": "gamedll clientdll archive replicated"
  },
  {
      "name": "mp_friendlyfire",
      "description": "Allows team members to injure other members of their team",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "tv_delay",
      "description": "SourceTV broadcast delay in seconds",
      "flags": "gamedll release missing3"
  },
  {
      "name": "tv_allow_static_shots",
      "description": "Auto director uses fixed level cameras for shots",
      "flags": "gamedll release"
  },
  {
      "name": "tv_allow_camera_man",
      "description": "Auto director allows spectators to become camera man",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "tv_log_director_events",
      "description": "Log game events being considered by the director",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "tv_allow_autorecording_index",
      "description": "When >=0 restricts autorecording only to the specified TV index",
      "flags": "gamedll release"
  },
  {
      "name": "pickup_check_period",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "logic_npc_counter_debug",
      "description": "",
      "flags": "gamedll replicated cheat"
  },
  {
      "name": "markup_volume_ref_cone_angle",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_stopspeed",
      "description": "Minimum stopping speed when on ground.",
      "flags": "gamedll clientdll notify replicated release"
  },
  {
      "name": "sv_noclipaccelerate",
      "description": "",
      "flags": "gamedll clientdll archive notify replicated"
  },
  {
      "name": "sv_noclipspeed",
      "description": "",
      "flags": "gamedll clientdll archive notify replicated"
  },
  {
      "name": "sv_noclipfriction",
      "description": "Friction during noclip move.",
      "flags": "gamedll clientdll archive notify replicated"
  },
  {
      "name": "sv_specaccelerate",
      "description": "",
      "flags": "gamedll clientdll archive notify replicated"
  },
  {
      "name": "sv_specspeed",
      "description": "",
      "flags": "gamedll clientdll archive notify replicated"
  },
  {
      "name": "sv_specnoclip",
      "description": "",
      "flags": "gamedll clientdll archive notify replicated"
  },
  {
      "name": "sv_maxspeed",
      "description": "",
      "flags": "gamedll clientdll notify replicated release"
  },
  {
      "name": "sv_accelerate",
      "description": "",
      "flags": "gamedll clientdll notify replicated release"
  },
  {
      "name": "sv_airaccelerate",
      "description": "",
      "flags": "gamedll clientdll notify replicated release"
  },
  {
      "name": "sv_wateraccelerate",
      "description": "",
      "flags": "gamedll clientdll notify replicated release"
  },
  {
      "name": "sv_waterfriction",
      "description": "",
      "flags": "gamedll clientdll notify replicated release"
  },
  {
      "name": "sv_footsteps",
      "description": "Play footstep sound for players",
      "flags": "developmentonly gamedll clientdll notify replicated"
  },
  {
      "name": "sv_rollspeed",
      "description": "",
      "flags": "developmentonly gamedll clientdll notify replicated"
  },
  {
      "name": "sv_rollangle",
      "description": "Max view roll angle",
      "flags": "developmentonly gamedll clientdll notify replicated"
  },
  {
      "name": "sv_friction",
      "description": "World friction.",
      "flags": "gamedll clientdll notify replicated release"
  },
  {
      "name": "sv_bounce",
      "description": "Bounce multiplier for when physically simulated objects collide with other objects.",
      "flags": "gamedll clientdll notify replicated release"
  },
  {
      "name": "sv_maxvelocity",
      "description": "Maximum speed any ballistically moving object is allowed to attain per axis.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_stepsize",
      "description": "",
      "flags": "developmentonly gamedll clientdll notify replicated"
  },
  {
      "name": "sv_backspeed",
      "description": "How much to slow down backwards motion",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_waterdist",
      "description": "Vertical view fixup when eyes are near water plane.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_mover_pogofrequency",
      "description": "The capsule pogo stick frequency [hz].",
      "flags": "developmentonly gamedll clientdll notify replicated"
  },
  {
      "name": "sv_mover_pogodampingratio",
      "description": "The capsule pogo stick damping ratio [-]",
      "flags": "developmentonly gamedll clientdll notify replicated"
  },
  {
      "name": "sv_mover_maxslope",
      "description": "The maximum slope the player can overcome [-]",
      "flags": "developmentonly gamedll clientdll notify replicated"
  },
  {
      "name": "r_JeepViewDampenFreq",
      "description": "",
      "flags": "gamedll clientdll notify replicated cheat"
  },
  {
      "name": "r_JeepViewDampenDamp",
      "description": "",
      "flags": "gamedll clientdll notify replicated cheat"
  },
  {
      "name": "r_JeepViewZHeight",
      "description": "",
      "flags": "gamedll clientdll notify replicated cheat"
  },
  {
      "name": "r_AirboatViewDampenFreq",
      "description": "",
      "flags": "gamedll clientdll notify replicated cheat"
  },
  {
      "name": "r_AirboatViewDampenDamp",
      "description": "",
      "flags": "gamedll clientdll notify replicated cheat"
  },
  {
      "name": "r_AirboatViewZHeight",
      "description": "",
      "flags": "gamedll clientdll notify replicated cheat"
  },
  {
      "name": "mp_restartgame",
      "description": "If non-zero, game will restart in the specified number of seconds",
      "flags": "gamedll release"
  },
  {
      "name": "sv_allchat",
      "description": "Players can receive all other players' text chat, no death restrictions",
      "flags": "gamedll notify release"
  },
  {
      "name": "spec_replay_bot",
      "description": "Enable Spectator Hltv Replay when killed by bot",
      "flags": "gamedll release"
  },
  {
      "name": "particle_test_file",
      "description": "Name of the particle system to dynamically spawn",
      "flags": "gamedll cheat"
  },
  {
      "name": "particle_test_attach_mode",
      "description": "Possible Values: 'start_at_attachment', 'follow_attachment', 'start_at_origin', 'follow_origin'",
      "flags": "gamedll cheat"
  },
  {
      "name": "particle_test_attach_attachment",
      "description": "Attachment index for attachment mode",
      "flags": "gamedll cheat"
  },
  {
      "name": "handforce_scale",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "handforce_inner",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "handforce_outer",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "headforce_strength",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "headforce_inner",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "headforce_outer",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "g_debug_constraint_sounds",
      "description": "Enable debug printing about constraint sounds.",
      "flags": "gamedll cheat"
  },
  {
      "name": "phys_use_block_solver",
      "description": "Use block solving for constraint entities",
      "flags": "gamedll cheat"
  },
  {
      "name": "phys_joint_teleport",
      "description": "Teleport joint anchors if connected to world",
      "flags": "gamedll cheat"
  },
  {
      "name": "phys_length_frequency",
      "description": "Spring stiffness for length constraint",
      "flags": "gamedll cheat"
  },
  {
      "name": "phys_length_damping_ratio",
      "description": "Spring damping ratio for length constraint",
      "flags": "gamedll cheat"
  },
  {
      "name": "vehicle_debug_impact_damage",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "crowbar_impact_damage_scale",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "crowbar_impact_damage_mass",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "ent_debug_draw_thinkers",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "think_limit",
      "description": "Maximum think time in milliseconds, warning is printed if this is exceeded.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "npc_vphysics",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "vprof_scope_entity_gamephys",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_usestepsimulation",
      "description": "use old stepsimulation system.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "ragdoll_prop_sleepdisabletime",
      "description": "Ragdoll is not allowed to physically sleep until this timer has elapsed.",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "ragdoll_prop_sleepaftertime",
      "description": "After this many seconds of being basically stationary, the ragdoll will go to sleep.",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "ragdoll_prop_settle",
      "description": "Enable more aggressive ragdoll settling",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "ragdoll_visualize_creation_skeleton",
      "description": "",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "ragdoll_visualize_targetpose",
      "description": "",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "ragdoll_validate_targetpose",
      "description": "",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "ragdoll_debug_item_detachment",
      "description": "",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "ragdoll_scale_sleep_tolerance",
      "description": "",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "ragdoll_override_root_orientation",
      "description": "",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "ragdoll_relax_limts",
      "description": "",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "prop_nav_ignore_mass",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "prop_nav_ignore_edge_len",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "prop_nav_obstacle_avoid_mass",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "prop_nav_obstacle_avoid_use_connection_blocker",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "prop_nav_obstacle_block_mass_a",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "prop_nav_obstacle_block_edge_min_a",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "prop_nav_obstacle_block_mass_b",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "prop_nav_obstacle_block_edge_min_b",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "prop_debug_vr_collision",
      "description": "Highlights props based on their collision group: COLLISION_GROUP_PROPS(white), COLLISION_GROUP_PROPS_VR_INTERACTIVE_DEBRIS(green), COLLISION_GROUP_PROPS_VR_DEBRIS and will return to COLLISION_GROUP_PROPS_VR_INTERACTIVE_DEBRIS on sleeping(bright red), COLLISION_GROUP_PROPS_VR_DEBRIS permanently (dark red), COLLISION_GROUP_DEBRIS(blue), OTHER(grey)",
      "flags": "gamedll cheat"
  },
  {
      "name": "phys_shoot_speed",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "phys_shoot_angular_speed",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "debug_physimpact",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_unlag",
      "description": "Enables player lag compensation",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_maxunlag",
      "description": "Maximum lag compensation in seconds",
      "flags": "gamedll release"
  },
  {
      "name": "sv_showlagcompensation_rec",
      "description": "If > 0, show lag compensation hitboxes as they're recorded. Value is for how long.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_lagcompensationforcerestore",
      "description": "Don't test validity of a lag comp restore, just do it.",
      "flags": "gamedll cheat"
  },
  {
      "name": "sv_unlag_fixstuck",
      "description": "Disallow backtracking a player for lag compensation if it will cause them to become stuck",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_unlag_debug",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "physcannon_minforce",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "physcannon_maxforce",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "voice_player_speaking_delay_threshold",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "mp_fadetoblack",
      "description": "fade a player's screen to black when he dies",
      "flags": "developmentonly gamedll clientdll notify replicated"
  },
  {
      "name": "sv_infinite_ammo",
      "description": "Player's active weapon will never run out of ammo",
      "flags": "gamedll clientdll replicated cheat release missing3"
  },
  {
      "name": "skeleton_instance_smear_boneflags",
      "description": "Smear boneflags across the model.  Costs computation, but tests to make sure your bone flags are consistent.",
      "flags": "gamedll cheat"
  },
  {
      "name": "phys_dynamic_scaling",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "test_restoreonnewmodel",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "anim_disable",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "skeleton_instance_lod_optimization",
      "description": "Compute LOD mask internally like since 2016, i.e. force all LOD groups' bones to compute",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "cloth_iv_store_back",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "skel_debug",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_ent_showonlyhitbox",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "debug_shared_random",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "chet_debug_idle",
      "description": "If set one, many debug prints to help track down the TLK_IDLE issue. Set two for super verbose info",
      "flags": "developmentonly gamedll archive cheat"
  },
  {
      "name": "ai_debug_speech",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "rr_followup_maxdist",
      "description": "'then ANY' or 'then ALL' response followups will be dispatched only to characters within this distance.",
      "flags": "gamedll cheat"
  },
  {
      "name": "rr_thenany_score_slop",
      "description": "When computing respondents for a 'THEN ANY' rule, all rule-matching scores within this much of the best score will be considered.",
      "flags": "gamedll archive cheat"
  },
  {
      "name": "snd_foliage_db_loss",
      "description": "foliage dB loss per 1200 units",
      "flags": "gamedll cheat"
  },
  {
      "name": "player_debug_off_nav",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "ai_debug_off_nav",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "ai_show_current_nav",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "ai_use_visibility_cache",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "ai_force_serverside_ragdoll",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "phys_stressbodyweights",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "phys_impactforcescale",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "phys_vehicleimpactforcescale",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "phys_upimpactforcescale",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "target_scan_use_query_cache",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "ai_debug_los",
      "description": "NPC Line-Of-Sight debug mode. If 1, solid entities that block NPC LOC will be highlighted with white bounding boxes. If 2, it'll show non-solid entities that would do it if they were solid.",
      "flags": "gamedll cheat"
  },
  {
      "name": "ai_expression_optimization",
      "description": "Disable npc background expressions when you can't see them.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "ai_expression_frametime",
      "description": "Maximum frametime to still play background expressions.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_regeneration_wait_time",
      "description": "",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "buddha",
      "description": "Player takes damage but won't die",
      "flags": "gamedll notify cheat"
  },
  {
      "name": "buddha_ignore_bots",
      "description": "Bots always buddha 0",
      "flags": "gamedll notify cheat"
  },
  {
      "name": "buddha_reset_hp",
      "description": "HP to set when damaged below zero in Buddha Mode",
      "flags": "gamedll notify cheat"
  },
  {
      "name": "sk_player_head",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sk_player_chest",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sk_player_stomach",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sk_player_arm",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sk_player_leg",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "player_debug_print_damage",
      "description": "When true, print amount and type of all damage received by player to console.",
      "flags": "gamedll cheat"
  },
  {
      "name": "spec_replay_winddown_time",
      "description": "The trailing time, in seconds, of replay past the event, including fade-out",
      "flags": "gamedll release"
  },
  {
      "name": "vis_force",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "g_debug_doors",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "camera_datadriven_disable_cache",
      "description": "",
      "flags": "developmentonly gamedll cheat"
  },
  {
      "name": "tv_show_allchat",
      "description": "",
      "flags": "gamedll release"
  },
  {
      "name": "commentary_available",
      "description": "Automatically set by the game when a commentary file is available for the current map.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "commentary",
      "description": "Desired commentary mode state.",
      "flags": "gamedll archive"
  },
  {
      "name": "ai_debug_ragdoll_magnets",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "debug_visibility_monitor",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "vismon_poll_frequency",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "vismon_trace_limit",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "r_decals_overide_fadestarttime_params",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated missing3"
  },
  {
      "name": "fire_maxabsorb",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "fire_absorbrate",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "fire_extscale",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "fire_extabsorb",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "fire_heatscale",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "fire_incomingheatscale",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "fire_dmgscale",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "fire_dmgbase",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "fire_growthrate",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "fire_dmginterval",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "fish_dormant",
      "description": "Turns off interactive fish behavior. Fish become immobile and unresponsive.",
      "flags": "gamedll replicated cheat"
  },
  {
      "name": "func_break_max_pieces",
      "description": "",
      "flags": "gamedll archive replicated"
  },
  {
      "name": "func_break_reduction_factor",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_showladders",
      "description": "Show bbox and dismount points for all ladders (must be set before level load.).",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_ladder_slack_z_mult",
      "description": "Difference in Z increases toward the middle of the slack ladder..",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "shatterglass_debug",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "shatterglass_cleanup",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "shatterglass_cleanup_max",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "shatterglass_shard_lifetime",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "shatterglass_distort",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "shatterglass_voronoi_size",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "shatterglass_subdiv_size",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "shatterglass_edge_uv_scale",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "shatterglass_hit_tolerance",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "servercfgfile",
      "description": "",
      "flags": "gamedll release"
  },
  {
      "name": "lservercfgfile",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "mp_teamplay",
      "description": "",
      "flags": "developmentonly gamedll notify"
  },
  {
      "name": "mp_forcerespawn",
      "description": "",
      "flags": "developmentonly gamedll notify"
  },
  {
      "name": "decalfrequency",
      "description": "",
      "flags": "developmentonly gamedll notify"
  },
  {
      "name": "sv_force_transmit_ents",
      "description": "Will transmit all entities to client, regardless of PVS conditions (will still skip based on transmit flags, however).",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "check_transmit_dump_ents",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_parallel_checktransmit",
      "description": "Set to 1 to use threaded checkentities for transmit/pvs on listen servers, 2 for dedicated servers.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "ent_steadystate_enable",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "ent_steadystate_delay",
      "description": "Time in seconds without network state changes until an entity is considered for trickle updates",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "net_debug_to_file",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_server_side_animation",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_dz_enable_respawn_solos",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_dz_show_weapon_spawns",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_dz_show_security_door_item_price",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_dz_zone_hex_radius",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_dz_zone_bombdrop_money_reward",
      "description": "How many money stacks players are rewarded each danger zone wave",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_dz_zone_bombdrop_money_reward_bonus",
      "description": "How many bonus money stacks players are rewarded each danger zone wave when they have the bonus item",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_dz_force_zone",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "sv_dz_zone_damage",
      "description": "",
      "flags": "gamedll cheat release"
  },
  {
      "name": "mp_dronegun_stop",
      "description": "if non-zero, stops AI on all droneguns.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_grassburn",
      "description": "",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "rr_debugrule",
      "description": "If set to the name of the rule, that rule's score will be shown whenever a concept is passed into the response rules system.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "rr_dumpresponses",
      "description": "Dump all response_rules.txt and rules (requires restart)",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "rr_debugresponseconcept",
      "description": "If set, rr_debugresponseconcept will print only responses testing for the specified concept",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "rr_debugresponses",
      "description": "Show verbose matching output (1 for simple, 2 for rule scoring, 3 for noisy). If set to 4, it will only show response success/failure for npc_selected NPCs.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "rr_debugclassname",
      "description": "If set, rr_debugclassname will print only response tests where 'classname' corresponds to this variable. Use to filter for a specific character.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "rr_dacmode",
      "description": "If set to 1, enable special functionality for DAC",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ragdoll_gravity_scale",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "ragdoll_friction_scale",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "animgraph_slope_enable",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "phys_powered_ragdoll_debug",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "footstep_audible_threshold",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "animgraph_debug_tags",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "animgraph_debug_set_filter_params",
      "description": "Comma separated list of params to filter against when drawing debug text overlays",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "footstep_debug",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "footstep_force_volume",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "animgraph_debug_variables",
      "description": "Turn on to see animgraph variable changes for entities passing animgraph_debug_filterent.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "animgraph_debug_variables_ignore_missing",
      "description": "If set, animgraph_debug_variables won't show debug for warnings about sets to missing variables.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "animgraph_debug_variables_ignore_nonchanges",
      "description": "If set, animgraph_debug_variables won't show debug for variable sets that don't change the value.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "animgraph_debug_filterent",
      "description": "Filter setting for animgraph_debug_variables output. If set to -1, show debug for all entities. If set to 0, show debug for any NPCs that have been npc_selected. If set to >0, something other than 0, show debug for the entity with the matching entindex.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "animgraph_enable",
      "description": "Enable animation graph",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "animgraph_debug",
      "description": "Debug animation graph",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "animgraph_debug_entindex",
      "description": "The entity to specifically debug",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "animgraph_debug_animevents",
      "description": "Print info about animevents emitted by AnimGraph",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "animgraph_record_all",
      "description": "Automatically start recording AnimGraphs when they get created, and save them to disk when they are destroyed",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "sv_anim_queue_changes",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_sequence_debug",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_sequence_debug2",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_sequence_model_substring",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "anim_resetclientsideframe_old_behavior",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ai_sequence_debug",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "r_cacheSequenceData",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "fire_use_modifier",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_clockcorrection_msecs",
      "description": "The server tries to keep each player's m_nTickBase withing this many msecs of the server absolute tickcount",
      "flags": "gamedll release"
  },
  {
      "name": "sv_usercmd_queue_spew_threshold",
      "description": "Spew warning if command queue has grown above this many backlogged commands.",
      "flags": "gamedll release"
  },
  {
      "name": "ent_steadystate_interval",
      "description": "Rate at which entities can be trickled to players",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "ent_steadystate_batchsize",
      "description": "Max number of entities to transmit to player",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_maxupdaterate",
      "description": "Maximum updates per second that the server will allow",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_minupdaterate",
      "description": "Minimum updates per second that the server will allow",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_client_min_interp_ratio",
      "description": "This can be used to limit the value of cl_interp_ratio for connected clients (only while they are connected)..              -1 = let clients set cl_interp_ratio to anything. any other value = set minimum value for cl_interp_ratio",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_client_max_interp_ratio",
      "description": "This can be used to limit the value of cl_interp_ratio for connected clients (only while they are connected). If sv_client_min_interp_ratio is -1, then this cvar has no effect.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_client_predict",
      "description": "This can be used to force the value of cl_predict for connected clients (only while they are connected)..   -1 = let clients set cl_predict to anything.    0 = force cl_predict to 0.    1 = force cl_predict to 1",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "cq_enable",
      "description": "Run one usercmd per server tick and maintain a buffer.  Client speeds up/slows down it's usercmd tick rate to maintain server command queue buffering.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "cq_dilation_percentage",
      "description": "When speeding up slowing down, this is how much",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_showhitregistration",
      "description": "Display lag_compensated hitboxes. 0 = off, 1 = server only, 2 = client only, 3 = both server and client",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "disable_dynamic_prop_loading",
      "description": "If non-zero when a map loads, dynamic props won't be loaded",
      "flags": "gamedll cheat"
  },
  {
      "name": "breakable_multiplayer",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "func_breakdmg_bullet",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "func_breakdmg_club",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "func_breakdmg_explosive",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "ent_joint_axis_size",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "ent_joint_names",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "ent_joint_filter_substring",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "ent_joint_use_bind_pose",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "ent_joint_only_ik_joints",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "ent_skeleton_only_ik_joints",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "screenmessage_notifytime",
      "description": "How long to display screen message text",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "imgui_domain",
      "description": "1 == client, 2 == server",
      "flags": "developmentonly gamedll clientdll archive replicated cheat"
  },
  {
      "name": "imgui_enable",
      "description": "if imgui should display",
      "flags": "developmentonly gamedll clientdll replicated cheat"
  },
  {
      "name": "imgui_enable_input",
      "description": "if imgui should consume input",
      "flags": "developmentonly gamedll clientdll replicated cheat"
  },
  {
      "name": "ent_showonlyattachment",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "imgui_show_entity_browser",
      "description": "Game/Show Entity Browser",
      "flags": "developmentonly gamedll clientdll archive replicated cheat menubar_item"
  },
  {
      "name": "imgui_show_command_tool",
      "description": "Game/Show Command Tool",
      "flags": "developmentonly gamedll clientdll archive replicated cheat menubar_item"
  },
  {
      "name": "imgui_show_example_window",
      "description": "Source2/Show Example Window",
      "flags": "developmentonly gamedll clientdll archive replicated cheat menubar_item"
  },
  {
      "name": "save_async",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "autosave_fully_async",
      "description": "Set to 1 to have autosaves execute completely on the save thread, forces 'render only' mode while the save completes",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "save_fake_hitch",
      "description": "Force a busy wait for the specified number of milliseconds during save to simulate a hitch",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_autosave",
      "description": "Set to 1 to autosave game on level transition. Does not affect autosave triggers.",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "save_screenshot",
      "description": "0 = none, 1 = non-autosave, 2 = always, 3 = bug_only",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "save_history_count",
      "description": "Keep this many old copies in history of autosaves and quicksaves.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "save_spew",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "save_maxarray_spew",
      "description": "Max number of array entries to spew when using SaveRestoreIO spewing.",
      "flags": "gamedll release"
  },
  {
      "name": "ent_messages_draw",
      "description": "Visualizes all entity input/output activity.",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "net_showevents",
      "description": "Dump game events to console (1=client only, 2=all).",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "net_showeventlisteners",
      "description": "Show listening addition/removals",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "display_game_events",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "phys_visualize_traces",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "gamestats_file_output_directory",
      "description": "When -gamestatsfileoutputonly is specified, file will be emitted here instead of to modpath.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "smoothstairs",
      "description": "Smooth player eye z coordinate when traversing stairs.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_suppress_viewpunch",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated cheat"
  },
  {
      "name": "in_button_double_press_window",
      "description": "How short the time between presses needs to be for us to consider it a double-press",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "in_spewinput",
      "description": "Spew input, 0 = off, 1 = server, 2 = client, 3 = both",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "in_spewbuttondelta",
      "description": "Spew button deltas, 0 = off, 1 = server, 2 = client, 3 = both",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "in_spewbuttonhold",
      "description": "Spew button hold times, 0 = off, 1 = server, 2 = client, 3 = both",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "in_spewent",
      "description": "Which entity should we spew input for? (Useful for debugging bot input)",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_fake_dropped_ucmd_interval",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_noclipduringpause",
      "description": "If cheats are enabled, then you can noclip with the game paused (for doing screenshots, etc.).",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "noclip_fixup",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "mp_forcecamera",
      "description": "Restricts spectator modes for dead players",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_allowspectators",
      "description": "toggles whether the server allows spectator mode or not",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_staminamax",
      "description": "Maximum stamina penalty",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_timebetweenducks",
      "description": "Minimum time before recognizing consecutive duck key",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_accelerate_use_weapon_speed",
      "description": "",
      "flags": "gamedll clientdll notify replicated release"
  },
  {
      "name": "sv_accelerate_debug_speed",
      "description": "",
      "flags": "gamedll clientdll notify replicated release"
  },
  {
      "name": "dev_cs_enable_new_move",
      "description": "Should we use new move code or just force legacy move.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "dev_cs_enable_consistent_jumps",
      "description": "Should we force subtick jump consistency.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_extreme_strafe_accuracy_fishtail",
      "description": "Number of degrees of aim 'fishtail' when making an extreme strafe direction change",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_jump_impulse",
      "description": "Initial upward velocity for player jumps; sqrt(2*gravity*height).",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_jump_impulse_exojump_multiplier",
      "description": "ExoJump impulse multiplier",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_falldamage_exojump_multiplier",
      "description": "ExoJump fall damage multiplier",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_exojump_jumpbonus_up",
      "description": "ExoJump upwards bonus when holding the jump button",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_exojump_jumpbonus_forward",
      "description": "ExoJump forwards velocity bonus when duck jumping",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_exojump_soundramp",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_air_max_wishspeed",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_air_max_horizontal_parachute_speed",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_airaccelerate_parachute",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_airaccelerate_rappel",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_air_pushaway_dist",
      "description": "",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "view_punch_decay",
      "description": "Decay factor exponent for view punch",
      "flags": "gamedll clientdll replicated cheat release"
  },
  {
      "name": "sv_ladder_dampen",
      "description": "Amount to dampen perpendicular movement on a ladder",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_ladder_angle",
      "description": "Cos of angle of incidence to ladder perpendicular for applying ladder_dampen",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_ladder_scale_speed",
      "description": "Scale top speed on ladders",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_falldamage_scale",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_runcmds",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_max_usercmd_future_ticks",
      "description": "Prevents clients from running usercmds too far in the future. Prevents speed hacks.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "bot_crouch",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "sv_optimizedmovement",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_enablebunnyhopping",
      "description": "Allow player speed to exceed maximum running speed",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_autobunnyhopping",
      "description": "Players automatically re-jump while holding jump button",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "dev_create_bhop_reports",
      "description": "Whether we should create bhop reports when you jump. Reports are created for the client and server and are numbered monotonically",
      "flags": "developmentonly gamedll clientdll replicated cheat"
  },
  {
      "name": "sv_weapon_encumbrance_scale",
      "description": "",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "spec_freeze_time",
      "description": "Time spend frozen in observer freeze cam.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "spec_freeze_traveltime",
      "description": "Time taken to zoom in to frame a target in observer freeze cam.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "spec_freeze_time_lock",
      "description": "Time players are prevented from skipping the freeze cam",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "spec_freeze_deathanim_time",
      "description": "The time that the death cam will spend watching the player's ragdoll before going into the freeze death cam.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_showplayerhitboxes",
      "description": "Show lag compensated hitboxes for the specified player index whenever a player fires.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_spec_use_tournament_content_standards",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_min_jump_landing_sound",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_cs_player_speed_has_hostage",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "slope_drop_debug",
      "description": "Toggles a test dropping the view offset based on the slope",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_weapon_encumbrance_per_item",
      "description": "",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_server_verify_blood_on_player",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "sv_max_distance_transmit_footsteps",
      "description": "Maximum distance to transmit footstep sound effects.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "dev_cs_force_disable_move",
      "description": "forcibly prevent players from moving",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "slope_drop_enable",
      "description": "Toggles a test dropping the view offset based on the slope",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "slope_drop_blend_max_speed",
      "description": "The max speed (in units/second) at which the slope offset can change",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "slope_drop_blend_min_speed",
      "description": "The min speed (in units/second) at which the slope offset can change",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "slope_drop_blend_max_distance",
      "description": "The distance when the max speed is used",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "slope_drop_blend_min_distance",
      "description": "The distance when the min speed is used",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "slope_drop_max_offset",
      "description": "The maximum distance to adjust the view height",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "slope_drop_off_ground_blend_speed",
      "description": "The speed with which the slope drop is blended out when the entity leaves the ground",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "slope_drop_debug_draw",
      "description": "Draw debug info for the slope drop",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "cam_head_constraint_distance",
      "description": "Distance to constrain first/thirdperson camera and head",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "cam_head_constraint_soft_transition",
      "description": "Constraint soft transition distance",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "cam_head_constraint_debug",
      "description": "Show camera head constraint debug info",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "dev_cs_ragdoll_progress_check_interval",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "dev_cs_ragdoll_nudge_max_duration",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "dev_cs_ragdoll_nudge_intensity",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "dev_cs_ragdoll_head_ankle_delta_z_threshold",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "player_ping_token_cooldown",
      "description": "Cooldown for how long it takes for a player's ping token to refresh allowing them to ping again (they get 5 tokens).",
      "flags": "gamedll cheat release"
  },
  {
      "name": "player_use_radius",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "sv_debug_player_use",
      "description": "Visualizes +use logic. Green cross=trace success, Red cross=trace too far, Green box=radius success",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_extract_ammo_from_dropped_weapons",
      "description": "",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_guardian_refresh_ammo_for_items_on_waves",
      "description": "List of additional weapons to refill ammo on waves.",
      "flags": "gamedll release missing3"
  },
  {
      "name": "mp_drop_knife_enable",
      "description": "Allows players to drop knives.",
      "flags": "gamedll release missing3"
  },
  {
      "name": "mp_fists_replace_melee",
      "description": "If enabled then when melee weapon is dropped player will have fists, when melee weapon is picked up then fists are unavailable",
      "flags": "gamedll release missing3"
  },
  {
      "name": "mp_drop_grenade_enable",
      "description": "Allows players to drop grenades.",
      "flags": "gamedll release missing3"
  },
  {
      "name": "mp_weaponstay",
      "description": "",
      "flags": "developmentonly gamedll notify"
  },
  {
      "name": "sv_weapon_require_use_grace_period",
      "description": "",
      "flags": "gamedll release"
  },
  {
      "name": "sv_damage_print_enable",
      "description": "0: no damage print in console. 1: damage print in console on death. 2: damage print in console only at next round restart.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_dev_damage_use_netvars",
      "description": "Whether we should use network vars (true) or legacy messages (false).",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "mp_logmoney",
      "description": "Enables money logging.  Values are: 0=off, 1=on",
      "flags": "gamedll release"
  },
  {
      "name": "anim_scale_damped_movespeed",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "anim_scale_damped_accel_mag16",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "anim_scale_damped_accel16",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "anim_scale_damped_accel32",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "anim_scale_overall_leans",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "anim_scale_overall_hip_dip",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "anim_scale_overall_arm_pump",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "anim_scale_overall_counter_leans",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "anim_scale_overall_hip_swivel",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "anim_scale_wasd_input_leans",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "anim_scale_wasd_input_hip_dip",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "anim_scale_wasd_input_arm_pump",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "anim_scale_wasd_input_counter_leans",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "anim_scale_wasd_input_hip_swivel",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_dz_player_spawn_health",
      "description": "",
      "flags": "gamedll release"
  },
  {
      "name": "sv_dz_player_spawn_armor",
      "description": "",
      "flags": "gamedll release"
  },
  {
      "name": "sv_dz_player_max_health",
      "description": "",
      "flags": "gamedll release"
  },
  {
      "name": "sv_dz_jointeam_allowed",
      "description": "Whether non-server admins are allowed to use the dz_jointeam command",
      "flags": "gamedll release"
  },
  {
      "name": "sv_force_reflections",
      "description": "",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_dz_team_count",
      "description": "Max players allowed per team",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_dz_warmup_tablet",
      "description": "",
      "flags": "gamedll release"
  },
  {
      "name": "sv_dz_show_enemy_name_scope_range",
      "description": "",
      "flags": "gamedll release"
  },
  {
      "name": "sv_dz_respawn_wait_time_per_death",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_dz_respawn_additional_wait_time_solo",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_dz_respawn_pick_time",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_dz_last_respawn_wave",
      "description": "Missile wave number to prevent respawns, >5 will allow respawns on all waves",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_dz_last_respawn_warning",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_dz_enable_respawn",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "cl_smoke_torus_ring_radius",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "cl_smoke_torus_ring_subradius",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "cl_smoke_edge_feather",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "cl_smoke_lower_speed",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "smoke_grenade_custom_color",
      "description": "0 = Gray (classic), 1 = Red, 2 = Orange, 3 = Skyblue, 4 = Yellow, 5 = Green, , 6 = Blue, 7 = Purple, 8 = pink",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "smoke_grenade_ct_color",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "smoke_grenade_t_color",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "smoke_param1",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "smoke_param2",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "smoke_param3",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "smoke_param4",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "smoke_param5",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "smoke_use_noise_texture",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_ignoregrenaderadio",
      "description": "Turn off Fire in the hole messages",
      "flags": "gamedll release missing3"
  },
  {
      "name": "sv_breachcharge_distance_min",
      "description": "",
      "flags": "gamedll release"
  },
  {
      "name": "sv_breachcharge_distance_max",
      "description": "",
      "flags": "gamedll release"
  },
  {
      "name": "sv_breachcharge_delay_min",
      "description": "",
      "flags": "gamedll release"
  },
  {
      "name": "sv_breachcharge_delay_max",
      "description": "",
      "flags": "gamedll release"
  },
  {
      "name": "sv_breachcharge_fuse_min",
      "description": "",
      "flags": "gamedll release"
  },
  {
      "name": "sv_breachcharge_fuse_max",
      "description": "",
      "flags": "gamedll release"
  },
  {
      "name": "sv_breachcharge_arm_delay",
      "description": "",
      "flags": "gamedll release"
  },
  {
      "name": "sv_bumpmine_arm_delay",
      "description": "",
      "flags": "gamedll release"
  },
  {
      "name": "sv_bumpmine_detonate_delay",
      "description": "",
      "flags": "gamedll release"
  },
  {
      "name": "mp_plant_c4_anywhere",
      "description": "",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_guardian_bomb_plant_custom_x_mark_location",
      "description": "x,y,z to display an X for the bomb plant in guardian missions with custom bomb plant boundaries.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "weapon_land_dip_amt",
      "description": "The amount the gun should dip when the player lands after a jump.",
      "flags": "developmentonly gamedll clientdll replicated cheat"
  },
  {
      "name": "weapon_accuracy_forcespread",
      "description": "Force spread to the specified value.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "weapon_accuracy_nospread",
      "description": "Disable weapon inaccuracy spread",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "weapon_air_spread_scale",
      "description": "Scale factor for jumping inaccuracy, set to 0 to make jumping accuracy equal to standing",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "weapon_reticle_knife_show",
      "description": "When enabled will show knife reticle on clients. Used for game modes requiring target id display when holding a knife.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "weapon_auto_cleanup_time",
      "description": "If set to non-zero, weapons will delete themselves after the specified time (in seconds) if no players are near.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "weapon_max_before_cleanup",
      "description": "If set to non-zero, will remove the oldest dropped weapon to maintain the specified number of dropped weapons in the world.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "weapon_sound_falloff_multiplier",
      "description": "Scaling for falloff of weapon firing sounds",
      "flags": "gamedll clientdll replicated cheat release missing3"
  },
  {
      "name": "dev_cs_frame_firing_enable",
      "description": "Enable that firing will pretend like it's happening on frames.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "dev_cs_frame_firing_tick_offset_enable",
      "description": "Should we offset the current frame to the tick",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "dev_cs_frame_firing_skip_first_frame_enable",
      "description": "Should we skip the first frame of shooting to make the animation punchier?",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "dev_cs_frame_firing_insert_idle_pose_now",
      "description": "Should we insert the idle pose at this time to make the animation interpolation punchier?",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "dev_cs_frame_firing_play_animevents",
      "description": "Should we play the animevents that animgraph will skip over?",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_turning_inaccuracy_enabled",
      "description": "",
      "flags": "gamedll clientdll replicated cheat release"
  },
  {
      "name": "sv_turning_inaccuracy_angle_min",
      "description": "",
      "flags": "gamedll clientdll replicated cheat release"
  },
  {
      "name": "sv_turning_inaccuracy_decay",
      "description": "",
      "flags": "gamedll clientdll replicated cheat release"
  },
  {
      "name": "weapon_skin_force_legacy",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "weapon_accuracy_reset_on_deploy",
      "description": "On deploy, forcibly reset weapon accuracy to zero.",
      "flags": "gamedll clientdll replicated cheat release"
  },
  {
      "name": "mp_weapon_next_owner_touch_time",
      "description": "",
      "flags": "gamedll cheat release"
  },
  {
      "name": "mp_weapon_prev_owner_touch_time",
      "description": "",
      "flags": "gamedll cheat release"
  },
  {
      "name": "sv_csgo_shoot_log",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_csgo_shoot_verify",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_csgo_shoot_assert_lagcompensation_error",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_csgo_shoot_lagcompensation_max_error",
      "description": "Warn if lag compensated head hitbox position doesn't match that on client.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_csgo_shoot_verify_on_attack_only",
      "description": "Only run lag compensation error check when primary attack goes down.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_csgo_shoot_use_full_interp",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_csgo_shoot_force_full_interp",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_csgo_shoot_force_use_target_time",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_fistpunch_damage",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_fistpunch_damage_to_player_multiplier",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_fistpunch_damage_hard",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_fistpunch_viewmove",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_fistpunch_impact_sounds",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_knife_attack_extend_from_player_aabb",
      "description": "",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "knife_damage_scale",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "mp_weapon_melee_touch_time_after_hit",
      "description": "",
      "flags": "gamedll cheat release"
  },
  {
      "name": "sv_shield_explosive_damage_scale",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_shield_explosive_damage_mult",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_shield_explosive_damage_cap",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_shield_explosive_damage_mindist",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_shield_explosive_damage_crouch_bonus",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_shield_hitpoints",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_shield_bash_damage_to_players",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_shield_bash_damage_to_nonplayer",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "tablet_c4_dist_min",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "tablet_c4_dist_max",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_tablet_show_path_to_nearest_resq",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_dz_exploration_payment_amount",
      "description": "Number of cash bundles to award for exploring a new sector",
      "flags": "gamedll replicated release"
  },
  {
      "name": "sv_dz_exploration_payment_amount_bonus",
      "description": "Number of BONUS cash bundles to award for exploring (if the player has the item/upgrade)",
      "flags": "gamedll replicated release"
  },
  {
      "name": "mp_taser_recharge_time",
      "description": "Determines recharge time for taser. -1 = disabled.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_tripwirefire_trace_length",
      "description": "",
      "flags": "gamedll release"
  },
  {
      "name": "sv_spawn_afk_bomb_drop_time",
      "description": "Players that have never moved since they spawned will drop the bomb after this amount of time.",
      "flags": "gamedll replicated release"
  },
  {
      "name": "sv_penetration_type",
      "description": "What type of penertration to use. 0 = old CS, 1 = new penetration",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_showimpacts_penetration",
      "description": "Shows extra data when bullets penetrate. (use sv_showimpacts_time to increase time shown)",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_showimpacts",
      "description": "Shows client (red) and server (blue) bullet impact point (1=both, 2=client-only, 3=server-only)",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_showimpacts_time",
      "description": "Duration bullet impact indicators remain before disappearing",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_showbullethits",
      "description": "1=show hits and near misses, 2=show hits only",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "ff_damage_reduction_grenade",
      "description": "How much to reduce damage done to teammates by a thrown grenade.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "ff_damage_reduction_grenade_self",
      "description": "How much to damage a player does to himself with his own grenade.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "ff_damage_reduction_bullets",
      "description": "How much to reduce damage done to teammates when shot.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "ff_damage_reduction_other",
      "description": "How much to reduce damage done to teammates by things other than bullets and grenades.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "ff_damage_bullet_penetration",
      "description": "If friendly fire is off, this will scale the penetration power and damage a bullet does when penetrating another friendly player",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_clip_penetration_traces_to_players",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_nomvp",
      "description": "Disable MVP awards.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_disconnected_player_data_hold_time",
      "description": "Duration, in seconds, to hold onto the data of disconnected players, for scoreboard display.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_mute_players_with_social_penalties",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_guardian_extra_equipment_ct",
      "description": "Extra starting equipment for CT players in guardian modes",
      "flags": "gamedll release missing3"
  },
  {
      "name": "sv_guardian_extra_equipment_t",
      "description": "Extra starting equipment for Terrorist players in guardian modes",
      "flags": "gamedll release missing3"
  },
  {
      "name": "dev_create_move_report",
      "description": "Whether we should create move reports when you push movement keys. Reports are created for the server and are numbered monotonically",
      "flags": "developmentonly gamedll clientdll replicated cheat"
  },
  {
      "name": "sv_update_animgraph_movement_in_finish",
      "description": "Whether we should update animgraph movement in FinishMove.",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "sv_staminajumpcost",
      "description": "Stamina penalty for jumping",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_staminalandcost",
      "description": "Stamina penalty for landing",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_exostaminajumpcost",
      "description": "Stamina penalty for jumping with exo legs",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_exostaminalandcost",
      "description": "Stamina penalty for landing with exo legs",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_staminarecoveryrate",
      "description": "Rate at which stamina recovers (units/sec)",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_consecutive_loss_max",
      "description": "",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "contributionscore_assist",
      "description": "amount of contribution score added for an assist",
      "flags": "gamedll release missing3"
  },
  {
      "name": "contributionscore_kill",
      "description": "amount of contribution score added for a kill",
      "flags": "gamedll release missing3"
  },
  {
      "name": "contributionscore_objective_kill",
      "description": "amount of contribution score added for an objective related kill",
      "flags": "gamedll release missing3"
  },
  {
      "name": "contributionscore_hostage_rescue_minor",
      "description": "amount of contribution score added to all alive CTs per hostage rescued",
      "flags": "gamedll release missing3"
  },
  {
      "name": "contributionscore_hostage_rescue_major",
      "description": "amount of contribution score added to rescuer per hostage rescued",
      "flags": "gamedll release missing3"
  },
  {
      "name": "contributionscore_bomb_defuse_minor",
      "description": "amount of contribution score for defusing a bomb after eliminating enemy team",
      "flags": "gamedll release missing3"
  },
  {
      "name": "contributionscore_bomb_defuse_major",
      "description": "amount of contribution score for defusing a bomb while at least one enemy remains alive",
      "flags": "gamedll release missing3"
  },
  {
      "name": "contributionscore_bomb_planted",
      "description": "amount of contribution score for planting a bomb",
      "flags": "gamedll release missing3"
  },
  {
      "name": "contributionscore_bomb_exploded",
      "description": "amount of contribution score awarded to bomb planter and terrorists remaining alive if bomb explosion wins the round",
      "flags": "gamedll release missing3"
  },
  {
      "name": "contributionscore_suicide",
      "description": "amount of contribution score for a suicide, normally negative",
      "flags": "gamedll release missing3"
  },
  {
      "name": "contributionscore_team_kill",
      "description": "amount of contribution score for a team kill, normally negative",
      "flags": "gamedll release missing3"
  },
  {
      "name": "contributionscore_hostage_kill",
      "description": "amount of contribution score for killing a hostage, normally negative",
      "flags": "gamedll release missing3"
  },
  {
      "name": "contributionscore_cash_bundle",
      "description": "amount of contribution score for picking up a cash bundle",
      "flags": "gamedll release missing3"
  },
  {
      "name": "contributionscore_crate_break",
      "description": "amount of contribution score for breaking an item crate",
      "flags": "gamedll release missing3"
  },
  {
      "name": "contributionscore_kill_factor",
      "description": "percentage of victim's contribution score to award to their killer as a bonus",
      "flags": "gamedll release missing3"
  },
  {
      "name": "mp_guardian_draw_bounds",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "mp_endmatch_votenextmap_wargames_modes",
      "description": "Modes available for endmatch voting during War Games. Separate names with spaces.",
      "flags": "gamedll release"
  },
  {
      "name": "mp_endmatch_votenextmap_wargames_nummaps",
      "description": "Maximum number of maps to include in endmatch voting during War Games",
      "flags": "gamedll release"
  },
  {
      "name": "mp_endmatch_votenextmap_wargames_nummodes",
      "description": "Maximum number of other War Games to include in endmatch voting during War Games",
      "flags": "gamedll release"
  },
  {
      "name": "mp_guardian_loc_string_hud",
      "description": "Loc string token to use on hud for this mission, otherwise default to kills with weapon.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_guardian_loc_weapon",
      "description": "Override to weapon dialog var applied to UI",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "cash_team_terrorist_win_bomb",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_team_elimination_hostage_map_t",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_team_elimination_hostage_map_ct",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_team_elimination_bomb_map",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_team_survive_guardian_wave",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_team_win_by_time_running_out_hostage",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_team_win_by_time_running_out_bomb",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_team_win_by_defusing_bomb",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_team_win_by_hostage_rescue",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_team_loser_bonus",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_team_loser_bonus_consecutive_rounds",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_team_winner_bonus_consecutive_rounds",
      "description": "",
      "flags": "gamedll clientdll notify replicated release"
  },
  {
      "name": "cash_team_rescued_hostage",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_team_hostage_alive",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_team_planted_bomb_but_defused",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_team_hostage_interaction",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_team_bonus_shorthanded",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_player_killed_teammate",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_player_killed_enemy_factor",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_player_killed_enemy_default",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_player_bomb_planted",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_player_bomb_defused",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_player_rescued_hostage",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_player_interact_with_hostage",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_player_damage_hostage",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_player_killed_hostage",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_player_respawn_amount",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "cash_player_get_killed",
      "description": "",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "mp_guardian_give_random_grenades_to_bots",
      "description": "If set guardian bots will be given grenades at the beginning of the wave.",
      "flags": "gamedll release missing3"
  },
  {
      "name": "mp_solid_teammates",
      "description": "How solid are teammates: 0 = transparent; 1 = fully solid; 2 = can stand on top of heads",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_free_armor",
      "description": "Determines whether kevlar (1+) and/or helmet (2+) are given automatically.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_max_armor",
      "description": "Determines the highest level of armor allowed to be purchased. (0) None, (1) Kevlar, (2) Helmet",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_halftime",
      "description": "Determines whether the match switches sides in a halftime event.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_randomspawn",
      "description": "Determines whether players are to spawn. 0 = default; 1 = both teams; 2 = Terrorists; 3 = CTs.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_randomspawn_los",
      "description": "If using mp_randomspawn, determines whether to test Line of Sight when spawning.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_randomspawn_dist",
      "description": "If using mp_randomspawn, determines whether to test distance when selecting this spot.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_competitive_minspec",
      "description": "Enable to force certain client convars to minimum/maximum values to help prevent competitive advantages.",
      "flags": "gamedll clientdll notify replicated release"
  },
  {
      "name": "mp_retake_t_count",
      "description": "Number of terrorists when playing retakes.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_retake_ct_count",
      "description": "Number of CT's when playing retakes.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_retake_ct_loadout_default_pistol_round",
      "description": "CT Loadouts for default pistol round when playing bomb site retake.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_retake_ct_loadout_upgraded_pistol_round",
      "description": "CT Loadouts for upgraded pistol round when playing bomb site retake.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_retake_ct_loadout_light_buy_round",
      "description": "CT Loadouts for force buy round when playing bomb site retake.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_retake_ct_loadout_full_buy_round",
      "description": "CT Loadouts for full buy round when playing bomb site retake.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_retake_ct_loadout_bonus_card_availability",
      "description": "CT bonus card availability pattern for full buy round when playing bomb site retake.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_retake_ct_loadout_bonus_card",
      "description": "CT bonus card for full buy round when playing bomb site retake.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_retake_ct_loadout_enemy_card",
      "description": "CT enemy card for full buy round when playing bomb site retake.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_retake_t_loadout_default_pistol_round",
      "description": "T Loadouts for default pistol round when playing bomb site retake.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_retake_t_loadout_upgraded_pistol_round",
      "description": "T Loadouts for upgraded pistol round when playing bomb site retake.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_retake_t_loadout_light_buy_round",
      "description": "T Loadouts for force buy round when playing bomb site retake.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_retake_t_loadout_full_buy_round",
      "description": "T Loadouts for full buy round when playing bomb site retake.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_retake_t_loadout_bonus_card_availability",
      "description": "T bonus card availability pattern for full buy round when playing bomb site retake.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_retake_t_loadout_bonus_card",
      "description": "T bonus card for full buy round when playing bomb site retake.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_retake_t_loadout_enemy_card",
      "description": "T enemy card for full buy round when playing bomb site retake.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_retake_max_consecutive_rounds_same_target_site",
      "description": "Limit the number of consecutive rounds targeting the same site.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_teammates_are_enemies",
      "description": "When set, your teammates act as enemies and all players are valid targets.",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "mp_buy_anywhere",
      "description": "When set, players can buy anywhere, not only in buyzones. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists.",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "mp_buy_during_immunity",
      "description": "When set, players can buy when immune, ignoring buytime. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists.",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "sv_pushaway_force",
      "description": "How hard physics objects are pushed away from the players on the server.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_pushaway_min_player_speed",
      "description": "If a player is moving slower than this, don't push away physics objects (enables ducking behind things).",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_pushaway_max_force",
      "description": "Maximum amount of force applied to physics objects by players.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_pushaway_clientside",
      "description": "Clientside physics push away (0=off, 1=only localplayer, 1=all players)",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_pushaway_player_force",
      "description": "How hard the player is pushed away from physics objects (falls off with inverse square of distance).",
      "flags": "developmentonly gamedll clientdll replicated cheat"
  },
  {
      "name": "sv_pushaway_max_player_force",
      "description": "Maximum of how hard the player is pushed away from physics objects.",
      "flags": "developmentonly gamedll clientdll replicated cheat"
  },
  {
      "name": "sv_turbophysics",
      "description": "Turns on turbo physics",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "steamworks_sessionid_server",
      "description": "The server session ID for the new steamworks gamestats.",
      "flags": "developmentonly gamedll missing0 clientdll replicated"
  },
  {
      "name": "sv_grenade_trajectory_time_spectator",
      "description": "Length of time grenade trajectory remains visible as a spectator.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_grenade_trajectory_prac_trailtime",
      "description": "Shows grenade trajectory practice visualization for this number of seconds.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_grenade_trajectory_prac_pipreview",
      "description": "Shows grenade trajectory practice picture-in-picture preview.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "vm_debug",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "healthshot_health",
      "description": "",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "healthshot_healthboost_time",
      "description": "",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "healthshot_healthboost_speed_multiplier",
      "description": "",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "healthshot_allow_use_at_full",
      "description": "",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_health_approach_enabled",
      "description": "",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "sv_health_approach_speed",
      "description": "",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "molotov_throw_detonate_time",
      "description": "",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "weapon_molotov_maxdetonateslope",
      "description": "Maximum angle of slope on which the molotov will detonate",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "cl_smoke_origin_height",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "mp_death_drop_defuser",
      "description": "Drop defuser on player death",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_death_drop_taser",
      "description": "Drop taser on player death",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_death_drop_breachcharge",
      "description": "Drop breachcharge on player death",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_death_drop_healthshot",
      "description": "Drop healthshot on player death",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_coop_force_join_ct",
      "description": "If set, real players will auto join CT on join.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_coopterrorhunt_num_enemies",
      "description": "The number of enemies CTs have to hunt and kill.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_coopterrorhunt_kill_add_time",
      "description": "The number of seconds added to the clock when players get a kill.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_coopmission_mission_number",
      "description": "Which mission the map should run after it loads.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_force_pick_time",
      "description": "The amount of time a player has on the team screen to make a selection before being auto-teamed",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "bot_autodifficulty_threshold_low",
      "description": "Lower bound below Average Human Contribution Score that a bot must be below to change its difficulty",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "bot_autodifficulty_threshold_high",
      "description": "Upper bound above Average Human Contribution Score that a bot must be above to change its difficulty",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_equipment_reset_rounds",
      "description": "Reset all player equipment every N rounds (0 for never)",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_economy_reset_rounds",
      "description": "Reset all player money every N rounds (0 for never)",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_weapons_allow_zeus",
      "description": "Determines how many Zeus purchases a player can make per round (0 to disallow, -1 to have no limit).",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_weapons_allow_pistols",
      "description": "Determines which team, if any, can purchase Pistols. -1 = any; 0 = non; 2 = Ts; 3 = CTs.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_weapons_allow_smgs",
      "description": "Determines which team, if any, can purchase SMGs. -1 = any; 0 = non; 2 = Ts; 3 = CTs.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_weapons_allow_heavy",
      "description": "Determines which team, if any, can purchase Heavy guns. -1 = any; 0 = non; 2 = Ts; 3 = CTs.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_weapons_allow_rifles",
      "description": "Determines which team, if any, can purchase Rifles. -1 = any; 0 = non; 2 = Ts; 3 = CTs.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_weapons_allow_heavyassaultsuit",
      "description": "Determines whether heavyassaultsuit is permitted.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_heavyassaultsuit_cooldown",
      "description": "Determines cooldown of purchase.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_weapons_allow_typecount",
      "description": "Determines how many purchases of each weapon type allowed per player per round (0 to disallow purchasing, -1 to have no limit).",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_weapons_allow_map_placed",
      "description": "If this convar is set, when a match starts, the game will not delete weapons placed in the map.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_default_team_winner_no_objective",
      "description": "If the map doesn't define an objective (bomb, hostage, etc), the value of this convar will declare the winner when the time runs out in the round.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_weapons_glow_on_ground",
      "description": "If this convar is set, weapons on the ground will have a glow around them.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_respawn_on_death_t",
      "description": "When set to 1, terrorists will respawn after dying.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_respawn_on_death_ct",
      "description": "When set to 1, counter-terrorists will respawn after dying.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_use_respawn_waves",
      "description": "When set to 1, and that player's team is set to respawn, they will respawn in waves. If set to 2, teams will respawn when the whole team is dead.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_tdm_healthshot_killcount",
      "description": "Grant healthshots in team deathmatch after n kills",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_ggprogressive_healthshot_killcount",
      "description": "Grant healthshots in arms race after n kills",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_items_prohibited",
      "description": "Set this convar to a comma-delimited list of definition indices of weapons that should be prohibited from use.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_respawnwavetime_ct",
      "description": "Time between respawn waves for CTs.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_respawnwavetime_t",
      "description": "Time between respawn waves for Terrorists.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "tr_completed_training",
      "description": "Whether the local player has completed the initial training portion of the training map",
      "flags": "developmentonly gamedll archive per_user"
  },
  {
      "name": "tr_best_course_time",
      "description": "The player's best time for the timed obstacle course",
      "flags": "developmentonly gamedll archive per_user"
  },
  {
      "name": "tr_valve_course_time",
      "description": "Valve's best time for the timed obstacle course",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "mp_competitive_endofmatch_extra_time",
      "description": "After a competitive match finishes rematch voting extra time is given for rankings.",
      "flags": "gamedll release"
  },
  {
      "name": "mp_endmatch_votenextmap",
      "description": "Whether or not players vote for the next map at the end of the match when the final scoreboard comes up",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_endmatch_votenextmap_keepcurrent",
      "description": "If set, keeps the current map in the list of voting options.  If not set, the current map will not appear in the list of voting options.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_endmatch_votenextleveltime",
      "description": "If mp_endmatch_votenextmap is set, players have this much time to vote on the next map at match end.",
      "flags": "gamedll release"
  },
  {
      "name": "sv_endmatch_item_drop_interval",
      "description": "The time between drops on the end match scoreboard",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_endmatch_item_drop_interval_rare",
      "description": "The time between drops on the end match scoreboard for rare items",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_endmatch_item_drop_interval_mythical",
      "description": "The time between drops on the end match scoreboard for mythical items",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_endmatch_item_drop_interval_legendary",
      "description": "The time between drops on the end match scoreboard for legendary items",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_endmatch_item_drop_interval_ancient",
      "description": "The time between drops on the end match scoreboard for ancient items",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_compute_per_bot_difficulty",
      "description": "0 = compute all bot difficulties equally, 1 = compute unique bot difficulty for each bot",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_show_bot_difficulty_in_name",
      "description": "0 = hide bot difficulty in bot name, 1 = show bot difficulty in bot name",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_bot_difficulty_kbm",
      "description": "Bot difficulty while playing with Keyboard/Mouse device",
      "flags": "developmentonly gamedll missing0 clientdll replicated"
  },
  {
      "name": "sv_kick_ban_duration",
      "description": "How long should a kick ban from the server should last (in minutes)",
      "flags": "gamedll clientdll notify replicated release"
  },
  {
      "name": "sv_disable_immunity_alpha",
      "description": "If set, clients won't slam the player model render settings each frame for immunity [mod authors use this]",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_deadtalk",
      "description": "Dead players can speak (voice, text) to the living",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "sv_full_alltalk",
      "description": "Any player (including Spectator team) can speak to any other player",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_talk_enemy_dead",
      "description": "Dead players can hear all dead enemy communication (voice, chat)",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_talk_enemy_living",
      "description": "Living players can hear all living enemy communication (voice, chat)",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_talk_after_dying_time",
      "description": "The number of seconds a player can continue talking after dying as if they were still alive",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_auto_full_alltalk_during_warmup_half_end",
      "description": "When enabled will automatically turn on full all talk mode in warmup, at halftime and at the end of the match",
      "flags": "gamedll release missing3"
  },
  {
      "name": "sv_spec_hear",
      "description": "Determines who spectators can hear: 0: only spectators; 1: all players; 2: spectated team; 3: self only; 4: nobody",
      "flags": "gamedll clientdll notify replicated release"
  },
  {
      "name": "mp_c4timer",
      "description": "how long from when the C4 is armed until it blows",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "dev_reportmoneychanges",
      "description": "Displays money account changes for players in the console",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "mp_roundtime",
      "description": "How many minutes each round takes.",
      "flags": "gamedll notify replicated release missing3"
  },
  {
      "name": "mp_roundtime_deployment",
      "description": "How many minutes deployment for coop mission takes.",
      "flags": "gamedll release"
  },
  {
      "name": "mp_roundtime_hostage",
      "description": "How many minutes each round of Hostage Rescue takes. If 0 then use mp_roundtime instead.",
      "flags": "gamedll notify replicated release missing3"
  },
  {
      "name": "mp_roundtime_defuse",
      "description": "How many minutes each round of Bomb Defuse takes. If 0 then use mp_roundtime instead.",
      "flags": "gamedll notify replicated release missing3"
  },
  {
      "name": "mp_team_intro_time",
      "description": "How many seconds for team intro",
      "flags": "gamedll notify replicated release missing3"
  },
  {
      "name": "mp_freezetime",
      "description": "how many seconds to keep players frozen when the round starts",
      "flags": "gamedll notify replicated release missing3"
  },
  {
      "name": "mp_limitteams",
      "description": "Max # of players 1 team can have over another (0 disables check)",
      "flags": "gamedll notify replicated release missing3"
  },
  {
      "name": "mp_tkpunish",
      "description": "Will TK'ers and team damagers be punished in the next round?  {0=no,  1=yes}",
      "flags": "gamedll replicated release"
  },
  {
      "name": "mp_autokick",
      "description": "Kick idle/team-killing/team-damaging players",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_suicide_penalty",
      "description": "Punish players for suicides",
      "flags": "gamedll release missing3"
  },
  {
      "name": "mp_spawnprotectiontime",
      "description": "Kick players who team-kill within this many seconds of a round restart.",
      "flags": "gamedll replicated release"
  },
  {
      "name": "mp_td_spawndmgthreshold",
      "description": "The damage threshold players have to exceed at the start of the round to be warned/kick.",
      "flags": "gamedll replicated release"
  },
  {
      "name": "mp_td_dmgtowarn",
      "description": "The damage threshhold players have to exceed in a match to get warned that they are about to be kicked.",
      "flags": "gamedll replicated release"
  },
  {
      "name": "mp_td_dmgtokick",
      "description": "The damage threshhold players have to exceed in a match to get kicked.",
      "flags": "gamedll replicated release"
  },
  {
      "name": "mp_humanteam",
      "description": "Restricts human players to a single team {any, CT, T}",
      "flags": "gamedll replicated release"
  },
  {
      "name": "mp_guardian_special_kills_needed",
      "description": "The number of kills needed with a specific weapon.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_guardian_special_weapon_needed",
      "description": "The weapon that needs to be used to increment the kills needed to complete the mission.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_guardian_player_dist_min",
      "description": "The distance at which we start to warn a player when they are too far from the guarded bombsite.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_guardian_player_dist_max",
      "description": "The maximum distance a player is allowed to get from the bombsite before they're killed.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_guardian_bot_money_per_wave",
      "description": "The amount of money bots get time each wave the players complete.  This # is absolute and not additive, the money is set to (this)x(wave#) for each bot on each wave.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_guardian_ai_bt_difficulty_adjust_wave_interval",
      "description": "Adjust the guardian bots' difficulty every nth guardian wave when using behavior trees.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_guardian_ai_bt_difficulty_max_next_level_bots",
      "description": "How many bots to increase difficulty per wave - this many easier bots will get harder.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_guardian_ai_bt_difficulty_cap_beginning_round",
      "description": "Starting this round a difficulty cap will be applied to the bots.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_guardian_ai_bt_difficulty_initial_value",
      "description": "Starting difficulty level for the gardian bots.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_ignore_round_win_conditions",
      "description": "Ignore conditions which would end the current round",
      "flags": "gamedll replicated release"
  },
  {
      "name": "mp_dm_time_between_bonus_min",
      "description": "Minimum time a bonus time will start after the round start or after the last bonus (in seconds)",
      "flags": "gamedll replicated release"
  },
  {
      "name": "mp_dm_time_between_bonus_max",
      "description": "Maximum time a bonus time will start after the round start or after the last bonus (in seconds)",
      "flags": "gamedll replicated release"
  },
  {
      "name": "mp_dm_bonus_length_min",
      "description": "Minimum time the bonus time will last (in seconds)",
      "flags": "gamedll replicated release"
  },
  {
      "name": "mp_dm_bonus_length_max",
      "description": "Maximum time the bonus time will last (in seconds)",
      "flags": "gamedll replicated release"
  },
  {
      "name": "mp_dogtag_pickup_rule",
      "description": "Who is eligible to pick up a dogtag (0 = killer only, 1 = killer's team, 2 = victim's team, 3 = killer & victim's team, 4 = anyone)",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_dogtag_despawn_on_killer_death",
      "description": "Whether dogtags should despawn when their killer dies",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_dogtag_despawn_time",
      "description": "How many seconds dogtags should stay around before despawning automatically (0 = infinite)",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_damage_scale_ct_body",
      "description": "Scales the damage a CT player takes by this much when they take damage in the body. (1 == 100%, 0.5 == 50%)",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_damage_scale_ct_head",
      "description": "Scales the damage a CT player takes by this much when they take damage in the head (1 == 100%, 0.5 == 50%).  REMEMBER! headshots do 4x the damage of the body before this scaler is applied.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_damage_scale_t_body",
      "description": "Scales the damage a T player takes by this much when they take damage in the body. (1 == 100%, 0.5 == 50%)",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_damage_scale_t_head",
      "description": "Scales the damage a T player takes by this much when they take damage in the head (1 == 100%, 0.5 == 50%).        REMEMBER! headshots do 4x the damage of the body before this scaler is applied.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_damage_headshot_only",
      "description": "Determines whether non-headshot hits do any damage.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_weapon_self_inflict_amount",
      "description": "If Set to non-0, will hurt the attacker by the specified fraction of max damage if they miss.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_damage_vampiric_amount",
      "description": "If Set to non-0, will determine the fraction of damage dealt that will be given to attacker.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_global_damage_per_second",
      "description": "If above 0, deal non-lethal damage to players over time.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_starting_losses",
      "description": "Determines what the initial loss streak is.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_consecutive_loss_aversion",
      "description": "How loss streak is affected with round win: 0 = win fully resets loss bonus, 1 = first win steps down loss bonus, 2 = first win holds loss bonus and step down starting with second win",
      "flags": "gamedll replicated release"
  },
  {
      "name": "mp_heavybot_damage_reduction_scale",
      "description": "How much damage should scale when the player wearing the heavy assault suit is shot (1.0 = no change, 0.5 = half damage)",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_heavyassaultsuit_deploy_timescale",
      "description": "How fast a player wearing the heavy assault suit will draw their weapon (1.0 = normal speed, 0.5 = half speed)",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_heavyassaultsuit_aimpunch",
      "description": "How much EXTRA aim punch will happen when a player wearing the assault suit gets when shot",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_shield_speed_deployed",
      "description": "The max speed of a player when they have a shield deployed",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_shield_speed_holstered",
      "description": "The max speed of a player when they have a shield holstered",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_backup_round_auto",
      "description": "If enabled will keep in-memory backups to handle reconnecting players even if the backup files aren't written to disk",
      "flags": "gamedll release"
  },
  {
      "name": "mp_backup_round_file",
      "description": "If set then server will save all played rounds information to files filename_date_time_team1_team2_mapname_roundnum_score1_score2.txt",
      "flags": "gamedll release"
  },
  {
      "name": "mp_backup_round_file_pattern",
      "description": "If set then server will save all played rounds information to files named by this pattern, e.g.'%prefix%_%date%_%time%_%team1%_%team2%_%map%_round%round%_score_%score1%_%score2%.txt'",
      "flags": "gamedll release"
  },
  {
      "name": "mp_backup_round_file_last",
      "description": "Every time a backup file is written the value of this convar gets updated to hold the name of the backup file.",
      "flags": "gamedll release"
  },
  {
      "name": "mp_backup_restore_load_autopause",
      "description": "Whether to automatically pause the match after restoring round data from backup",
      "flags": "gamedll release"
  },
  {
      "name": "mp_spec_swapplayersides",
      "description": "Toggle set the player names and team names to the opposite side in which they are are on the spectator panel.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_gameinstructor_disable",
      "description": "Force all clients to disable their game instructors.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "cs_AssistDamageThreshold",
      "description": "cs_AssistDamageThreshold defines the amount of damage needed to score an assist",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_matchpause_auto_5v5",
      "description": "When enabled will automatically pause the match at next freeze time if less than 5 players are connected on each team.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_spectators_max",
      "description": "How many spectators are allowed in a match.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_buytime",
      "description": "How many seconds after round start players can buy items for.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_buy_allow_grenades",
      "description": "Whether players can purchase grenades from the buy menu or not.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_buy_allow_guns",
      "description": "Whether players can purchase guns: pistols (1), SMGs (2), rifles (4), shotguns (8), sniper rifles (16), heavy MGs (32).",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_warmup_online_enabled",
      "description": "Whether or not to do a warmup period at the start of an online match.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_warmup_offline_enabled",
      "description": "Whether or not to do a warmup period at the start of a match in an offline (bot) match.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_startmoney",
      "description": "amount of money each player gets when they reset",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_maxmoney",
      "description": "maximum amount of money allowed in a player's account",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_afterroundmoney",
      "description": "amount of money awared to every player after each round",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_playercashawards",
      "description": "Players can earn money by performing in-game actions",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_teamcashawards",
      "description": "Teams can earn money by performing in-game actions",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_overtime_enable",
      "description": "If a match ends in a tie, use overtime rules to determine winner",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_overtime_maxrounds",
      "description": "When overtime is enabled play additional rounds to determine winner",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_overtime_startmoney",
      "description": "Money assigned to all players at start of every overtime half",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_hostages_takedamage",
      "description": "Whether or not hostages can be hurt.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_hostages_rescuetowin",
      "description": "0 == all alive, any other number is the number the CT's need to rescue to win the round.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "mp_hostages_rescuetime",
      "description": "Additional time added to round time if a hostage is reached by a CT.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_anyone_can_pickup_c4",
      "description": "If set, everyone can pick up the c4, not just Ts.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_c4_cannot_be_defused",
      "description": "If set, the planted c4 cannot be defused.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_coaching_enabled",
      "description": "Allows spectating and communicating with a team ( 'coach t' or 'coach ct' )",
      "flags": "developmentonly gamedll clientdll replicated release"
  },
  {
      "name": "sv_allow_thirdperson",
      "description": "Allows the server set players in third person mode without the client slamming it back (if cheats are on, all clients can set thirdperson without this convar being set)",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_party_mode",
      "description": "Party!!",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_dz_hostage_rescue_reward",
      "description": "Number of cash bundles to award for rescuing a hostage",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_dz_squad_wipe_reward",
      "description": "Number of cash bundles to award for eliminating a squad",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_shorthanded_cash_bonus_round_delay",
      "description": "number of previous rounds that a team needs to have been shorthanded before they are eligible for the short-handed bonus",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_shorthanded_cash_bonus_ignore_kicked",
      "description": "Determines whether kicked players are included in the assessment for short-handedness",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_disconnect_kills_players",
      "description": "When a player disconnects, kill them first (triggering item drops, stats, etc.)",
      "flags": "gamedll release"
  },
  {
      "name": "mp_disconnect_kills_bots",
      "description": "When a bot disconnects, kill them first.  Requires mp_disconnect_kills_players.",
      "flags": "gamedll release"
  },
  {
      "name": "mp_verbose_changelevel_spew",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_warmuptime",
      "description": "How long the warmup period lasts. Changing this value resets warmup.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_warmuptime_all_players_connected",
      "description": "Warmup time to use when all players have connected. 0 to disable.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_endwarmup_player_count",
      "description": "Number of players required to be connected to end warmup early. 0 to require maximum players for mode.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_warmup_pausetimer",
      "description": "Set to 1 to stay in warmup indefinitely. Set to 0 to resume the timer.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_halftime_pausetimer",
      "description": "Set to 1 to stay in halftime indefinitely. Set to 0 to resume the timer.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_halftime_pausematch",
      "description": "Set to 1 to pause match after halftime countdown elapses. Match must be resumed by vote or admin.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_overtime_halftime_pausetimer",
      "description": "If set to 1 will set mp_halftime_pausetimer to 1 before every half of overtime. Set mp_halftime_pausetimer to 0 to resume the timer.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_respawn_immunitytime",
      "description": "How many seconds after respawn immunity lasts. Set to negative value to disable warmup immunity.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_playerid",
      "description": "Controls what information player see in the status bar: 0 all names; 1 team names; 2 no names",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_playerid_delay",
      "description": "Number of seconds to delay showing information in the status bar",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_playerid_hold",
      "description": "Number of seconds to keep showing old information in the status bar",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_round_restart_delay",
      "description": "Number of seconds to delay before restarting a round after a win",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_halftime_duration",
      "description": "Target number of seconds that halftime lasts; shortened if team intros are active",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_min_halftime_duration",
      "description": "Minimum number of seconds that halftime lasts even if team intros are active",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_match_can_clinch",
      "description": "Can a team clinch and end the match by being so far ahead that the other team has no way to catching up?",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_ggtr_always_upgrade",
      "description": "Award this many upgrade points every round in demolition mode",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_ggtr_end_round_kill_bonus",
      "description": "Number of bonus points awarded in Demolition Mode when knife kill ends round",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_ggtr_last_weapon_kill_ends_half",
      "description": "End the half and give a team round point when a player makes a kill using the final weapon",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_ggprogressive_round_restart_delay",
      "description": "Number of seconds to delay before restarting a round after a win in gungame progessive",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_ggprogressive_use_random_weapons",
      "description": "If set, selects random weapons from set categories for the progression order",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_ggprogressive_random_weapon_kills_needed",
      "description": "If mp_ggprogressive_use_random_weapons is set, this is the number of kills needed with each weapon",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_ggtr_num_rounds_autoprogress",
      "description": "Upgrade the player's weapon after this number of rounds without upgrading",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_ct_default_melee",
      "description": "The default melee weapon that the CTs will spawn with.       Even if this is blank, a knife will be given.  To give a taser, it should look like this: 'weapon_knife weapon_taser'.  Remember to set mp_weapons_allow_zeus to 1 if you want to give a taser!",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_ct_default_secondary",
      "description": "The default secondary (pistol) weapon that the CTs will spawn with",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_ct_default_primary",
      "description": "The default primary (rifle) weapon that the CTs will spawn with",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_ct_default_grenades",
      "description": "The default grenades that the CTs will spawn with.        To give multiple grenades, separate each weapon class with a space like this: 'weapon_molotov weapon_hegrenade'",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_t_default_melee",
      "description": "The default melee weapon that the Ts will spawn with",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_t_default_secondary",
      "description": "The default secondary (pistol) weapon that the Ts will spawn with",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_t_default_primary",
      "description": "The default primary (rifle) weapon that the Ts will spawn with",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_t_default_grenades",
      "description": "The default grenades that the Ts will spawn with. To give multiple grenades, separate each weapon class with a space like this: 'weapon_molotov weapon_hegrenade'",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_join_grace_time",
      "description": "Number of seconds after round start to allow a player to join a game",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_win_panel_display_time",
      "description": "The amount of time to show the win panel between matches / halfs",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_ggtr_bomb_pts_for_upgrade",
      "description": "Kill points required to upgrade a player's weapon",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_ggtr_bomb_pts_for_he",
      "description": "Kill points required in a round to get a bonus HE grenade",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_ggtr_bomb_pts_for_flash",
      "description": "Kill points required in a round to get a bonus flash grenade",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_ggtr_bomb_pts_for_molotov",
      "description": "Kill points required in a round to get a bonus molotov cocktail",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_ggtr_bomb_respawn_delay",
      "description": "Number of seconds to delay before making the bomb available to a respawner in gun game",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_ggtr_bomb_defuse_bonus",
      "description": "Number of bonus upgrades to award the CTs when they defuse a gun game bomb",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_ggtr_bomb_detonation_bonus",
      "description": "Number of bonus upgrades to award the Ts when they detonate a gun game bomb",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_dm_kill_base_score",
      "description": "Number of base points to award for a kill in deathmatch.  Cheaper weapons award 1 or 2 additional points.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_dm_bonus_percent",
      "description": "Percent of points additionally awarded when someone gets a kill with the bonus weapon during the bonus period.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_dm_bonus_respawn",
      "description": "When attempting to get the bonus weapon in deathmatch, whether we should respawn you with it or just give it to you directly",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_dm_dogtag_score",
      "description": "Points to award for picking up a dogtag in deathmatch.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_dm_teammode",
      "description": "In deathmatch, enables team DM visuals & scoring (0: personal, 1: team mode, 2: use team contribution score)",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_dm_teammode_kill_score",
      "description": "Team deathmatch victory points to award for enemy kill",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_dm_teammode_bonus_score",
      "description": "Team deathmatch victory points to award for kill with bonus weapon",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_dm_teammode_dogtag_score",
      "description": "Team deathmatch victory points to award for collecting enemy dogtags",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_dm_bonusweapon_dogtags",
      "description": "Additional dogtags to drop when making a kill with the bonus weapon",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_display_kill_assists",
      "description": "Whether to display and score player assists",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_match_end_restart",
      "description": "At the end of the match, perform a restart instead of loading a new map",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_match_end_changelevel",
      "description": "At the end of the match, perform a changelevel even if next map is the same",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_defuser_allocation",
      "description": "How to allocate defusers to CTs at start or round: 0=none, 1=random, 2=everyone",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_give_player_c4",
      "description": "Whether this map should spawn a c4 bomb for a player or not.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_require_gun_use_to_acquire",
      "description": "Whether guns must be +used to acquire or default is touch-to-pickup",
      "flags": "gamedll release"
  },
  {
      "name": "mp_death_drop_gun",
      "description": "Which gun to drop on player death: 0=none, 1=best, 2=current or best",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_death_drop_c4",
      "description": "Whether c4 is droppable",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_death_drop_grenade",
      "description": "Which grenade to drop on player death: 0=none, 1=best, 2=current or best, 3=all grenades",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "ammo_item_limit_adrenaline",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "ammo_grenade_limit_breachcharge",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "ammo_item_limit_healthshot",
      "description": "",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "ammo_50AE_impulse",
      "description": "You must enable tweaking via tweak_ammo_impulses to use this value.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ammo_762mm_impulse",
      "description": "You must enable tweaking via tweak_ammo_impulses to use this value.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ammo_556mm_impulse",
      "description": "You must enable tweaking via tweak_ammo_impulses to use this value.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ammo_556mm_box_impulse",
      "description": "You must enable tweaking via tweak_ammo_impulses to use this value.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ammo_338mag_impulse",
      "description": "You must enable tweaking via tweak_ammo_impulses to use this value.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ammo_9mm_impulse",
      "description": "You must enable tweaking via tweak_ammo_impulses to use this value.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ammo_buckshot_impulse",
      "description": "You must enable tweaking via tweak_ammo_impulses to use this value.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ammo_45acp_impulse",
      "description": "You must enable tweaking via tweak_ammo_impulses to use this value.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ammo_357sig_impulse",
      "description": "You must enable tweaking via tweak_ammo_impulses to use this value.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ammo_57mm_impulse",
      "description": "You must enable tweaking via tweak_ammo_impulses to use this value.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ammo_50AE_headshot_mult",
      "description": "You must enable tweaking via tweak_ammo_impulses to use this value.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ammo_762mm_headshot_mult",
      "description": "You must enable tweaking via tweak_ammo_impulses to use this value.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ammo_556mm_headshot_mult",
      "description": "You must enable tweaking via tweak_ammo_impulses to use this value.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ammo_556mm_box_headshot_mult",
      "description": "You must enable tweaking via tweak_ammo_impulses to use this value.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ammo_338mag_headshot_mult",
      "description": "You must enable tweaking via tweak_ammo_impulses to use this value.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ammo_9mm_headshot_mult",
      "description": "You must enable tweaking via tweak_ammo_impulses to use this value.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ammo_buckshot_headshot_mult",
      "description": "You must enable tweaking via tweak_ammo_impulses to use this value.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ammo_45acp_headshot_mult",
      "description": "You must enable tweaking via tweak_ammo_impulses to use this value.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ammo_357sig_headshot_mult",
      "description": "You must enable tweaking via tweak_ammo_impulses to use this value.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ammo_57mm_headshot_mult",
      "description": "You must enable tweaking via tweak_ammo_impulses to use this value.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "frag_grenade_blip_frequency",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "spec_replay_round_delay",
      "description": "Round can be delayed by this much due to someone watching a replay; must be at least 3-4 seconds, otherwise the last replay will always be interrupted by round start, assuming normal pause between round_end and round_start events (7 seconds) and freezecam delay (2 seconds) and 7.4 second full replay (5.4 second pre-death and ~2 seconds post-death) and replay in/out switching (up to a second)",
      "flags": "gamedll release"
  },
  {
      "name": "mp_footsteps_serverside",
      "description": "Makes the server always play footstep sounds. Clients never calculate footstep sounds locally, instead relying on the server.",
      "flags": "gamedll release"
  },
  {
      "name": "sv_warmup_to_freezetime_delay",
      "description": "Delay between end of warmup and start of match.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_server_graphic1",
      "description": "A 360x60 (<16kb) image file in /csgo/ that will be displayed to spectators.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_server_graphic2",
      "description": "A 220x45 (<16kb) image file in /csgo/ that will be displayed to spectators.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_disable_observer_interpolation",
      "description": "Disallow interpolating between observer targets on this server.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_invites_only_mainmenu",
      "description": "If turned on, will ignore all invites when user is playing a match",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_holiday_mode",
      "description": "0 = OFF, 1 = Halloween, 2 = Winter",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_teamid_overhead_always_prohibit",
      "description": "Determines whether cl_teamid_overhead_always is prohibited.",
      "flags": "gamedll clientdll notify replicated release"
  },
  {
      "name": "sv_versus_screen_scene_id",
      "description": "Determines which scene is used for the versus screen.",
      "flags": "gamedll release missing3"
  },
  {
      "name": "sv_autoexec_mapname_cfg",
      "description": "Execute a mapname cfg file on the server automatically in custom game modes that require it.",
      "flags": "gamedll release"
  },
  {
      "name": "sv_show_team_equipment_prohibit",
      "description": "Determines whether +cl_show_team_equipment is prohibited.",
      "flags": "gamedll clientdll notify replicated release"
  },
  {
      "name": "sv_show_team_equipment_force_on",
      "description": "Force on if not prohibited",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_teamid_overhead_maxdist_spec",
      "description": "If >0, server will override cl_teamid_overhead_maxdist_spec",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_teamid_overhead_maxdist",
      "description": "If >0, server will override cl_teamid_overhead_maxdist",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_teamid_overhead",
      "description": "Shows teamID over player's heads.  0 = off, 1 = on",
      "flags": "gamedll clientdll notify replicated release"
  },
  {
      "name": "sv_disable_radar",
      "description": "0: regular radar; 1: always disabled; 2: disabled in warmup",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_hide_roundtime_until_seconds",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_outofammo_indicator",
      "description": "",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_falldamage_to_below_player_ratio",
      "description": "Landing on a another player's head gives them this ratio of the damage.",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_falldamage_to_below_player_multiplier",
      "description": "Scale damage when distributed across two players",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_chat_proximity",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_voice_proximity",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_highlight_duration",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_highlight_distance",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_fade_player_visibility_farz",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_kick_players_with_cooldown",
      "description": "(0: do not kick on insecure servers; 1: kick players with Untrusted status or convicted by Overwatch; 2: kick players with any cooldown)",
      "flags": "gamedll replicated release"
  },
  {
      "name": "sv_matchend_drops_enabled",
      "description": "Rewards gameplay time is always accumulated for players, but drops at the end of the match can be prevented",
      "flags": "gamedll release"
  },
  {
      "name": "sv_buy_status_override",
      "description": "Override for buy status map info. 0 = everyone can buy, 1 = ct only, 2 = t only 3 = nobody",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "sv_auto_adjust_bot_difficulty",
      "description": "Adjust the difficulty of bots each round based on contribution score.",
      "flags": "gamedll release missing3"
  },
  {
      "name": "sv_bots_get_easier_each_win",
      "description": "If > 0, some # of bots will lower thier difficulty each time they win. The argument defines how many will lower their difficulty each time.",
      "flags": "gamedll release missing3"
  },
  {
      "name": "sv_bots_get_harder_after_each_wave",
      "description": "If > 0, some # of bots will raise thier difficulty each time CTs beat a Guardian wave. The argument defines how many will raise their difficulty each time",
      "flags": "gamedll release missing3"
  },
  {
      "name": "sv_guardian_reset_c4_every_wave",
      "description": "",
      "flags": "gamedll release missing3"
  },
  {
      "name": "tv_delaymapchange",
      "description": "Delays map change until broadcast is complete",
      "flags": "gamedll release"
  },
  {
      "name": "sv_game_mode_flags",
      "description": "Dedicated server game mode flags to run",
      "flags": "gamedll release"
  },
  {
      "name": "nextmap_print_enabled",
      "description": "When enabled prints next map to clients",
      "flags": "gamedll release"
  },
  {
      "name": "sv_ggprogressive_autosniper_first",
      "description": "Should auto snipers go first or regular snipers?",
      "flags": "gamedll release"
  },
  {
      "name": "sv_ggprogressive_shotgun_last",
      "description": "Should auto snipers go first or regular snipers?",
      "flags": "gamedll release"
  },
  {
      "name": "sv_skirmish_id",
      "description": "Dedicated server skirmish id to run",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "ff_damage_decoy_explosion",
      "description": "Enables or disables team damage from decoy detonation",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_autoteambalance",
      "description": "",
      "flags": "gamedll notify release missing3"
  },
  {
      "name": "mp_maxrounds",
      "description": "max number of rounds to play before server changes maps",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "mp_winlimit",
      "description": "Max score one team can reach before server changes maps",
      "flags": "developmentonly gamedll clientdll notify replicated"
  },
  {
      "name": "mp_tournament",
      "description": "",
      "flags": "developmentonly gamedll clientdll notify replicated"
  },
  {
      "name": "mp_team_timeout_time",
      "description": "Duration of each timeout.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_team_timeout_max",
      "description": "Number of timeouts each team gets per match.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_technical_timeout_per_team",
      "description": "How many technical timeouts are there per team?",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_technical_timeout_duration_s",
      "description": "How many seconds is a full technical timeout?",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "mp_weapons_max_gun_purchases_per_weapon_per_match",
      "description": "Max number of times a player may purchase any weapon per match",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "sv_max_allowed_net_graph",
      "description": "Determines max allowed net_graph value for clients.",
      "flags": "gamedll clientdll notify replicated release"
  },
  {
      "name": "mp_match_restart_delay",
      "description": "Time (in seconds) until a match restarts.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "mp_chattime",
      "description": "amount of time players can chat after the game is over",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "mp_timelimit",
      "description": "game time per map in minutes",
      "flags": "gamedll clientdll notify replicated release missing3"
  },
  {
      "name": "mp_fraglimit",
      "description": "",
      "flags": "gamedll notify release"
  },
  {
      "name": "nextmode",
      "description": "Sets the game mode to be played when the next level loads",
      "flags": "gamedll notify replicated release"
  },
  {
      "name": "nextlevel",
      "description": "If set to a valid map name, will trigger a changelevel to the specified map at the end of the round",
      "flags": "gamedll notify release"
  },
  {
      "name": "mapcyclefile",
      "description": "Name of the .txt file used to cycle the maps on multiplayer servers",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "game_online",
      "description": "The current game is online.",
      "flags": "developmentonly gamedll missing0 clientdll replicated"
  },
  {
      "name": "game_public",
      "description": "The current game is public.",
      "flags": "developmentonly gamedll missing0 clientdll replicated"
  },
  {
      "name": "mp_teamname_1",
      "description": "A non-empty string overrides the first team's name.",
      "flags": "gamedll release"
  },
  {
      "name": "mp_teamname_2",
      "description": "A non-empty string overrides the second team's name.",
      "flags": "gamedll release"
  },
  {
      "name": "mp_teamflag_1",
      "description": "Enter a country's alpha 2 code to show that flag next to team 1's name in the spectator scoreboard.",
      "flags": "gamedll release"
  },
  {
      "name": "mp_teamflag_2",
      "description": "Enter a country's alpha 2 code to show that flag next to team 2's name in the spectator scoreboard.",
      "flags": "gamedll release"
  },
  {
      "name": "mp_teamlogo_1",
      "description": "Enter a team's shorthand image name to display their logo. Images can be found here: 'resource/flash/econ/tournaments/teams'",
      "flags": "gamedll release"
  },
  {
      "name": "mp_teamlogo_2",
      "description": "Enter a team's shorthand image name to display their logo. Images can be found here: 'resource/flash/econ/tournaments/teams'",
      "flags": "gamedll release"
  },
  {
      "name": "mp_teamprediction_txt",
      "description": "A value between 1 and 99 will set predictions in favor of first team.",
      "flags": "gamedll release"
  },
  {
      "name": "mp_teamprediction_pct",
      "description": "A value between 1 and 99 will show predictions in favor of CT team.",
      "flags": "gamedll release"
  },
  {
      "name": "mp_teammatchstat_txt",
      "description": "A non-empty string sets the match stat description, e.g. 'Match 2 of 3'.",
      "flags": "gamedll release"
  },
  {
      "name": "mp_teammatchstat_1",
      "description": "A non-empty string sets first team's match stat.",
      "flags": "gamedll release"
  },
  {
      "name": "mp_teammatchstat_2",
      "description": "A non-empty string sets second team's match stat.",
      "flags": "gamedll release"
  },
  {
      "name": "mp_teamscore_1",
      "description": "A non-empty string for best-of-N maps won by the first team.",
      "flags": "gamedll release"
  },
  {
      "name": "mp_teamscore_2",
      "description": "A non-empty string for best-of-N maps won by the second team.",
      "flags": "gamedll release"
  },
  {
      "name": "mp_teamscore_max",
      "description": "How many maps to win the series (bo3 max=2; bo5 max=3; bo7 max=4)",
      "flags": "gamedll release"
  },
  {
      "name": "mp_teammatchstat_holdtime",
      "description": "Decide on a match stat and hold it additionally for at least so many seconds",
      "flags": "gamedll release"
  },
  {
      "name": "mp_teammatchstat_cycletime",
      "description": "Cycle match stats after so many seconds",
      "flags": "gamedll release"
  },
  {
      "name": "mp_heavyassaultsuit_speed",
      "description": "The max speed of a player when they are wearing the heavy assault suit",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "inferno_damage_timer",
      "description": "How long between times for the inferno to deal damage.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "mp_hostagepenalty",
      "description": "Terrorist are kicked for killing too much hostages",
      "flags": "developmentonly gamedll notify missing3"
  },
  {
      "name": "hostage_debug",
      "description": "Show hostage AI debug information",
      "flags": "gamedll cheat"
  },
  {
      "name": "hostage_drop_time",
      "description": "Time for the hostage before it fully drops to ground",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "hostage_is_silent",
      "description": "When set, the hostage won't play any code driven response rules lines",
      "flags": "gamedll cheat"
  },
  {
      "name": "sv_pushaway_hostage_force",
      "description": "How hard the hostage is pushed away from physics objects (falls off with inverse square of distance).",
      "flags": "gamedll replicated cheat"
  },
  {
      "name": "sv_pushaway_max_hostage_force",
      "description": "Maximum of how hard the hostage is pushed away from physics objects.",
      "flags": "gamedll replicated cheat"
  },
  {
      "name": "mp_hostages_max",
      "description": "Maximum number of hostages to spawn.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_hostages_spawn_farthest",
      "description": "When enabled will consistently force the farthest hostages to spawn.",
      "flags": "gamedll replicated release"
  },
  {
      "name": "mp_hostages_spawn_same_every_round",
      "description": "0 = spawn hostages randomly every round, 1 = same spawns for entire match.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_hostages_spawn_force_positions",
      "description": "Comma separated list of zero based indices to force spawn positions, e.g. '0,2' or '1,6'",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_hostages_spawn_force_positions_xyz",
      "description": "Comma separated list of xyz locations to force spawn positions, e.g. 'x1 y1 z1,x2 y2 z2'",
      "flags": "gamedll replicated release"
  },
  {
      "name": "mp_hostages_run_speed_modifier",
      "description": "Default is 1.0, slow down hostages by setting this to < 1.0.",
      "flags": "gamedll replicated release"
  },
  {
      "name": "mp_only_cts_rescue_hostages",
      "description": "",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "nav_approach_points_area_size_threshold",
      "description": "Ignore nav areas with at least one side smaller than this amount during approach point calculation.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "nav_draw_hidingspots",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_draw_dangerareas",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "mp_guardian_target_site",
      "description": "If set to the index of a bombsite, will cause random spawns to be only created near that site.",
      "flags": "gamedll release missing3"
  },
  {
      "name": "sv_flashbang_strength",
      "description": "Flashbang strength",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "sv_hegrenade_damage_multiplier",
      "description": "",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "sv_hegrenade_radius_multiplier",
      "description": "",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "dota_overhead_on_received_item",
      "description": "Emit an overhead particle effect on receiving an item from an ally.",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ai_shot_bias_min",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ai_shot_bias_max",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "ai_debug_shoot_positions",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "ai_disabled",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "sv_script_think_interval",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "vprof_scope_entity_thinks",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "vprof_think_limit",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "ent_pivot_size",
      "description": "",
      "flags": "gamedll archive cheat"
  },
  {
      "name": "debug_overlay_fullposition",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "ent_text_no_name_really_i_mean_it",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_show_contexts",
      "description": "Show entity contexts in ent_text display",
      "flags": "gamedll cheat"
  },
  {
      "name": "ent_actornames_font",
      "description": "ent_actornames font name",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "ent_actornames_fontsize",
      "description": "ent_actornames font size",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "ent_text_flags_active",
      "description": "",
      "flags": "gamedll archive cheat"
  },
  {
      "name": "sv_pushaway_clientside_size",
      "description": "Minimum size of pushback objects",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "props_break_max_pieces_perframe",
      "description": "Maximum prop breakable piece count per frame (-1 = model default)",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "break_damage_inherit_scale",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "break_invulnerable_spawn_duration",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "animgraph_enable_parallel_update",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "animgraph_enable_tickJobs",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "animgraph_force_tick_all_graphs",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_skip_update_animations",
      "description": "Enable to skip game animations",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "animgraph_slope_draw_raycasts",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "animgraph_draw_traces",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "animgraph_trace_ignore_prop_physics",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_massreport",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "ent_skeleton_duration",
      "description": "Duration of ent_skeleton display",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "skill",
      "description": "Game skill level.",
      "flags": "gamedll clientdll archive replicated per_user"
  },
  {
      "name": "sv_lightquery_debug",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "lightquery_debug_direct_lighting",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "lightquery_debug_indirect_lighting",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "lightquery_debug_indirect_lighting_fast",
      "description": "0 = standard sampling, 1 = fast sampling, 2 = ultra-fast sampling",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "phys_active",
      "description": "Whether PLAYER physics is actively simulated (ie. noclip)",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_phys_enabled",
      "description": "Enable all physics simulation",
      "flags": "gamedll cheat"
  },
  {
      "name": "sv_phys_stop_at_collision",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "sv_phys_sleep_enable",
      "description": "Enable sleeping for dynamic physics bodies.",
      "flags": "gamedll cheat"
  },
  {
      "name": "sv_phys_animated_hierarchy",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "phys_show_stats",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "phys_threaded_transform_update",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_gravity",
      "description": "World gravity.",
      "flags": "gamedll clientdll notify replicated release"
  },
  {
      "name": "phys_timescale",
      "description": "Scale time for physics",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "phys_continuous_kinematic_update",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "phys_parallel_islands",
      "description": "Enable/Disable Parallel Island Solving",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_phys_visualize_awake",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "phys_visualize_awake_dynamic_only",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "phys_visualize_awake_unattached_only",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_phys_debug_callback_entities",
      "description": "Print all entities that get touch callbacks. Each entity is printed only once.",
      "flags": "gamedll cheat"
  },
  {
      "name": "phys_log_updaters_include",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "phys_log_updaters_exclude",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "phys_log_updaters",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_hitbox_debug",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sos_debug_emit",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "snd_break_on_start_soundevent",
      "description": "Use to debug break on any soundevent that is started matching this name",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "script_break_in_native_debugger_on_error",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "script_attach_debugger_at_startup",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "ai_debug_dyninteractions",
      "description": "Debug the NPC dynamic interaction system.",
      "flags": "gamedll cheat"
  },
  {
      "name": "fog_volume_debug",
      "description": "If enabled, prints diagnostic information about the current fog volume",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "ammo_50AE_max",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "ammo_762mm_max",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "ammo_556mm_max",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "ammo_556mm_small_max",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "ammo_556mm_box_max",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "ammo_338mag_max",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "ammo_9mm_max",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "ammo_buckshot_max",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "ammo_45acp_max",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "ammo_357sig_max",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "ammo_357sig_p250_max",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "ammo_357sig_small_max",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "ammo_357sig_min_max",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "ammo_57mm_max",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "ammo_grenade_limit_default",
      "description": "",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "ammo_grenade_limit_flashbang",
      "description": "",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "ammo_grenade_limit_total",
      "description": "",
      "flags": "gamedll clientdll replicated release missing3"
  },
  {
      "name": "ammo_grenade_limit_tripwirefire",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_vote_issue_pause_match_spec_only",
      "description": "When enabled, only admins start technical pause",
      "flags": "gamedll notify replicated release"
  },
  {
      "name": "sv_vote_issue_timeout_allowed",
      "description": "Can people hold votes to time out?",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_vote_issue_matchready_allowed",
      "description": "Can people hold votes to ready/unready the match?",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_vote_issue_swap_teams_allowed",
      "description": "Can people hold votes to swap the teams?",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_vote_issue_surrrender_allowed",
      "description": "Can people hold votes to surrender?",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "weapon_accuracy_logging",
      "description": "",
      "flags": "developmentonly gamedll clientdll archive replicated"
  },
  {
      "name": "weapon_near_empty_sound",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "weapon_debug_max_inaccuracy",
      "description": "Force all shots to have maximum inaccuracy",
      "flags": "developmentonly gamedll clientdll replicated cheat"
  },
  {
      "name": "weapon_debug_inaccuracy_only_up",
      "description": "Force weapon inaccuracy to be in exactly the up direction",
      "flags": "developmentonly gamedll clientdll replicated cheat"
  },
  {
      "name": "snd_max_pitch_shift_inaccuracy",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "weapon_accuracy_shotgun_spread_patterns",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "use_fx_queue",
      "description": "use_fx_queue",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "debug_aim_angle",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "nav_max_view_distance",
      "description": "Maximum range for precomputed nav mesh visibility (0 = default 1500 units)",
      "flags": "gamedll cheat"
  },
  {
      "name": "nav_potentially_visible_dot_tolerance",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "bot_force_duck",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "mp_coopmission_bot_difficulty_offset",
      "description": "The difficulty offset modifier for bots during coop missions.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "bot_traceview",
      "description": "For internal testing purposes.",
      "flags": "gamedll replicated cheat"
  },
  {
      "name": "bot_stop",
      "description": "bot_stop <1|all> | <not_bomber> | <t> | <ct>",
      "flags": "gamedll replicated cheat"
  },
  {
      "name": "bot_ignore_enemies",
      "description": "If nonzero, bots will ignore enemies (for debugging).",
      "flags": "gamedll replicated cheat"
  },
  {
      "name": "bot_show_nav",
      "description": "For internal testing purposes.",
      "flags": "gamedll replicated cheat"
  },
  {
      "name": "bot_walk",
      "description": "If nonzero, bots can only walk, not run.",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "bot_difficulty",
      "description": "Defines the skill of bots joining the game.  Values are: 0=easy, 1=normal, 2=hard, 3=expert.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "bot_debug",
      "description": "For internal testing purposes.",
      "flags": "gamedll replicated cheat"
  },
  {
      "name": "bot_debug_target",
      "description": "For internal testing purposes.",
      "flags": "gamedll replicated cheat"
  },
  {
      "name": "bot_quota",
      "description": "Determines the total number of bots in the game.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "bot_quota_mode",
      "description": "Determines the type of quota..Allowed values: 'normal', 'fill', and 'match'..If 'fill', the server will adjust bots to keep N players in the game, where N is bot_quota..If 'match', the server will maintain a 1:N ratio of humans to bots, where N is bot_quota.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "bot_prefix",
      "description": "This string is prefixed to the name of all bots that join the game..<difficulty> will be replaced with the bot's difficulty..<weaponclass> will be replaced with the bot's desired weapon class..<skill> will be replaced with a 0-100 representation of the bot's skill.",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "bot_allow_rogues",
      "description": "If nonzero, bots may occasionally go 'rogue'. Rogue bots do not obey radio commands, nor pursue scenario goals.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "bot_allow_pistols",
      "description": "If nonzero, bots may use pistols.",
      "flags": "gamedll replicated release"
  },
  {
      "name": "bot_allow_shotguns",
      "description": "If nonzero, bots may use shotguns.",
      "flags": "gamedll replicated release"
  },
  {
      "name": "bot_allow_sub_machine_guns",
      "description": "If nonzero, bots may use sub-machine guns.",
      "flags": "gamedll replicated release"
  },
  {
      "name": "bot_allow_rifles",
      "description": "If nonzero, bots may use rifles.",
      "flags": "gamedll replicated release"
  },
  {
      "name": "bot_allow_machine_guns",
      "description": "If nonzero, bots may use the machine gun.",
      "flags": "gamedll replicated release"
  },
  {
      "name": "bot_allow_grenades",
      "description": "If nonzero, bots may use grenades.",
      "flags": "gamedll replicated release"
  },
  {
      "name": "bot_allow_snipers",
      "description": "If nonzero, bots may use sniper rifles.",
      "flags": "gamedll replicated release"
  },
  {
      "name": "bot_join_team",
      "description": "Determines the team bots will join into. Allowed values: 'any', 'T', or 'CT'.",
      "flags": "gamedll replicated release"
  },
  {
      "name": "bot_join_after_player",
      "description": "If nonzero, bots wait until a player joins before entering the game.",
      "flags": "gamedll replicated release"
  },
  {
      "name": "bot_auto_vacate",
      "description": "If nonzero, bots will automatically leave to make room for human players.",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "bot_zombie",
      "description": "If nonzero, bots will stay in idle mode and not attack.",
      "flags": "gamedll replicated cheat"
  },
  {
      "name": "bot_defer_to_human_goals",
      "description": "If nonzero and there is a human on the team, the bots will not do the scenario tasks.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "bot_defer_to_human_items",
      "description": "If nonzero and there is a human on the team, the bots will not get scenario items.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "bot_chatter",
      "description": "Control how bots talk. Allowed values: 'off', 'radio', 'minimal', or 'normal'.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "bot_dont_shoot",
      "description": "If nonzero, bots will not fire weapons (for debugging).",
      "flags": "gamedll replicated cheat release"
  },
  {
      "name": "bot_eco_limit",
      "description": "If nonzero, bots will not buy if their money falls below this amount.",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "bot_auto_follow",
      "description": "If nonzero, bots with high co-op may automatically follow a nearby human player.",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "bot_flipout",
      "description": "If nonzero, bots use no CPU for AI. Instead, they run around randomly.",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "bot_controllable",
      "description": "Determines whether bots can be controlled by players",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "mp_bot_ai_bt",
      "description": "Use the specified behavior tree file to drive the bot behavior.",
      "flags": "gamedll release missing3"
  },
  {
      "name": "bot_show_occupy_time",
      "description": "Show when each nav area can first be reached by each team.",
      "flags": "gamedll cheat"
  },
  {
      "name": "bot_show_battlefront",
      "description": "Show areas where rushing players will initially meet.",
      "flags": "gamedll cheat"
  },
  {
      "name": "bot_join_delay",
      "description": "Prevents bots from joining the server for this many seconds after a map change.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "bot_join_in_warmup",
      "description": "Prevents bots from joining the server while warmup phase is active.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "throttle_expensive_ai",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "csgo_nav_jump_link_detour_threshold",
      "description": "don't traverse a jump link if there's a detour that costs less than this amount",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "mp_guardian_force_collect_hostages_timeout",
      "description": "Force bots to collect hostages after this amount of time if no enemy has been seen.",
      "flags": "gamedll release missing3"
  },
  {
      "name": "bot_max_vision_distance_override",
      "description": "Max distance bots can see targets.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "bot_ignore_players",
      "description": "Bots will not see non-bot players.",
      "flags": "gamedll cheat"
  },
  {
      "name": "bot_coop_idle_max_vision_distance",
      "description": "Max distance bots can see targets (in coop) when they are idle, dormant, hiding or asleep.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "cv_bot_ai_bt_debug_target",
      "description": "Draw the behavior tree of the given bot.",
      "flags": "gamedll replicated cheat"
  },
  {
      "name": "cv_bot_ai_bt_moveto_show_next_hiding_spot",
      "description": "Draw the hiding spot the bot will check next.",
      "flags": "gamedll replicated cheat"
  },
  {
      "name": "cv_bot_ai_bt_hiding_spot_show",
      "description": "Draw hiding spots.",
      "flags": "gamedll replicated cheat"
  },
  {
      "name": "sv_bot_parallel_threat_detection",
      "description": "Perform bot threat detection in parallel",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "bot_max_visible_smoke_length",
      "description": "Bots will see players through smoke clouds up to this length.",
      "flags": "gamedll replicated release"
  },
  {
      "name": "csgo_fatdemo_enable",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "csgo_fatdemo_output",
      "description": "",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "bot_loadout",
      "description": "bots are given these items at round start",
      "flags": "gamedll cheat"
  },
  {
      "name": "bot_randombuy",
      "description": "should bots ignore their prefered weapons and just buy weapons at random?",
      "flags": "gamedll cheat"
  },
  {
      "name": "sv_bot_buy_grenade_chance",
      "description": "Chance bots will buy a grenade with leftover money (after prim, sec and armor). Input as percent (0-100.0)",
      "flags": "gamedll release missing3"
  },
  {
      "name": "sv_bot_buy_smoke_weight",
      "description": "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.",
      "flags": "gamedll release"
  },
  {
      "name": "sv_bot_buy_flash_weight",
      "description": "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.",
      "flags": "gamedll release"
  },
  {
      "name": "sv_bot_buy_decoy_weight",
      "description": "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.",
      "flags": "gamedll release"
  },
  {
      "name": "sv_bot_buy_molotov_weight",
      "description": "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.",
      "flags": "gamedll release"
  },
  {
      "name": "sv_bot_buy_hegrenade_weight",
      "description": "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.",
      "flags": "gamedll release"
  },
  {
      "name": "bot_coop_force_throw_grenade_chance",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "devonly_chicken_feeler_distance",
      "description": "Chicken feeler distance",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "devonly_chicken_feeler_height",
      "description": "Chicken feeler height",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "devonly_chicken_blocktimer",
      "description": "Chicken blockertimer",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "debug_chicken",
      "description": "Chicken debug info",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "inferno_per_flame_spawn_duration",
      "description": "Duration each new flame will attempt to spawn new flames",
      "flags": "gamedll cheat"
  },
  {
      "name": "inferno_initial_spawn_interval",
      "description": "Time between spawning flames for first fire",
      "flags": "gamedll cheat"
  },
  {
      "name": "inferno_child_spawn_interval_multiplier",
      "description": "Amount spawn interval increases for each child",
      "flags": "gamedll cheat"
  },
  {
      "name": "inferno_max_child_spawn_interval",
      "description": "Largest time interval for child flame spawning",
      "flags": "gamedll cheat"
  },
  {
      "name": "inferno_spawn_angle",
      "description": "Angular change from parent",
      "flags": "gamedll cheat"
  },
  {
      "name": "inferno_max_flames",
      "description": "Maximum number of flames that can be created",
      "flags": "gamedll replicated release"
  },
  {
      "name": "inferno_flame_spacing",
      "description": "Minimum distance between separate flame spawns",
      "flags": "gamedll cheat"
  },
  {
      "name": "inferno_flame_lifetime",
      "description": "Average lifetime of each flame in seconds",
      "flags": "gamedll replicated release"
  },
  {
      "name": "inferno_friendly_fire_duration",
      "description": "For this long, FF is credited back to the thrower.",
      "flags": "gamedll cheat"
  },
  {
      "name": "inferno_debug",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "inferno_damage",
      "description": "Damage per second",
      "flags": "gamedll cheat"
  },
  {
      "name": "inferno_max_range",
      "description": "Maximum distance flames can spread from their initial ignition point",
      "flags": "gamedll replicated release"
  },
  {
      "name": "inferno_velocity_factor",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "inferno_velocity_decay_factor",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "inferno_velocity_normal_factor",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "inferno_surface_offset",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "inferno_child_spawn_max_depth",
      "description": "",
      "flags": "gamedll replicated release"
  },
  {
      "name": "inferno_scorch_decals",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "inferno_max_trace_per_tick",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "inferno_forward_reduction_factor",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "inferno_smoke_volume_density",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "hint_panel_fadein",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "hint_panel_fadeout",
      "description": "",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "hint_controller_use_hand_origin",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "r_light_flickering_enabled",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "r_mixed_shadows_fade_out_time",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "r_mixed_shadows_fade_in_time",
      "description": "",
      "flags": "developmentonly gamedll clientdll replicated"
  },
  {
      "name": "sv_log_change_offsets",
      "description": "Log change offsets to game/varchangeinfoN.log files.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_watchtransmit",
      "description": "Watch NetworkStateChanged info for this entity index.",
      "flags": "gamedll release"
  },
  {
      "name": "sv_max_change_offsets",
      "description": "How many network changes to track before requiring full diff check.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_pvs_entity",
      "description": "If set, only allows this ent index to network (other than players and things that force sending).",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_pvs_random",
      "description": "If set, objects blink in/out of pvs randomly.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "pvs_flowtype",
      "description": "Flow through spawn groups for vis (0 == default, 1 == always visible, 2 == never visible.",
      "flags": "gamedll release"
  },
  {
      "name": "pvs_debugentity",
      "description": "Verbose spew for this entity when doing IsInPVS computation.",
      "flags": "gamedll release"
  },
  {
      "name": "sv_workshop_allow_other_maps",
      "description": "When hosting a workshop collection, users can play other workshop map on this server when it is empty and then mapcycle into this server collection.",
      "flags": "gamedll release"
  },
  {
      "name": "tv_allow_camera_man_steamid",
      "description": "Allows tournament production cameraman to run csgo.exe -interactivecaster on SteamID 7650123456XXX and be the camera man.",
      "flags": "gamedll release"
  },
  {
      "name": "tv_allow_camera_man_steamid2",
      "description": "Allows tournament production tv cameraman to run csgo.exe -interactivecaster on SteamID 7650123456XXX and be the tv camera man.",
      "flags": "gamedll release"
  },
  {
      "name": "game_type",
      "description": "The current game type. See GameModes.txt.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "game_mode",
      "description": "The current game mode (based on game type). See GameModes.txt.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "custom_bot_difficulty",
      "description": "Bot difficulty for offline play.",
      "flags": "gamedll clientdll replicated release"
  },
  {
      "name": "sv_prime_accounts_only",
      "description": "When this setting is enabled only prime users can connect to this game server.",
      "flags": "gamedll release"
  },
  {
      "name": "radarvismethod",
      "description": "0 for traditional method, 1 for more realistic method",
      "flags": "gamedll cheat"
  },
  {
      "name": "radarvispow",
      "description": "the degree to which you can point away from a target, and still see them on radar.",
      "flags": "gamedll cheat"
  },
  {
      "name": "radarvisdistance",
      "description": "at this distance and beyond you need to be point right at someone to see them",
      "flags": "gamedll cheat"
  },
  {
      "name": "radarvismaxdot",
      "description": "how closely you have to point at someone to see them beyond max distance",
      "flags": "gamedll cheat"
  },
  {
      "name": "mp_logdetail",
      "description": "Logs attacks.  Values are: 0=off, 1=enemy, 2=teammate, 3=both)",
      "flags": "gamedll release"
  },
  {
      "name": "mp_logdetail_items",
      "description": "Logs a line any time a player acquires or loses an item.",
      "flags": "gamedll release"
  },
  {
      "name": "sv_nonemesis",
      "description": "Disable nemesis and revenge.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_debugroundstats",
      "description": "",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_record_item_time_data",
      "description": "Turn on recording of per player item time data into the server log.",
      "flags": "gamedll release"
  },
  {
      "name": "sv_autobuyammo",
      "description": "Enable automatic ammo purchase when inside buy zones during buy periods",
      "flags": "gamedll notify replicated release missing3"
  },
  {
      "name": "healthshot_healthboost_damage_multiplier",
      "description": "",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "CS_WarnFriendlyDamageInterval",
      "description": "Defines how frequently the server notifies clients that a player damaged a friend",
      "flags": "gamedll cheat"
  },
  {
      "name": "mp_tagging_scale",
      "description": "Scalar for player tagging modifier when hit. Lower values for greater tagging.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "mp_flinch_punch_scale",
      "description": "Scalar for first person view punch when getting hit.",
      "flags": "developmentonly gamedll replicated cheat"
  },
  {
      "name": "phys_playerscale",
      "description": "This multiplies the bullet impact impuse on players for more dramatic results when players are shot.",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "phys_headshotscale",
      "description": "Modifier for the headshot impulse hits on players",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "sv_dz_parachute_reuse",
      "description": "",
      "flags": "gamedll replicated release"
  },
  {
      "name": "sv_player_parachute_velocity",
      "description": "",
      "flags": "gamedll replicated release"
  },
  {
      "name": "gg_knife_kill_demotes",
      "description": "0 = knife kill in gungame has no effect on player level, 1 = knife kill demotes player by one level",
      "flags": "developmentonly gamedll replicated"
  },
  {
      "name": "mp_logdistance_2d",
      "description": "Enables distance logging every so many units",
      "flags": "gamedll release"
  },
  {
      "name": "mp_logdistance_sec",
      "description": "Enables distance logging every so many seconds",
      "flags": "gamedll release"
  },
  {
      "name": "mp_logloadouts",
      "description": "Enables distance logging with full loadouts",
      "flags": "gamedll release"
  },
  {
      "name": "dev_add_onground_on_spawn",
      "description": "Should we mess with the ground flag when we spawn? (I don't think we should). If we don't hit the assert in CCSPlayer_MovementServices::ProcessMovement, we should remove this by Dec 2022.",
      "flags": "gamedll release"
  },
  {
      "name": "sv_guardian_min_wave_for_heavy",
      "description": "",
      "flags": "gamedll release missing3"
  },
  {
      "name": "sv_guardian_max_wave_for_heavy",
      "description": "",
      "flags": "gamedll release missing3"
  },
  {
      "name": "sv_guardian_heavy_count",
      "description": "",
      "flags": "gamedll release missing3"
  },
  {
      "name": "sv_guardian_heavy_all",
      "description": "",
      "flags": "gamedll release missing3"
  },
  {
      "name": "cs_logtouchexpansion",
      "description": "cs_logtouchexpansion <ent index or -1 for all>. Log player touch expansion component.",
      "flags": "gamedll cheat"
  },
  {
      "name": "sv_spawn_rappel_min_duration",
      "description": "",
      "flags": "gamedll replicated release"
  },
  {
      "name": "sv_spawn_rappel_min_duration_with_chute",
      "description": "",
      "flags": "gamedll replicated release"
  },
  {
      "name": "cs_ShowStateTransitions",
      "description": "cs_ShowStateTransitions <ent index or -1 for all>. Show player state transitions.",
      "flags": "gamedll cheat"
  },
  {
      "name": "sv_guardian_starting_equipment_humans",
      "description": "Extra starting equipment for human players in guardian modes",
      "flags": "gamedll release missing3"
  },
  {
      "name": "sv_guardian_health_refresh_per_wave",
      "description": "Health given to survivors per wave in guardian mode.",
      "flags": "gamedll release missing3"
  },
  {
      "name": "sv_guardian_respawn_health",
      "description": "Starting health of guardian players when respawned.",
      "flags": "gamedll release missing3"
  },
  {
      "name": "sv_guardian_spawn_health_ct",
      "description": "Starting health in guardian modes.",
      "flags": "gamedll release missing3"
  },
  {
      "name": "sv_guardian_spawn_health_t",
      "description": "Starting health in guardian modes.",
      "flags": "gamedll release missing3"
  },
  {
      "name": "sv_nowinpanel",
      "description": "Turn on/off win panel on server",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_show_voip_indicator_for_enemies",
      "description": "Makes it so the voip icon is shown over enemies as well as allies when they are talking",
      "flags": "gamedll replicated release"
  },
  {
      "name": "bot_mimic",
      "description": "Bot uses usercmd of player by index.",
      "flags": "gamedll clientdll replicated cheat"
  },
  {
      "name": "bot_freeze",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "bot_mimic_yaw_offset",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "cs_hostage_near_rescue_music_distance",
      "description": "",
      "flags": "gamedll cheat"
  },
  {
      "name": "cs_enable_player_physics_box",
      "description": "",
      "flags": "gamedll release"
  },
  {
      "name": "sv_dz_cash_bundle_size",
      "description": "Size of a cash bundle",
      "flags": "gamedll replicated release"
  },
  {
      "name": "sv_dz_cash_mega_bundle_size",
      "description": "Size of a mega cash bundle",
      "flags": "gamedll replicated release"
  },
  {
      "name": "sv_dz_contractkill_reward",
      "description": "Cash bundles to award for a successful contract kill",
      "flags": "gamedll replicated release"
  },
  {
      "name": "mp_deathcam_skippable",
      "description": "Determines whether a player can early-out of the deathcam.",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "sv_max_deathmatch_respawns_per_tick",
      "description": "",
      "flags": "developmentonly gamedll missing3"
  },
  {
      "name": "sv_radio_throttle_window",
      "description": "The number of seconds before radio command tokens refresh.",
      "flags": "gamedll release"
  },
  {
      "name": "tv_relayradio",
      "description": "Relay team radio commands to TV: 0=off, 1=on",
      "flags": "gamedll release"
  },
  {
      "name": "bot_chatter_use_rr",
      "description": "0 = Use old bot chatter system, 1 = Use response rules",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_vote_timer_duration",
      "description": "How long to allow voting on an issue",
      "flags": "gamedll release"
  },
  {
      "name": "sv_vote_command_delay",
      "description": "How long after a vote passes until the action happens",
      "flags": "gamedll release"
  },
  {
      "name": "sv_allow_votes",
      "description": "Allow voting?",
      "flags": "gamedll release missing3"
  },
  {
      "name": "sv_vote_failure_timer",
      "description": "A vote that fails cannot be re-submitted for this long",
      "flags": "gamedll release"
  },
  {
      "name": "sv_vote_creation_timer",
      "description": "How often someone can individually call a vote.",
      "flags": "gamedll release"
  },
  {
      "name": "sv_vote_quorum_ratio",
      "description": "The minimum ratio of players needed to vote on an issue to resolve it.",
      "flags": "gamedll release"
  },
  {
      "name": "sv_vote_allow_spectators",
      "description": "Allow spectators to initiate votes?",
      "flags": "gamedll release"
  },
  {
      "name": "sv_vote_count_spectator_votes",
      "description": "Allow spectators to vote on issues?",
      "flags": "gamedll release"
  },
  {
      "name": "sv_vote_allow_in_warmup",
      "description": "Allow voting during warmup?",
      "flags": "gamedll release"
  },
  {
      "name": "sv_vote_disallow_kick_on_match_point",
      "description": "Disallow vote kicking on the match point round.",
      "flags": "gamedll release"
  },
  {
      "name": "sv_mapvetopickvote_maps",
      "description": "Which maps are used for map veto pick sequence",
      "flags": "gamedll release"
  },
  {
      "name": "sv_mapvetopickvote_phase_duration",
      "description": "How many seconds each phase lasts",
      "flags": "gamedll release"
  },
  {
      "name": "sv_vote_issue_restart_game_allowed",
      "description": "Can people hold votes to restart the game?",
      "flags": "gamedll release"
  },
  {
      "name": "sv_arms_race_vote_to_restart_disallowed_after",
      "description": "Arms Race gun level after which vote to restart is disallowed",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "sv_vote_issue_kick_allowed",
      "description": "Can people hold votes to kick players from the server?",
      "flags": "gamedll notify replicated release"
  },
  {
      "name": "sv_vote_kick_ban_duration",
      "description": "How long should a kick vote ban someone from the server? (in minutes)",
      "flags": "gamedll notify replicated release"
  },
  {
      "name": "sv_vote_issue_loadbackup_allowed",
      "description": "Can people hold votes to load match from backup?",
      "flags": "gamedll notify replicated release"
  },
  {
      "name": "sv_vote_issue_loadbackup_spec_only",
      "description": "When enabled, only admins load match from backup",
      "flags": "gamedll notify replicated release"
  },
  {
      "name": "sv_vote_issue_loadbackup_spec_safe",
      "description": "When enabled, admins load match from backup in safe time of the round only",
      "flags": "gamedll release"
  },
  {
      "name": "sv_vote_issue_loadbackup_spec_authoritative",
      "description": "When enabled, admins load match from backup without players vote",
      "flags": "gamedll release"
  },
  {
      "name": "sv_vote_issue_changelevel_allowed",
      "description": "Can people hold votes to change levels?",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_vote_to_changelevel_before_match_point",
      "description": "Restricts vote to change level to rounds prior to match point (default 0, vote is never disallowed)",
      "flags": "gamedll replicated release missing3"
  },
  {
      "name": "sv_vote_issue_nextlevel_allowed",
      "description": "Can people hold votes to set the next level?",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_vote_issue_nextlevel_choicesmode",
      "description": "Present players with a list of lowest playtime maps to choose from?",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_vote_issue_nextlevel_allowextend",
      "description": "Allow players to extend the current map?",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_vote_issue_nextlevel_prevent_change",
      "description": "Not allowed to vote for a nextlevel if one has already been set.",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_vote_issue_scramble_teams_allowed",
      "description": "Can people hold votes to scramble the teams?",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "sv_vote_issue_pause_match_allowed",
      "description": "Can people hold votes to pause/unpause the match?",
      "flags": "developmentonly gamedll"
  },
  {
      "name": "webapi_values_max_pool_size_mb",
      "description": "Maximum size in bytes of the WebAPIValues buffer pool",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "webapi_values_init_buffer_size",
      "description": "Initial buffer size for buffers in the WebAPIValues buffer pool",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_effects_bloom",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_effects_bloom_when_smoked",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_cubemap_normalization",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_postprocess_enable",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_enable_high_precision_lighting",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_render_alpha_immunity",
      "description": "",
      "flags": "developmentonly clientdll cheat"
  },
  {
      "name": "r_csgo_render_post_local_contrast",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_directional_lightmaps",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_multiscattering",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_microshadowing",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_viewmodel_envmap_position_bias",
      "description": "",
      "flags": "developmentonly clientdll cheat"
  },
  {
      "name": "r_csgo_tools_vis_cubemap_roughness",
      "description": "",
      "flags": "developmentonly clientdll cheat"
  },
  {
      "name": "r_csgo_stencil_sniper_zoom",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_firstpersonlegs_nearz_offset",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_water_effects",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_reflection_min_far_plane",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_water_refraction",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_player_fog_maxdensity_multiplier",
      "description": "",
      "flags": "developmentonly clientdll cheat"
  },
  {
      "name": "r_player_fog_distance_multiplier",
      "description": "",
      "flags": "developmentonly clientdll cheat"
  },
  {
      "name": "r_player_visibility_mode",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "r_player_visibility_strength",
      "description": "",
      "flags": "developmentonly clientdll cheat"
  },
  {
      "name": "r_player_visibility_stencil",
      "description": "",
      "flags": "developmentonly clientdll cheat"
  },
  {
      "name": "r_post_bloom_debug",
      "description": "1 = bloom output (before thresholding), 2 = quarter res downsample, 3 = quarter res effects bloom 4 = quarter res effects raw",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_render_post_bloom_strength",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_bloom_threshold_all_samples",
      "description": "Execute bloom threshold once per sample during downsample (default enabled, higher quality, less bloom aliasing)",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_bloom_threshold_downsample_jimenez",
      "description": "Custom downsample based on Jimenez14, (default enabled, higher quality, decreases bloom aliasing further)",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_lowend_objects",
      "description": "0 = Force disable, 1 = use video settings",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_refraction_clip_plane_adjust",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_particle_shadows",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_particle_shadows_cast_on_particles",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_particle_shadows_cast_on_particles_scale",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_particle_shadows_use_depth_pyramid",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_particle_shadows_cast_on_world",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_particle_shadow_map_texture_size",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_debug_particle_shadows",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_fsr_upsample",
      "description": "0 == bilinear upsampe, 1 == FSR upsample, 2 == FSR + RCAS upsample",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_fsr_rcas_sharpness",
      "description": "RCAS sharpness when using FSR + RCAS upsample.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_fsr_enable_mip_bias",
      "description": "Apply negative mip bias when rendering with FSR.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_enable_sunlight_check",
      "description": "Enable vis tests for sunlight.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_mixed_resolution_particles",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_mixed_resolution_color_slices",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_mixed_resolution_particles_scale",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_mixed_resolution_particles_minmax",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_mboit",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_mboit_debug",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_mboit_overestimation",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_mboit_bias",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_mboit_use_4_moments",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_mboit_force_mixed_resolution",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_joint_upscale_sigma",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_volume_mboit_optimization",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_cmaa_enable",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_cmaa_quality",
      "description": "0=low, 1=medium, 2=high, 3=ultra",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_cmaa_extra_sharp",
      "description": "trade more sharpness for reduced antialiasing",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_cmaa_debug_edges",
      "description": "debug visualize edges",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_gpu_culling",
      "description": "CSGO/Graphics/GPU Culling",
      "flags": "developmentonly clientdll menubar_item"
  },
  {
      "name": "r_csgo_gpu_culling_two_pass",
      "description": "CSGO/Graphics/GPU Culling (Two Pass)",
      "flags": "developmentonly clientdll menubar_item"
  },
  {
      "name": "r_csgo_gpu_culling_shadows",
      "description": "CSGO/Graphics/GPU Cull Shadow Views",
      "flags": "developmentonly clientdll menubar_item"
  },
  {
      "name": "r_csgo_decals_use_msaa",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_smoke_overlay_min_dt",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_smoke_quality",
      "description": "0 - no CSM, 1 - use 3x3 or bilinear PCF (dep on shader detail), 2 - use 25 tap PCSS PCF",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_msaa_resolve_apply_exposure_scale",
      "description": "0 - before, 1 - after fix for a2c fringing",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_single_lightbinner",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_resolve_dither_noise_amount",
      "description": "Amount of screen space dither noise to apply during resolve (used/essential with R11G11B10_FLOAT RT)",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_resolve_dither_bluenoise_amount",
      "description": "Equivalent to r_csgo_render_dither_scale, but purely to control bluenoise for R11G11B10 downsample dither (if r_csgo_r11g11b10_dither_mode = 2)",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_r11g11b10_dither_mode",
      "description": "0 - disabled, 1 - regular dither noise, 2 - blue noise dither",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_cable_pixel_radius_clamp",
      "description": "Minimum clamped size in pixels of a cable (if using F_CLAMP_MIN_RADIUS 1 in cable material)",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_override_global_time",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "csgo_3d_skybox",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "csgo_use_fullsort_for_opaque",
      "description": "fullsort the opaque pass when there wasn't a depth prepass",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_prewarm_particles",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_show_build_info",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_debug_reflection_rects",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_depth_prepass_reflections_large",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_depth_prepass_reflections_small",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "ui_deepstats_radio_heat_figurine",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_popup_weaponupdate_version",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_show_subscription_alert",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_mainmenu_bkgnd_movie_94408AE3",
      "description": "Main menu background movie",
      "flags": "clientdll archive release"
  },
  {
      "name": "lobby_default_privacy_bits2",
      "description": "Lobby default permissions (0: private, 1: public)",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_clanid",
      "description": "Current clan ID for name decoration",
      "flags": "missing0 clientdll archive userinfo"
  },
  {
      "name": "ui_setting_advertiseforhire_auto",
      "description": "Whether users will automatically advertise for invites (0: off; 1: last; 2: auto)",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_setting_advertiseforhire_auto_last",
      "description": "Which game mode users last used to advertise for invites",
      "flags": "clientdll archive release"
  },
  {
      "name": "key_bind_version",
      "description": "",
      "flags": "missing0 clientdll archive release"
  },
  {
      "name": "cl_streams_request_url",
      "description": "Number of streams requested for display",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_streams_request_accept",
      "description": "Header for api request",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_streams_image_sfurl",
      "description": "Format of Scaleform image representing the stream",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_streams_refresh_interval",
      "description": "How often to refresh streams list",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_streams_write_response_file",
      "description": "When set will save streams info file for diagnostics",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_streams_mytwitchtv_nolink",
      "description": "Twitch.tv account linking URL",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_streams_mytwitchtv_channel",
      "description": "Twitch.tv account channel URL",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cachedvalue_count_teammates",
      "description": "",
      "flags": "missing0 clientdll archive"
  },
  {
      "name": "cl_righthand",
      "description": "Use right-handed view models.",
      "flags": "clientdll archive"
  },
  {
      "name": "vm_draw_always",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "vm_camera",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "vm_camera_scale",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "vm_camera_no_roll",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "vm_camera_interp_speed",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_crosshairstyle",
      "description": "0 = DEFAULT (DISABLED), 1 = DEFAULT STATIC (DISABLED), 2 = DEFAULT (accurate recoil/spread feedback with a fixed inner part), 3 = ACCURATE DYNAMIC (DISABLED) (accurate recoil/spread feedback), 4 = DEFAULT STATIC, 5 = LEGACY (fake recoil - inaccurate feedback)",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_crosshaircolor",
      "description": "Set crosshair color as defined in game_options.consoles.txt",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_crosshairalpha",
      "description": "",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_crosshairusealpha",
      "description": "",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_crosshairgap",
      "description": "",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_crosshairgap_useweaponvalue",
      "description": "If set to 1, the gap will update dynamically based on which weapon is currently equipped",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_crosshairsize",
      "description": "",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_crosshairthickness",
      "description": "",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_crosshairdot",
      "description": "",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_crosshair_recoil",
      "description": "",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_crosshaircolor_r",
      "description": "",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_crosshaircolor_g",
      "description": "",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_crosshaircolor_b",
      "description": "",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "weapon_debug_spread_show",
      "description": "Enables display of weapon accuracy; 1: show accuracy box, 3: show accuracy with dynamic crosshair",
      "flags": "clientdll cheat per_user"
  },
  {
      "name": "weapon_debug_spread_gap",
      "description": "",
      "flags": "clientdll cheat per_user"
  },
  {
      "name": "cl_crosshair_drawoutline",
      "description": "Draws a black outline around the crosshair for better visibility",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_crosshair_outlinethickness",
      "description": "Set how thick you want your crosshair outline to draw (0-3)",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_crosshair_dynamic_splitdist",
      "description": "If using cl_crosshairstyle 2, this is the distance that the crosshair pips will split into 2. (default is 7)",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_crosshair_dynamic_splitalpha_innermod",
      "description": "If using cl_crosshairstyle 2, this is the alpha modification that will be used for the INNER crosshair pips once they've split. [0 - 1]",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_crosshair_dynamic_splitalpha_outermod",
      "description": "If using cl_crosshairstyle 2, this is the alpha modification that will be used for the OUTER crosshair pips once they've split. [0.3 - 1]",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_crosshair_dynamic_maxdist_splitratio",
      "description": "If using cl_crosshairstyle 2, this is the ratio used to determine how long the inner and outer xhair pips will be. [inner = cl_crosshairsize*(1-cl_crosshair_dynamic_maxdist_splitratio), outer = cl_crosshairsize*cl_crosshair_dynamic_maxdist_splitratio]  [0 - 1]",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_show_observer_crosshair",
      "description": "Show the crosshair of the player being observed. 0: off 1: friends and party 2: everyone",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_observed_bot_crosshair",
      "description": "Control the crosshair shown when observing a bot. 0: Show player crosshair. 1: Show player crosshair only when bot can be taken over, otherwise show default.. 2: Always show default crosshair for bots.",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_fixedcrosshairgap",
      "description": "For crosshair style 1: How big to make the gap between the pips in the fixed crosshair",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_crosshair_t",
      "description": "T style crosshair",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_show_quest_info",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_paintkit_override",
      "description": "",
      "flags": "clientdll cheat release"
  },
  {
      "name": "econ_enable_inventory_images",
      "description": "allow inventory image rendering for use by scaleform",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "econ_inventory_image_pinboard",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_ignore_campaign_completion_requirements",
      "description": "Ignores campaign progression requirements when granting quests.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_use_old_wearable_shoulddraw",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_chatfilters",
      "description": "Stores the chat filter settings",
      "flags": "clientdll archive"
  },
  {
      "name": "radio_icons_use_particles",
      "description": "0 = classic style, 1 = particles",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cq_netgraph",
      "description": "Display command queue statistics on the hud",
      "flags": "clientdll userinfo cheat"
  },
  {
      "name": "dota_toast_manager_override_duration",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "sticky_tooltips",
      "description": "Don't ever hide tooltips. Helpful when debugging complicated tooltip layouts.",
      "flags": "developmentonly missing0 clientdll"
  },
  {
      "name": "r_csgo_render_post_fxaa",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "csgo_render_post_colorcorrection",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "csgo_render_post_bloom",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "csgo_render_post_film_grain",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "csgo_render_dither_scale",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "csgo_render_post_mirror_horizontal",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "csgo_render_post_mirror_vertical",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "glow_outline_width",
      "description": "Width of glow outline effect in screen space.",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_bloom_tent_filter_radius",
      "description": "bloom mip up-sample filtering radius (using 3x3 tent filter, radius in mip level texels), 0.0 radius => box (2x2) filter with (fixed) 1.0 radius",
      "flags": "developmentonly clientdll cheat"
  },
  {
      "name": "r_depth_of_field",
      "description": "0 = off, 1 = enabled (high quality, circular bokeh, HDR)",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_dof2_radiusscale",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_dof2_maxblursize",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "mat_disable_normal_mapping",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_enable_tonemapping",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_enable_volume_fog",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_enable_cubemap_fog",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_enable_gradient_fog",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_shadows_debug",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_aoproxy_debug",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_aoproxy_enable",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_csgo_decal_debug",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_depth_prepass",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_depth_prepass_cull_threshold",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_depth_prepass_small_cull_threshold",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_depth_prepass_viewmodel",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_depth_prepass_players",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_depth_prepass_skybox_alpha_tested",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_render_opaque",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_render_overlays",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_render_decals",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_render_inferno_decals",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_render_decals_on_translucent",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_render_translucent",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_readonly_depth_stencil_enable",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_enable_glows",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_outline_glow_scaledenom",
      "description": "",
      "flags": "developmentonly clientdll cheat"
  },
  {
      "name": "r_csgo_enable_outlines",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_outline_width",
      "description": "",
      "flags": "developmentonly clientdll cheat"
  },
  {
      "name": "r_csgo_enable_translucent_screen_space",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_render_dynamic_objects",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_csgo_no_shader_resolve",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_radial_menu_icon_radius",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_radial_menu_tap_duration",
      "description": "If nothing in a radial menu is selected, and the button engaging the radial menu is released within this duration, fallback on the radial's tap functionality",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_radial_coyote_time",
      "description": "Selection lenience: How long in seconds the last selected radial segment is used if no segment is selected.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_scoreboard_survivors_always_on",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_dz_playagain_auto_spectate",
      "description": "Automatically switch to spectate mode after clicking the 'Play Again' button in end of match screen",
      "flags": "clientdll archive release"
  },
  {
      "name": "r_dac_disable_portrait_world_renderer",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "csgo_monitorgamma_tv_exp",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "csgo_monitorgamma",
      "description": "monitor gamma (typically 2.2 for CRT and 1.7 for LCD)",
      "flags": "clientdll archive"
  },
  {
      "name": "safezonex",
      "description": "The percentage of the screen width that is considered safe from overscan. Cannot result in a width less than the height.",
      "flags": "clientdll archive"
  },
  {
      "name": "safezoney",
      "description": "The percentage of the screen height that is considered safe from overscan",
      "flags": "clientdll archive"
  },
  {
      "name": "hud_scaling",
      "description": "Scales hud elements",
      "flags": "clientdll archive"
  },
  {
      "name": "spec_death_panel_replay_position",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_deathcampanel_position_dynamic",
      "description": "Turn on/off deathcam's kill panel dynamic Y movement",
      "flags": "clientdll archive"
  },
  {
      "name": "death_panel_delay_time",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "death_panel_travel_time",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "csgo_demoui_player_death_seek_lead_up_time",
      "description": "Seek to a moment this amount of seconds leading up to a player death instead of the exact time of the death.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "csgo_demoui_previous_event_search_offset",
      "description": "Do not consider events that happened in the last specified number of seconds when a user clicks 'previous' on the UI.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "csgo_demoui_playbeck_timestep_value",
      "description": "Number of seconds to seek when using TimeStep buttons on demo playback controller.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "hinttext_displaytime",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_fake_timeout",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_crosshair_friendly_warning",
      "description": "0: off, 1: on",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_ping_fade_deadzone",
      "description": "Distance from the crosshair over which the ping is completely invisible",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_ping_fade_distance",
      "description": "Distance from the crosshair over which the ping fades",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_playerspray_auto_apply",
      "description": "Automatically apply graffiti when graffiti menu closes",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_crosshair_sniper_show_normal_inaccuracy",
      "description": "Include standing inaccuracy when determining sniper crosshair blur",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_drawhud_specvote",
      "description": "1: default; 0: disables vote UI for spectators",
      "flags": "clientdll release"
  },
  {
      "name": "cl_disable_round_end_report",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "player_competitive_maplist_8_10_0_FB803604",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "player_competitive_maplist_2v2_10_0_DBAEB932",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "player_wargames_list2_10_0_DC207394",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "player_survival_list_10_0_303",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "cl_embedded_stream_audio_volume",
      "description": "Embedded stream audio volume",
      "flags": "missing0 clientdll archive"
  },
  {
      "name": "cl_embedded_stream_audio_volume_xmaster",
      "description": "Whether embedded stream audio volume gets multiplied by master volume",
      "flags": "missing0 clientdll archive"
  },
  {
      "name": "cl_embedded_stream_video_playing",
      "description": "Embedded stream video playing state",
      "flags": "developmentonly missing0 clientdll"
  },
  {
      "name": "cl_promoted_settings_acknowledged",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "cl_mute_player_after_reporting_abuse",
      "description": "Mute players reported for abuse automatically.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_inventory_saved_filter2",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_inventory_saved_sort2",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_inventory_debug_tooltip",
      "description": "",
      "flags": "clientdll release"
  },
  {
      "name": "cl_access_all_missions",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "ui_lobby_draft_enabled",
      "description": "",
      "flags": "clientdll release"
  },
  {
      "name": "gotv_theater_container",
      "description": "Enables GOTV theater mode for the specified container, setting it to 'live' will play top live matches",
      "flags": "clientdll release"
  },
  {
      "name": "cl_spec_stats",
      "description": "",
      "flags": "clientdll release"
  },
  {
      "name": "cl_server_graphic1_enable",
      "description": "When enabled, 360x60 (<16kb) image file will be displayed to on-server spectators.",
      "flags": "clientdll release"
  },
  {
      "name": "cl_server_graphic2_enable",
      "description": "When enabled, 220x45 (<16kb) image file will be displayed to on-server spectators.",
      "flags": "clientdll release"
  },
  {
      "name": "cl_accountprivacysetting1",
      "description": "",
      "flags": "missing0 clientdll release"
  },
  {
      "name": "partybrowser_throttle_data",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "partybrowser_timeout",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_invites_only_friends",
      "description": "If turned on, will ignore in-game invites from recent teammates or other non-friends",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_invites_only_mainmenu",
      "description": "If turned on, will ignore all invites when user is playing a match",
      "flags": "clientdll archive release"
  },
  {
      "name": "cachedvalue_count_partybrowser",
      "description": "",
      "flags": "missing0 clientdll archive"
  },
  {
      "name": "cl_voip_lobby_audio_volume",
      "description": "Lobby voip stream audio volume",
      "flags": "developmentonly missing0 clientdll"
  },
  {
      "name": "ui_nearbylobbies_filter3",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_prime",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_mode_listen",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_mode_official_v20",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_maps_official_casual",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_maps_official_deathmatch",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_maps_listen_competitive",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_maps_listen_scrimcomp2v2",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_maps_listen_skirmish",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_maps_listen_casual",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_maps_listen_deathmatch",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_custom_preset",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_flags_listen_scrimcomp2v2",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_flags_listen_skirmish",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_flags_listen_casual",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_flags_listen_survival",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_flags_listen_cooperative",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_flags_listen_competitive",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_flags_listen_deathmatch",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_flags_official_scrimcomp2v2",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_flags_official_skirmish",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_flags_official_casual",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_flags_official_survival",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_flags_official_cooperative",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_flags_official_competitive",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_flags_official_deathmatch",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_directchallengekey",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_maps_workshop",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_vanitysetting_team",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_show_unlock_competitive_alert",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_vanitysetting_loadoutslot_ct",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_vanitysetting_loadoutslot_t",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_news_last_read_link",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_warmup_map_name",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_playsettings_survival_solo",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_inventorysettings_recently_acknowledged",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "player_botdifflast_s",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_deepstats_toplevel_mode",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_deepstats_radio_heat_tab",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "ui_deepstats_radio_heat_team",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "snd_roundstart_volume",
      "description": "Volume of round start music",
      "flags": "clientdll archive release"
  },
  {
      "name": "snd_roundaction_volume",
      "description": "Volume of round action music",
      "flags": "clientdll archive release"
  },
  {
      "name": "snd_roundend_volume",
      "description": "Volume of round end music",
      "flags": "clientdll archive release"
  },
  {
      "name": "snd_mapobjective_volume",
      "description": "Volume of map objective music",
      "flags": "clientdll archive release"
  },
  {
      "name": "snd_tensecondwarning_volume",
      "description": "Volume of ten-second warning music",
      "flags": "clientdll archive release"
  },
  {
      "name": "snd_deathcamera_volume",
      "description": "Volume of death camera music",
      "flags": "clientdll archive release"
  },
  {
      "name": "snd_mvp_volume",
      "description": "Volume of round MVP music",
      "flags": "clientdll archive release"
  },
  {
      "name": "voice_scale",
      "description": "Volume of incoming VOIP",
      "flags": "clientdll archive release"
  },
  {
      "name": "player_nevershow_communityservermessage",
      "description": "",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "ui_steam_overlay_notification_position",
      "description": "Steam overlay notification position",
      "flags": "clientdll archive"
  },
  {
      "name": "ui_steam_overlay_notification_position_horz",
      "description": "Steam overlay notification position horizontal offset",
      "flags": "clientdll archive"
  },
  {
      "name": "ui_steam_overlay_notification_position_vert",
      "description": "Steam overlay notification position vertical offset",
      "flags": "clientdll archive"
  },
  {
      "name": "connect_lobby",
      "description": "Sets the lobby ID to connect to on start.",
      "flags": "developmentonly missing0 clientdll"
  },
  {
      "name": "trusted_launch",
      "description": "Trusted launch status",
      "flags": "clientdll archive"
  },
  {
      "name": "snd_headphone_eq",
      "description": "Select Headphone EQ Preset",
      "flags": "clientdll archive clientcmd_can_execute"
  },
  {
      "name": "cl_hide_avatar_images",
      "description": "Hide avatar images for other players. .   0 - Off..       1 - Block All.  2 - Block all but friends",
      "flags": "clientdll archive"
  },
  {
      "name": "cl_show_equipped_character_for_player_avatars",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "cl_buywheel_nomousecentering",
      "description": "Set non-zero to prevent buy wheel from centering mouse into the wheel origin",
      "flags": "clientdll archive per_user release"
  },
  {
      "name": "cl_buywheel_nonumberpurchasing",
      "description": "Set non-zero to prevent buy wheel from purchasing via number keys",
      "flags": "clientdll archive per_user release"
  },
  {
      "name": "cl_buywheel_donate_key",
      "description": "Set the key to use for donation in the buy menu. 0: Left Control; 1: Left Alt; 2: Left Shift.",
      "flags": "clientdll archive per_user release"
  },
  {
      "name": "cl_compass_enabled",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_inventory_radial_immediate_select",
      "description": "In inventory selection radials. Select weapons the moment the cursor highlights them. Otherwise, only select the selected item on exit.",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_inventory_radial_tap_to_cycle",
      "description": "In inventory selection radials. Select weapons the moment the cursor highlights them. Otherwise, only select the selected item on exit.",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_itemimages_dynamically_generated",
      "description": "2: use render-targets, fallback to cache and disk; 1: no render targets, but use cache and fallback to disk; 0: disk assets only",
      "flags": "clientdll archive release"
  },
  {
      "name": "c_csgo_itempreview_demo_scene",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "@panorama_3dpanel_camera_preset_blend_time",
      "description": "time to blend between camera presets",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "@panorama_3dpanel_anim_fadeinout_time_scale",
      "description": "temp scale factor for animation fade in/out time",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "@panorama_3dpanel_anims_pivotlock",
      "description": "default true.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "@panorama_3dpanel_loadout_rotate_scale",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "@panorama_3dpanel_loadout_rotate_drag",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "@panorama_3dpanel_loadout_rotate_grab_scale",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "@panorama_3dpanel_loadout_rotate_frametime_multiplier",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "@panorama_3dpanel_camera_rotate_azimuth_scale",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "@panorama_3dpanel_camera_rotate_altitude_scale",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "@panorama_3dpanel_light_rotate_azimuth_scale",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "@panorama_3dpanel_light_rotate_altitude_scale",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "@panorama_3dpanel_light_move_scale",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "@panorama_3dpanel_camera_inout_scale_kb",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "@panorama_3dpanel_camera_inout_scale",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "@panorama_3dpanel_camera_lookat_scale",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "panorama_light_inout_scale",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "@panorama_3dpanel_debuginfo_manifest",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "@panorama_3dpanel_debuginfo_item",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "@panorama_3dpanel_debuginfo_cam",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "@panorama_3dpanel_debuginfo_paused",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "@panorama_3dpanel_debuginfo_player",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "@panorama_3dpanel_debuginfo_anim",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "@panorama_3dpanel_camera_blend_mode",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "csgo_map_preview_scale",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "mapoverview_allow_client_draw",
      "description": "Allow a client to draw on the map overview",
      "flags": "clientdll release"
  },
  {
      "name": "mapoverview_icon_scale",
      "description": "Sets the icon scale multiplier for the overview map. Valid values are 0.5 to 3.0.",
      "flags": "clientdll archive release"
  },
  {
      "name": "csgo_disable_preview_maps",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "csgo_debug_preview_maps",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_map_preview_debug_jitter",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_min_movie_time",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_min_china_movie_time",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "csgo_vanity_defer_teleport",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_quickinventory_lastinv",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_quickinventory_line_update_speed",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_quickinventory_filename",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tab",
      "description": "",
      "flags": "clientdll release"
  },
  {
      "name": "cl_radial_radio_tab_0_text_1",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tab_0_text_2",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tab_0_text_3",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tab_0_text_4",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tab_0_text_5",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tab_0_text_6",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tab_0_text_7",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tab_0_text_8",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tab_1_text_1",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tab_1_text_2",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tab_1_text_3",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tab_1_text_4",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tab_1_text_5",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tab_1_text_6",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tab_1_text_7",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tab_1_text_8",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tab_2_text_1",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tab_2_text_2",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tab_2_text_3",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tab_2_text_4",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tab_2_text_5",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tab_2_text_6",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tab_2_text_7",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tab_2_text_8",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_version_reset",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radial_radio_tap_to_ping",
      "description": "When tapping the radial radio button, leave a ping if nothing is selected within the time in seconds set in cl_radial_menu_tap_duration",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radialmenu_deadzone_size",
      "description": "",
      "flags": "clientdll release"
  },
  {
      "name": "cl_radialmenu_deadzone_size_joystick",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "clTaserShakeFreqMin",
      "description": "how often the shake is applied (min time)",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "clTaserShakeFreqMax",
      "description": "how often the shake is applied (max time)",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "clTaserShakeTimeTotal",
      "description": "time the taser shake is applied.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "viewmodel_presetpos",
      "description": "1:\"Desktop\", 2:\"Couch\", 3:\"Classic\"",
      "flags": "clientdll archive"
  },
  {
      "name": "crosshair",
      "description": "",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "lockMoveControllerRet",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "hud_showtargetid",
      "description": "Enables display of target names",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_drawhud_force_teamid_overhead",
      "description": "0: default; 1: draw teamid even if hud disabled; -1: force no teamid",
      "flags": "clientdll release"
  },
  {
      "name": "cl_versus_intro",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_teamid_overhead_mode",
      "description": "Always show team id over teammates. 1 = pips; 2 = pips, name, and equipment",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_teamid_overhead_colors_show",
      "description": "Show team overhead id in teammate color",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_drawhud_force_deathnotices",
      "description": "0: default; 1: draw deathnotices even if hud disabled; -1: force no deathnotices",
      "flags": "clientdll release"
  },
  {
      "name": "cl_showloadout",
      "description": "Toggles display of current loadout.",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_spec_mode",
      "description": "Saves the last viewed spectator mode for use next time we start to spectate",
      "flags": "clientdll archive userinfo per_user server_can_execute"
  },
  {
      "name": "cl_draw_only_deathnotices",
      "description": "For drawing only the crosshair and death notices (used for moviemaking)",
      "flags": "clientdll release"
  },
  {
      "name": "cl_radar_square_with_scoreboard",
      "description": "If set, the radar will toggle to square when the scoreboard is visible.",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radar_rotate",
      "description": "1",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radar_scale",
      "description": "Sets the radar scale. Valid values are 0.25 to 1.0.",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radar_always_centered",
      "description": "If set to 0, the radar is maximally used. Otherwise the player is always centered, even at map extents.",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_radar_icon_scale_min",
      "description": "Sets the minimum icon scale. Valid values are 0.4 to 1.25.",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_drawhud_force_radar",
      "description": "0: default; 1: draw radar even if hud disabled; -1: force no radar",
      "flags": "clientdll release"
  },
  {
      "name": "cl_radar_fast_transforms",
      "description": "Faster way of placing icons on the mini map.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_spec_swapplayersides",
      "description": "Toggle set the player names and team names to the opposite side in which they are are on the spectator panel.",
      "flags": "clientdll release"
  },
  {
      "name": "default_fov",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "player_teamplayedlast",
      "description": "",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "voice_vox",
      "description": "Voice chat uses a vox-style always on",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "voice_vox_current_peak",
      "description": "Current peak value (out of 64k) of the incoming voice stream",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_autobuy",
      "description": "The order in which autobuy will attempt to purchase items",
      "flags": "clientdll release"
  },
  {
      "name": "cl_rebuy",
      "description": "The order in which rebuy will attempt to repurchase items",
      "flags": "clientdll release"
  },
  {
      "name": "spec_replay_colorcorrection",
      "description": "Amount of color correction in deathcam replay",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_instant_death_anim",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_disable_deathcam_audio_mix_fade_out",
      "description": "When set to true, disables audio being silenced while the death cam fades out.",
      "flags": "clientdll release"
  },
  {
      "name": "cl_deathcam_audio_mix_phase1_fade_time",
      "description": "Sets the amount of time we fade out over.",
      "flags": "clientdll release"
  },
  {
      "name": "cl_deathcam_audio_mix_phase1_fade_amount",
      "description": "Sets the amount of ducking to do on death cam fade out. When set to 1, full DeathFadeLayer is applied.",
      "flags": "clientdll release"
  },
  {
      "name": "cl_deathcam_audio_mix_phase2_fade_time",
      "description": "Sets the amount of time we fade out over.",
      "flags": "clientdll release"
  },
  {
      "name": "cl_deathcam_audio_mix_phase2_fade_amount",
      "description": "Sets the amount of ducking to do on death cam fade out. When set to 1, full DeathFadeLayer is applied.",
      "flags": "clientdll release"
  },
  {
      "name": "cl_scoreboard_mouse_enable_binding",
      "description": "Name of the binding to enable mouse selection in the scoreboard",
      "flags": "clientdll archive"
  },
  {
      "name": "snd_mute_mvp_music_live_players",
      "description": "If set, MVP music is muted if players from both teams are still alive.",
      "flags": "clientdll archive release"
  },
  {
      "name": "force_spectator_only_tools",
      "description": "",
      "flags": "developmentonly missing0 clientdll cheat"
  },
  {
      "name": "cl_debug_client_gamestats",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "steamworks_sessionid_lifetime_client",
      "description": "The full client session ID for the new steamworks gamestats.",
      "flags": "developmentonly missing0 clientdll"
  },
  {
      "name": "cl_debug_round_stat_submission",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_csgo_shoot_debugvis_show_rdp",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_csgo_shoot_debugvis_rdp_text_x",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_csgo_shoot_debugvis_rdp_text_l",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_csgo_shoot_debugvis_show_los",
      "description": "Show line of last shot.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "net_client_steamdatagram_ping_measurement_direct_only",
      "description": "Comma-separated list of data center codes where ping measurement should be based on direct ping only, not best triangulated ping.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "net_client_steamdatagram_enable_override",
      "description": "0: Use connect method requested by GC.  >0: Always use SDR if possible.  <0: Always use direct UDP if possible",
      "flags": "clientdll release"
  },
  {
      "name": "cl_show_matchmaking_stat_spew",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "lobby_stats_fake",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "lobby_gamesearch_fake",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_session",
      "description": "",
      "flags": "developmentonly missing0 server_can_execute"
  },
  {
      "name": "tv_spectator_port_offset",
      "description": "",
      "flags": "clientdll release"
  },
  {
      "name": "cl_player_visibility_stencil_bloat_amount_box",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_player_visibility_stencil_bloat_amount_ellipsoid",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_player_visiblity_show_stencil_proxy",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_player_visiblity_stencil_proxy_min_dist",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_player_visibility_stencil_proxy_min_dist_box",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_player_visibility_stencil_proxy_type",
      "description": "0 - box, 1 - dodecahedron",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_player_visibility_near",
      "description": "cull characters nearer than this",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_player_visibility_far",
      "description": "distance at which proxy scale is maximized",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_player_visibility_far_scale",
      "description": "proxy scale multiplier at max dist (is 1.0 at mindist)",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_track_aim_head_threshold",
      "description": "Notify render device when rendering a frame with enemy head within threshold distance",
      "flags": "clientdll release"
  },
  {
      "name": "cl_track_aim_head_log_closest",
      "description": "Log when closest distance to head was reached and what it was",
      "flags": "clientdll release"
  },
  {
      "name": "cl_track_render_eye_angles",
      "description": "Spew render eye angles",
      "flags": "clientdll release"
  },
  {
      "name": "cl_lagcompensation_test_target",
      "description": "Player whose head is tracked to test lag compensation.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_lagcompensation_test_auto_target",
      "description": "Auto-pick value of cl_lagcompensation_test_target.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "smoke_volume_lod_ratio_change",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_clutch_mode",
      "description": "Silence voice and other distracting sounds until the end of round or next death.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_mute_enemy_team",
      "description": "Block all communication from players on the enemy team.",
      "flags": "clientdll archive"
  },
  {
      "name": "cl_mute_all_but_friends_and_party",
      "description": "Only allow communication from friends and matchmaking party members. Set to 1 to apply the in non-competitive game modes. Set to 2 will apply the setting in all modes..",
      "flags": "clientdll archive"
  },
  {
      "name": "r_drawdetailprops",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_detail_lerp_znormal",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_detailprop_lod_dist",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_detailprop_fade_dist",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_detailprop_force_probe",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "damage_impact_heavy",
      "description": "Damage ABOVE this value is considered heavy damage",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "damage_impact_medium",
      "description": "Damage BELOW this value is considered light damage",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "directional_blood_impacts",
      "description": "1 means we calculate the direction outward from the hit players body in relation to local client",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "steam_controller_haptics",
      "description": "",
      "flags": "clientdll release"
  },
  {
      "name": "steamworks_sessionid_client",
      "description": "The client session ID for the new steamworks gamestats.",
      "flags": "missing0 clientdll userinfo"
  },
  {
      "name": "r_drawchickens",
      "description": "Render chickens",
      "flags": "clientdll cheat"
  },
  {
      "name": "inferno_dlight_spacing",
      "description": "Inferno dlights are at least this far apart",
      "flags": "clientdll cheat"
  },
  {
      "name": "inferno_dlights",
      "description": "Min FPS at which molotov dlights will be created",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "inferno_fire",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "Inferno_concav_plane_threshold",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "inferno_batched_rays",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "snd_mainmenu_music_break_time_min",
      "description": "Minimum amount of time to pause between playing main menu music",
      "flags": "clientdll cheat"
  },
  {
      "name": "snd_mainmenu_music_break_time_max",
      "description": "Maximum amount of time to pause between playing main menu music",
      "flags": "clientdll cheat"
  },
  {
      "name": "snd_menumusic_volume",
      "description": "Volume of main menu music",
      "flags": "clientdll archive release"
  },
  {
      "name": "snd_othermusic_volume",
      "description": "Volume of unclassified music",
      "flags": "clientdll archive release"
  },
  {
      "name": "r_drawdevvisualizers",
      "description": "Render dev visualizers",
      "flags": "clientdll cheat"
  },
  {
      "name": "fog_start",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "fog_end",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "fog_startskybox",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "fog_endskybox",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "fog_maxdensityskybox",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "fog_colorskybox",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "fog_enableskybox",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "fog_maxdensity",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "fog_hdrcolorscaleskybox",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "voice_modenable",
      "description": "Enable/disable voice in this mod.",
      "flags": "clientdll archive clientcmd_can_execute"
  },
  {
      "name": "voice_clientdebug",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "voice_all_icons",
      "description": "Draw all players' voice icons",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "hud_fastswitch",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "cc_linger_time",
      "description": "Close caption linger time.",
      "flags": "clientdll archive"
  },
  {
      "name": "cc_delay_time",
      "description": "Close caption delay before showing caption.",
      "flags": "clientdll archive"
  },
  {
      "name": "cc_captiontrace",
      "description": "Show missing closecaptions (0 = no, 1 = devconsole, 2 = show in hud)",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cc_log",
      "description": "Log caption names and contents (0 = off, 1 = found captions, 2 = unfound captions, 3 = all captions)",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cc_subtitles",
      "description": "If set, don't show sound effect captions, just voice overs (i.e., won't help hearing impaired players).",
      "flags": "clientdll archive"
  },
  {
      "name": "english",
      "description": "If set to 1, running the english language set of assets.",
      "flags": "clientdll userinfo"
  },
  {
      "name": "cc_vr_debug",
      "description": "Debug visualization of VR closed caption placement",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cc_vr_depth_test",
      "description": "Have closed caption Panorama panel perform depth testing against the scene",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cc_vr_forward_offset",
      "description": "Subtitle offset distance (forward, in front of player)",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cc_vr_vertical_offset",
      "description": "Subtitle vertical offset distance (positive is up)",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cc_vr_epsilon",
      "description": "Epsilon to trigger movement of VR subtitle panel in world space",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cc_vr_caption_catchup_interval",
      "description": "Duration it takes for attached caption to ideal point",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cc_vr_font_size",
      "description": "0 = small, 1 = med (default), 2 = large",
      "flags": "clientdll archive"
  },
  {
      "name": "cc_vr_caption_speed",
      "description": "0 = slow, 1 = medium (default), 2 = fast",
      "flags": "clientdll archive"
  },
  {
      "name": "cc_spectator_only",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "cc_vr_width",
      "description": "0 = narrow, 1 = med (default), 2 = wide",
      "flags": "clientdll archive"
  },
  {
      "name": "cc_lang",
      "description": "Current close caption language (emtpy = use game UI language)",
      "flags": "clientdll archive"
  },
  {
      "name": "r_RainParticleDensity",
      "description": "Density of Particle Rain 0-1",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_RainAllowInSplitScreen",
      "description": "Allows rain in splitscreen",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_debug_precipitation",
      "description": "Show precipitation volumes",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_decals",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_fasttempentcollision",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_tracer_whiz_distance",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_tracer_whiz_infront_distance",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "fx_drawmetalspark",
      "description": "Draw metal spark effects.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_playerspraydisable",
      "description": "Disable player sprays.",
      "flags": "clientdll archive"
  },
  {
      "name": "spec_replay_outline",
      "description": "Enable outline selecting victim in hltv replay: 0 - none; 1 - ouline YOU; 2 - outline YOU, with red ragdoll outline; 3 - normal spectator outlines",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "spec_glow_silent_factor",
      "description": "Lurking player xray glow scaling.",
      "flags": "clientdll release"
  },
  {
      "name": "spec_glow_spike_factor",
      "description": "Noisy player xray glow scaling (pop when noise is made).  Make >1 to add a 'spike' to noise-making players",
      "flags": "clientdll release"
  },
  {
      "name": "spec_glow_full_time",
      "description": "Noisy players stay at full brightness for this long.",
      "flags": "clientdll release"
  },
  {
      "name": "spec_glow_decay_time",
      "description": "Time to decay glow from 1.0 to spec_glow_silent_factor after spec_glow_full_time.",
      "flags": "clientdll release"
  },
  {
      "name": "spec_glow_spike_time",
      "description": "Time for noisy player glow 'spike' to show that they made noise very recently.",
      "flags": "clientdll release"
  },
  {
      "name": "spec_show_xray",
      "description": "If set to 1, you can see player outlines and name IDs through walls - who you can see depends on your team and mode",
      "flags": "clientdll archive release"
  },
  {
      "name": "r_drawcsplayers",
      "description": "Render CS players",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_random_taser_bone_y",
      "description": "The Y position used for the random taser force.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_random_taser_force_y",
      "description": "The Y position used for the random taser force.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_random_taser_power",
      "description": "Power used when applying the taser effect.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_ragdoll_workaround_threshold",
      "description": "Mainly cosmetic, client-only effect: when client doesn't know the last position of another player that spawns a ragdoll, the ragdoll creation is simplified and ragdoll is created in the right place. If you increase this significantly, ragdoll positions on your client may be dramatically wrong, but it won't affect other clients",
      "flags": "clientdll release"
  },
  {
      "name": "cl_ragdoll_physics_enable",
      "description": "Enable/disable ragdoll physics.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_show_head_trajectory",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_show_camera_position",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "sv_smoke_volume_blind_start",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_crosshair_sniper_width",
      "description": "If >1 sniper scope cross lines gain extra width (1 for single-pixel hairline)",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "sv_show_ragdoll_playernames",
      "description": "",
      "flags": "clientdll replicated release missing3"
  },
  {
      "name": "debug_entity_outline_highlight",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_player_lighting_origin_offset",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_display_player_visibilty",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_display_flashbang_values",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_color",
      "description": "Preferred teammate color",
      "flags": "clientdll archive userinfo"
  },
  {
      "name": "cl_borrow_music_from_player_slot",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "spec_xray_dropped_defusekits",
      "description": "Whether to X-ray dropped defuse kits.",
      "flags": "clientdll release"
  },
  {
      "name": "spec_xray_dropped_unoccluded",
      "description": "Whether to always X-ray dropped c4 and defuse kits.",
      "flags": "clientdll release"
  },
  {
      "name": "cl_spec_show_bindings",
      "description": "Toggle the visibility of the spectator bindings.",
      "flags": "clientdll release clientcmd_can_execute"
  },
  {
      "name": "cl_minmodels",
      "description": "Uses one player model for each team.  Set this value to -1 to allow unapproved / in progress player models to be used.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_min_ct",
      "description": "Controls which CT model is used when cl_minmodels is set to 1.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_min_t",
      "description": "Controls which Terrorist model is used when cl_minmodels is set to 1.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_teamid_overhead_maxdist",
      "description": "max distance at which the overhead team id icons will show",
      "flags": "clientdll cheat per_user"
  },
  {
      "name": "cl_teamid_overhead_maxdist_spec",
      "description": "max distance at which the overhead team id icons will show when a spectator",
      "flags": "clientdll cheat per_user"
  },
  {
      "name": "cl_show_equipment_value",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_show_clan_in_death_notice",
      "description": "Is set, the clan name will show next to player names in the death notices.",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_dm_buyrandomweapons",
      "description": "Player will automatically receive a random weapon on spawn in deathmatch if this is set to 1 (otherwise, they will receive the last weapon)",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_hud_color",
      "description": "0 = default, 1 = light blue, 2 = orange, 3 = green, 4 = purple, 5 = white.",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_hud_radar_scale",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_use_entity_as_targetid",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_dangerzone_approaching_sound_radius",
      "description": "",
      "flags": "clientdll cheat release"
  },
  {
      "name": "cl_dangerzone_sound_volume",
      "description": "",
      "flags": "clientdll cheat release"
  },
  {
      "name": "cl_dangerzone_moving_sound_volume",
      "description": "",
      "flags": "clientdll cheat release"
  },
  {
      "name": "cl_weapon_pickup_lerp",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "character_patches",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_firstperson_legs",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_smoke_player_particle_effect",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_weapon_clip_thinwalls",
      "description": "",
      "flags": "clientdll replicated cheat"
  },
  {
      "name": "cl_weapon_clip_thinwalls_debug",
      "description": "",
      "flags": "clientdll replicated cheat"
  },
  {
      "name": "cl_weapon_clip_thinwalls_lock",
      "description": "",
      "flags": "clientdll replicated cheat"
  },
  {
      "name": "thirdperson_lockcamera",
      "description": "",
      "flags": "clientdll replicated cheat"
  },
  {
      "name": "cl_player_proximity_debug",
      "description": "",
      "flags": "clientdll replicated cheat"
  },
  {
      "name": "cl_view_near_hud_player_eye_dist",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_view_near_other_player_eye_dist",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "clDrawTargetIDTrace",
      "description": "visualizing line trace for target ID",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "m_yaw",
      "description": "Mouse yaw factor.",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "m_pitch",
      "description": "Mouse pitch factor.",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "joy_display_input",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "dev_create_sensitivity_report",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_vprof_scope_entity_gamephys",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_propsmaxdist",
      "description": "Maximum visible distance",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_predictweapons",
      "description": "Perform client side prediction of weapon effects.",
      "flags": "clientdll userinfo"
  },
  {
      "name": "cl_lagcompensation",
      "description": "Perform server side lag compensation of weapon firing events.",
      "flags": "clientdll userinfo"
  },
  {
      "name": "cl_showerror",
      "description": "Show prediction errors, 2 for above plus detailed field deltas, 3 to filter out serverside known prediction errors, -entindex for specific entity.",
      "flags": "clientdll release"
  },
  {
      "name": "cl_error_report_time",
      "description": "Minimum time in seconds that must elapse before printing prediction error summary. 0 to disable.",
      "flags": "clientdll release"
  },
  {
      "name": "cl_pdump",
      "description": "Dump info about this entity to screen.",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_pclass",
      "description": "Dump entity by prediction classname.",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_pred_optimize",
      "description": "Optimize for not copying data if didn't receive a network update (1), and also for not repredicting if there were no errors (2).",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_pred_parallel_postnetwork",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_ragdoll_lru_debug",
      "description": "",
      "flags": "clientdll replicated cheat"
  },
  {
      "name": "cl_ragdoll_limit",
      "description": "Maximum number of ragdolls to show (-1 disables limit)",
      "flags": "clientdll archive"
  },
  {
      "name": "snd_sound_areas_debug",
      "description": "",
      "flags": "clientdll replicated cheat"
  },
  {
      "name": "snd_sound_areas_debug_interval",
      "description": "",
      "flags": "clientdll replicated cheat"
  },
  {
      "name": "cl_snd_new_visualize",
      "description": "Displays soundevent name played at it's 3d position",
      "flags": "clientdll cheat"
  },
  {
      "name": "viewmodel_fov",
      "description": "Viewmodel FOV",
      "flags": "clientdll archive"
  },
  {
      "name": "cl_leveloverview",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_mapextents",
      "description": "Set the max dimension for the map.  This determines the far clipping plane",
      "flags": "clientdll cheat"
  },
  {
      "name": "gl_clear",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "gl_clear_randomcolor",
      "description": "Clear the back buffer to random colors every frame. Helps spot open seams in geometry.",
      "flags": "clientdll cheat"
  },
  {
      "name": "gl_clear_gray",
      "description": "Clear the back buffer to gray every frame.",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_nearz",
      "description": "Override the near clipping plane. -1 means use the default.",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_farz",
      "description": "Override the far clipping plane. -1 means to use the value in env_fog_controller.",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_demoviewoverride",
      "description": "Override view during demo playback",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_demo_view_offset_left",
      "description": "View offset during demo playback (+/- 1.25 is a good default for human average left/right eye offset)",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_lock_camera",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "_fov",
      "description": "Automates fov command to server.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_demo_steadycam_enable",
      "description": "Stabilize camera orientation/position during demo playback.  1 == remove roll, 2 == steadycam",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_demo_steadycam_radius",
      "description": "if camera moves this much from last anchor update anchor",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_demo_steadycam_deflection",
      "description": "if camera orientation changes this much update orientation",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_demo_steadycam_blendframes",
      "description": "blend over this many frames",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "fade_debug_splitscreen_slot",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "shake_show",
      "description": "Displays a list of the active screen shakes.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_screen_size_expansion",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "c_thirdpersonshoulderaimdist",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "joy_name",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "joy_advanced",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "joy_advaxisx",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "joy_advaxisy",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "joy_advaxisz",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "joy_advaxisr",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "joy_advaxisu",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "joy_advaxisv",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "joy_sidesensitivity",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "joy_pitchsensitivity",
      "description": "",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "joy_yawsensitivity",
      "description": "",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "joy_movement_stick",
      "description": "Which stick controls movement (0 is left stick)",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "joy_xcontroller_cfg_loaded",
      "description": "If 0, the 360controller.cfg file will be executed on startup & option changes.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_mouselook",
      "description": "Set to 1 to use mouse for look, 0 for keyboard look. Cannot be set while connected to a server.",
      "flags": "notconnected clientdll archive userinfo per_user"
  },
  {
      "name": "cl_drawhud",
      "description": "Enable the rendering of the hud",
      "flags": "clientdll cheat"
  },
  {
      "name": "fov_desired",
      "description": "Sets the base field-of-view.",
      "flags": "clientdll archive userinfo"
  },
  {
      "name": "cl_glow_item_far_r",
      "description": "",
      "flags": "clientdll release"
  },
  {
      "name": "cl_glow_item_far_g",
      "description": "",
      "flags": "clientdll release"
  },
  {
      "name": "cl_glow_item_far_b",
      "description": "",
      "flags": "clientdll release"
  },
  {
      "name": "cl_glow_brightness",
      "description": "Brightness of player halos",
      "flags": "clientdll cheat"
  },
  {
      "name": "mat_colcorrection_editor",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "compositematerial_showdebugwindow",
      "description": "Source2/Composite Material Debug",
      "flags": "developmentonly clientdll archive replicated cheat menubar_item"
  },
  {
      "name": "r_decals_default_start_fade",
      "description": "",
      "flags": "developmentonly clientdll replicated"
  },
  {
      "name": "r_decals_default_fade_duration",
      "description": "",
      "flags": "developmentonly clientdll replicated"
  },
  {
      "name": "r_flashlightlockposition",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_flashlightfov",
      "description": "",
      "flags": "clientdll replicated cheat"
  },
  {
      "name": "r_flashlightoffsetright",
      "description": "",
      "flags": "clientdll replicated cheat"
  },
  {
      "name": "r_flashlightoffsetup",
      "description": "",
      "flags": "clientdll replicated cheat"
  },
  {
      "name": "r_flashlightoffsetforward",
      "description": "",
      "flags": "clientdll replicated cheat"
  },
  {
      "name": "r_flashlightnear",
      "description": "",
      "flags": "clientdll replicated cheat"
  },
  {
      "name": "r_flashlightfar",
      "description": "",
      "flags": "clientdll replicated cheat"
  },
  {
      "name": "r_flashlightconstant",
      "description": "",
      "flags": "clientdll replicated cheat"
  },
  {
      "name": "r_flashlightquadratic",
      "description": "",
      "flags": "clientdll replicated cheat"
  },
  {
      "name": "r_flashlightbrightness",
      "description": "",
      "flags": "clientdll replicated cheat"
  },
  {
      "name": "r_flashlightvisualizetrace",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_flashlightambient",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_flashlightshadowatten",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_flashlightladderdist",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_flashlightlinear",
      "description": "",
      "flags": "clientdll replicated cheat"
  },
  {
      "name": "r_muzzleflashlinear",
      "description": "",
      "flags": "clientdll replicated cheat"
  },
  {
      "name": "r_muzzleflashbrightness",
      "description": "",
      "flags": "clientdll replicated cheat"
  },
  {
      "name": "r_flashlightnearoffsetscale",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_flashlighttracedistcutoff",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_flashlightbacktraceoffset",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_flashlighttracedistwatercutoff",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "muzzle_flash_debug",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_flashlightmuzzleflashfov",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_async_client_shatter",
      "description": "spawn client glass shards asynchronously during demos or when remotely connected.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_impacts_alt_orientation",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_impacts_decal_grazing_incidence_cutoff",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_impacts_decal_grazing_incidence_variance",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_impact_ricochet_chance",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_drawtracers",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_drawtracers_firstperson",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_show_splashes",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "glow_use_tolerance",
      "description": "",
      "flags": "clientdll replicated cheat"
  },
  {
      "name": "spec_autodirector",
      "description": "Auto-director chooses best view modes while spectating",
      "flags": "developmentonly clientdll clientcmd_can_execute"
  },
  {
      "name": "locator_topdown_style",
      "description": "Topdown games set this to handle distance and offscreen location differently.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "hidehud",
      "description": "bitmask: 1=weapon selection, 2=flashlight, 4=all, 8=health, 16=player dead, 32=needssuit, 64=misc, 128=chat, 256=crosshair, 512=vehicle crosshair, 1024=in vehicle",
      "flags": "clientdll cheat"
  },
  {
      "name": "joy_vehicle_turn_lowend",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "joy_vehicle_turn_lowmap",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "joy_sensitive_step0",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "joy_sensitive_step1",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "joy_sensitive_step2",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "joy_lowend",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "joy_lowmap",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "joy_accelscale",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "joy_accelmax",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "joy_pegged",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "joy_virtual_peg",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "joy_accel_filter",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "joy_response_look",
      "description": "",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "joy_response_move",
      "description": "",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "joy_response_move_vehicle",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "joy_circle_correct_mode",
      "description": "",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "joy_circle_correct_mode_vehicle",
      "description": "",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "mouse_inverty",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "joy_pitch_sensitivity",
      "description": "",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "joy_yaw_sensitivity",
      "description": "",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "joy_forward_sensitivity",
      "description": "",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "joy_side_sensitivity",
      "description": "",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "joy_autosprint",
      "description": "Automatically sprint when moving with an analog joystick",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "sensitivity",
      "description": "Mouse sensitivity.",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "mat_depthbias_shadowmap",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_globallight_orig_calc_frustum",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_globallight_world_bottom_height",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_globallight_world_top_height",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_globallight_use_alt_focus_region",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_globallight_slope_scale_depth_bias",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_globallight_depth_bias",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_globallight_use_shaadow_near_offset",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_cameraoverride_fade_in_amount",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_cameraoverride_shadow_depth_bias",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_cameraoverride_shadow_end",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_globallight_use_optimized_calc_frustum",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "fish_debug",
      "description": "Show debug info for fish",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_monitor_3dskybox",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "gameinstructor_verbose",
      "description": "Set to 1 for standard debugging or 2 (in combo with gameinstructor_verbose_lesson) to show update actions.",
      "flags": "clientdll cheat"
  },
  {
      "name": "gameinstructor_verbose_lesson",
      "description": "Display more verbose information for lessons have this name.",
      "flags": "clientdll cheat"
  },
  {
      "name": "gameinstructor_find_errors",
      "description": "Set to 1 and the game instructor will run EVERY scripted command to uncover errors.",
      "flags": "clientdll cheat"
  },
  {
      "name": "gameinstructor_enable",
      "description": "Display in game lessons that teach new players.",
      "flags": "clientdll archive release"
  },
  {
      "name": "gameinstructor_start_sound_cooldown",
      "description": "Number of seconds forced between similar lesson start sounds.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_voiceenabled",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "commentary_node_use_viewfacing",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "rope_shake",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "rope_subdiv",
      "description": "Rope subdivision amount",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "rope_collide",
      "description": "Collide rope with the world",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "rope_smooth_enlarge",
      "description": "How much to enlarge ropes in screen space for antialiasing effect",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "rope_smooth_minwidth",
      "description": "When using smoothing, this is the min screenspace width it lets a rope shrink to",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "rope_smooth_minalpha",
      "description": "Alpha for rope antialiasing effect",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "rope_smooth_maxalphawidth",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "rope_smooth_maxalpha",
      "description": "Alpha for rope antialiasing effect",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_drawropes",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_ropetranslucent",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "rope_wind_dist",
      "description": "Don't use CPU applying small wind gusts to ropes when they're past this distance.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "rope_averagelight",
      "description": "Makes ropes use average of cubemap lighting instead of max intensity.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_sceneentity_debug",
      "description": "Display all thinking scene entities and its data.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "mp_usehwmvcds",
      "description": "Enable the use of the hw morph vcd(s). (-1 = never, 1 = always, 0 = based upon GPU)",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "scene_vcdautosave",
      "description": "Create a savegame before VCD playback",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "tv_listen_voice_indices",
      "description": "Bitfield of playerslots to listen to voice messages from when connected to SourceTV, default is none",
      "flags": "clientdll userinfo"
  },
  {
      "name": "tv_listen_voice_indices_h",
      "description": "High 32 bits of bitfield of playerslots to listen to voice messages from when connected to SourceTV, default is none",
      "flags": "clientdll userinfo"
  },
  {
      "name": "mic_listen_while_nonfocused",
      "description": "Enables the ability for the mic to remain open if the window loses focus such as when a caster tabs out to adjust settings",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "soundscape_fadetime",
      "description": "Time to crossfade sound effects between soundscapes",
      "flags": "clientdll cheat"
  },
  {
      "name": "soundscape_message",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "soundscape_radius_debug",
      "description": "Prints current volume of radius sounds",
      "flags": "clientdll cheat"
  },
  {
      "name": "r_drawsprites",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "freecamera_fog_start",
      "description": "Fog start for Free Camera.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "freecamera_fog_end",
      "description": "Fog end for Free Camera.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "freecamera_zfar",
      "description": "Fog start for Free Camera.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "freecamera_rotation_multiplier",
      "description": "Tweak this parameter to adjust Free Camera mouse rotation.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "freecamera_max_speed",
      "description": "Tweak this parameter to adjust Free Camera movement max speed.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "freecamera_accel",
      "description": "Tweak this parameter to adjust Free Camera movement acceleration.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "stats_highlight_interval",
      "description": "Interval between hightlight screens in the transition stats panel",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_change_callback_limit",
      "description": "change callback msec warning limit",
      "flags": "clientdll release"
  },
  {
      "name": "cl_ShowBoneSetupEnts",
      "description": "Show which entities are having their bones setup each frame.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cpu_level",
      "description": "CPU Level - Default: High",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "gpu_level",
      "description": "GPU Level - Default: High",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "mem_level",
      "description": "Memory Level - Default: High",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "gpu_mem_level",
      "description": "Memory Level - Default: High",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_dormant_spew",
      "description": "Spew state on when client entities become dormant or active.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_showtextmsg",
      "description": "Enable/disable text messages printing on the screen.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_chat_active",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_showfps",
      "description": "Draw fps meter at top of screen (1 = fps, 2 = smooth fps, 3 = server MS, 4 = Show FPS and Log to file )",
      "flags": "clientdll release"
  },
  {
      "name": "cl_showpos",
      "description": "Draw current position at top of screen",
      "flags": "clientdll release"
  },
  {
      "name": "cl_showmem",
      "description": "Draw approximate memory use at top of screen",
      "flags": "clientdll release"
  },
  {
      "name": "report_clientthinklist",
      "description": "List all clientside entities thinking and time - will report and turn itself off.",
      "flags": "clientdll cheat"
  },
  {
      "name": "vprof_scope_entity_clientthink",
      "description": "Does nothing whatsoever.",
      "flags": "developmentonly missing0 clientdll"
  },
  {
      "name": "cl_showusercmd",
      "description": "Show user command encoding",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_anglespeedkey",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_yawspeed",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_pitchspeed",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_pitchdown",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_pitchup",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_steamcontroller",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "joystick",
      "description": "True if the joystick is enabled, false otherwise.",
      "flags": "clientdll archive"
  },
  {
      "name": "cl_boxmove",
      "description": "run in a square, # represents how many usercommands to run before turning.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_boxmove_speed",
      "description": "how fast to run (1 to use player max run speed).",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "ss_mimic",
      "description": "Split screen users mimic base player's CUserCmds",
      "flags": "developmentonly clientdll cheat"
  },
  {
      "name": "cam_snapto",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "cam_ideallag",
      "description": "Amount of lag used when matching offset to ideal angles in thirdperson view",
      "flags": "clientdll archive"
  },
  {
      "name": "cam_idealdelta",
      "description": "Controls the speed when matching offset to ideal angles in thirdperson view",
      "flags": "clientdll archive"
  },
  {
      "name": "cam_idealyaw",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "cam_idealpitch",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "cam_idealdist",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "cam_collision",
      "description": "When in thirdperson and cam_collision is set to 1, an attempt is made to keep the camera from passing though walls.",
      "flags": "clientdll archive"
  },
  {
      "name": "cam_showangles",
      "description": "When in thirdperson, print viewangles/idealangles/cameraoffsets to the console.",
      "flags": "clientdll cheat"
  },
  {
      "name": "c_maxpitch",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "c_minpitch",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "c_maxyaw",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "c_minyaw",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "c_maxdistance",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "c_mindistance",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "c_orthowidth",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "c_orthoheight",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "c_thirdpersonshoulder",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "c_thirdpersonshoulderoffset",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "c_thirdpersonshoulderdist",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "c_thirdpersonshoulderheight",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "game_particle_manager_requeue_messages",
      "description": "",
      "flags": "developmentonly missing0 clientdll"
  },
  {
      "name": "cl_hold_game_events_until_server_tick",
      "description": "Holds game events until client has received the tick the event was fired on.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_hold_game_events_force_delay_ticks",
      "description": "Debugging convar to force late dispatch of game events.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_net_showevents",
      "description": "Dump game events to console (1=client only, 2=all).",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_net_showeventlisteners",
      "description": "Show listening addition/removals",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_display_game_events",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "ent_revert_dormancy_change",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_draw3dskybox",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "option_duck_method",
      "description": "Input toggle control",
      "flags": "clientdll archive userinfo per_user"
  },
  {
      "name": "spec_chasedistance",
      "description": "Chase cam's ideal distance from target",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "spec_centerchasecam",
      "description": "Looks at the target player's center, instead of his eye position, in chase came mode",
      "flags": "clientdll archive"
  },
  {
      "name": "spec_track",
      "description": "Tracks an entity in spec mode",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "bot_mimic_spec_buttons",
      "description": "+attack, +jump etc are used for spectator control instead of being passed on to spectated bot",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_skeleton_instance_smear_boneflags",
      "description": "Smear boneflags across the model.  Costs computation, but tests to make sure your bone flags are consistent.",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_phys_networked_start_sleep",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cloth_debug_draw",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cloth_update",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cloth_iv_dump",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_enable_rigid_animation",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_ent_showonlyhitbox",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_interp_threadmodeticks",
      "description": "Additional interpolation ticks to use when interpolating with threaded engine mode set.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "report_cliententitysim",
      "description": "List all clientside simulations and time - will report and turn itself off.",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_extrapolate",
      "description": "Enable/disable extrapolation if interpolation history runs out.",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_interp_npcs",
      "description": "Interpolate NPC positions starting this many seconds in past (or cl_interp, if greater)",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_interp_all",
      "description": "Disable interpolation list optimizations.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_drawmodeldecals",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_simulate_dormant_entities",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_draw_simulating_entities",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_draw_simulating_entities_distance",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "ent_test_interpolation",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_interp_animationvars",
      "description": "Interpolate LATCH_ANIMATION_BIT vars if interpolation interval is greater than simulation interval",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_interp_simulationvars",
      "description": "Interpolate LATCH_SIMULATION_BIT vars if interpolation interval is greater than animation interval",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "iv_wrapped_parallel_latch",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "iv_parallel_latch",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "iv_parallel_restore",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_latch_report",
      "description": "Enable to output stats about latching",
      "flags": "clientdll archive"
  },
  {
      "name": "cl_interpolate_report",
      "description": "Enable to show interpolation profile timing.",
      "flags": "clientdll archive"
  },
  {
      "name": "cl_interp_hermite",
      "description": "Set to zero do disable hermite interpolation.",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_extrapolate_amount",
      "description": "Set how many seconds the client will extrapolate entities for.",
      "flags": "clientdll cheat"
  },
  {
      "name": "phonemedelay",
      "description": "Phoneme delay to account for sound system latency.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "phonemefilter",
      "description": "Time duration of box filter to pass over phonemes.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "blink_duration",
      "description": "How many seconds an eye blink will last.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_viewtarget_clamp",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_enable_eye_occlusion",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_eye_occlusion_debug",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "enable_boneflex",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "phonemesnap",
      "description": "Lod at level at which visemes stops always considering two phonemes, regardless of duration.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_eye_target_override",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_eye_yaw_multiplier",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_eye_sin_wave",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_smooth",
      "description": "Smooth view/eye origin after prediction errors",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_smoothtime",
      "description": "Smooth client's view after prediction error over this many seconds",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "zoom_sensitivity_ratio",
      "description": "Additional mouse sensitivity scale factor applied when FOV is zoomed in.",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "ragdoll_impact_strength",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "g_debug_ragdoll_visualize",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "g_ragdoll_fadespeed",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "g_ragdoll_lvfadespeed",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "mat_colcorrection_disableentities",
      "description": "Disable map color-correction entities",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "mat_colcorrection_forceentitiesclientside",
      "description": "Forces color correction entities to be updated on the client",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_retire_low_priority_lights",
      "description": "Low priority dlights are replaced by high priority ones",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_globallight_freeze",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_globallight_expansion",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_globallight_debug",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_globallight_shadow_mode",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "mat_slopescaledepthbias_shadowmap",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_player_ping_mute",
      "description": "If 1, player pinging will make a sound, if 0, pings will be silent",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_tracer_frequency_override",
      "description": "Override tracer frequency (-1 to disable)",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_parachute_autodeploy",
      "description": "Auto-deploy parachute if fall speed exceeds lethal limit",
      "flags": "clientdll archive userinfo per_user server_can_execute"
  },
  {
      "name": "cl_rappel_tilt",
      "description": "",
      "flags": "clientdll release"
  },
  {
      "name": "cl_disable_ragdolls",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ragdoll_reload",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_ragdoll_default_scale",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "animated_material_attributes",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_anim_queue_changes",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_sequence_debug",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_sequence_debug2",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_sequence_model_substring",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_show_ao_proxies",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_cq_min_queue",
      "description": "Allows client to disable (=-1), defer to server (=0), or request a certain min-command queue size for games that support the command queue (IsUsingCommandQueue()) for CUserCmds.",
      "flags": "clientdll userinfo cheat"
  },
  {
      "name": "cl_updaterate",
      "description": "Number of packets per second of updates you are requesting from the server",
      "flags": "clientdll archive userinfo"
  },
  {
      "name": "cl_interp_ratio",
      "description": "Sets the interpolation amount (final amount is cl_interp_ratio / cl_updaterate).",
      "flags": "clientdll userinfo"
  },
  {
      "name": "cl_interp",
      "description": "Sets the interpolation amount (bounded on low side by server interp ratio settings).",
      "flags": "clientdll userinfo"
  },
  {
      "name": "cl_predict",
      "description": "Perform client side prediction.",
      "flags": "clientdll userinfo cheat"
  },
  {
      "name": "mp_usehwmmodels",
      "description": "Enable the use of the hw morph models. (-1 = never, 1 = always, 0 = based upon GPU)",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_ent_joint_axis_size",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_ent_joint_names",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_ent_joint_filter_substring",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_ent_joint_use_bind_pose",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_ent_joint_only_ik_joints",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_ent_skeleton_only_ik_joints",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_screenmessage_notifytime",
      "description": "How long to display screen message text",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_ent_showonlyattachment",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "fov_cs_debug",
      "description": "Sets the view fov if cheats are on.",
      "flags": "clientdll cheat"
  },
  {
      "name": "fov_cs_ultrawide_near_z",
      "description": "",
      "flags": "developmentonly clientdll cheat"
  },
  {
      "name": "cl_sniper_delay_unscope",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "death_chase_distance",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_sanitize_player_names",
      "description": "Replace names of other players with something non-offensive.",
      "flags": "clientdll archive"
  },
  {
      "name": "cl_sanitize_muted_players",
      "description": "Hide names and avatars of muted players.",
      "flags": "clientdll release"
  },
  {
      "name": "cl_show_playernames_max_chars_console",
      "description": "Shows all player names (including bots) as 16 W's.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_teammate_color_1",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_teammate_color_2",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_teammate_color_3",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_teammate_color_4",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_teammate_color_5",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_teammate_colors_show",
      "description": "In competitive, 1 = show teammates as separate colors in the radar, scoreboard, etc., 2 = show colors and letters",
      "flags": "clientdll archive release"
  },
  {
      "name": "cl_show_enemy_avatar_colors",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "option_speed_method",
      "description": "Input toggle control",
      "flags": "clientdll archive userinfo per_user"
  },
  {
      "name": "cl_pred_checkstuck",
      "description": "Perform the additional 'stuck' traces on the client side during prediction.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "spec_hide_players",
      "description": "Toggle the visibility of scoreboard players.",
      "flags": "clientdll release clientcmd_can_execute"
  },
  {
      "name": "spec_dz_group_teams",
      "description": "If set, will group players into their teams for spectating, if 0, spectating numbers will be the default individual players",
      "flags": "clientdll release"
  },
  {
      "name": "spec_usenumberkeys_nobinds",
      "description": "If set to 1, map voting and spectator view use the raw number keys instead of the weapon binds (slot1, slot2, etc).",
      "flags": "clientdll archive"
  },
  {
      "name": "cl_obs_interp_enable",
      "description": "Enables interpolation between observer targets",
      "flags": "clientdll archive"
  },
  {
      "name": "cl_obs_interp_pos_rate",
      "description": "",
      "flags": "clientdll archive"
  },
  {
      "name": "cl_obs_interp_pos_halflife",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_obs_interp_snap_dist",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_obs_interp_settle_dist",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_obs_interp_dist_to_turn_to_face",
      "description": "Changing to a target further than this will cause the camera to face the direction of travel",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_obs_interp_angle_progress_headstart",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_obs_interp_turn_to_face_start_frac",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_obs_interp_turn_to_face_end_frac",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_obs_interp_obstruction_behavior",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_spec_use_tournament_content_standards",
      "description": "",
      "flags": "clientdll release"
  },
  {
      "name": "viewmodel_offset_x",
      "description": "viewmodel_offset_x",
      "flags": "clientdll archive"
  },
  {
      "name": "viewmodel_offset_y",
      "description": "viewmodel_offset_y",
      "flags": "clientdll archive"
  },
  {
      "name": "viewmodel_offset_z",
      "description": "viewmodel_offset_z",
      "flags": "clientdll archive"
  },
  {
      "name": "viewmodel_offset_randomize",
      "description": "randomly change viewmodel offsets to visualize range",
      "flags": "clientdll cheat"
  },
  {
      "name": "viewmodel_always_on",
      "description": "Force the view model to draw, even when in 3rd person",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_gunlowerangle",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_gunlowerspeed",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_mantle_gunloweramt",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_mantle_gunlowerspeed",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_death_anim_viewmodel_drop_rate",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_death_anim_viewmodel_pitch_rate",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_wpn_sway_interp",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_wpn_sway_scale",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_smoke_volumeprop",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_smoke_volume_growth",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_viewmodelsclonedasworld",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_weapon_debug_print_accuracy",
      "description": "",
      "flags": "clientdll cheat release"
  },
  {
      "name": "cl_weapon_debug_show_accuracy",
      "description": "Draws a circle representing the effective range with every shot.",
      "flags": "clientdll cheat release"
  },
  {
      "name": "cl_weapon_debug_show_accuracy_duration",
      "description": "",
      "flags": "clientdll cheat release"
  },
  {
      "name": "cl_wallbang_heavy_threshold",
      "description": "The Threshold where to switch from Light to Heavy Wallbang tracer",
      "flags": "clientdll cheat release"
  },
  {
      "name": "weapon_skins",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "weapon_skins_for_bots",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "weapon_skins_on_default",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "weapon_random_stickers",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "weapon_all_stattrak",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "weapon_all_nametag",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_cam_driver_compensation_scale",
      "description": "",
      "flags": "clientdll release"
  },
  {
      "name": "cl_sniper_auto_rezoom",
      "description": "Auto-rezoom snipers after a shot",
      "flags": "clientdll archive userinfo per_user"
  },
  {
      "name": "cl_tablet_mapmode",
      "description": "",
      "flags": "clientdll archive release"
  },
  {
      "name": "econ_debug_loadout_ui",
      "description": "Show debug data when players change their loadout.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "snd_music_selection",
      "description": "Tracking rotating music for players with no music packs equipped.",
      "flags": "clientdll archive"
  },
  {
      "name": "cl_use_opens_buy_menu",
      "description": "Pressing the +use key will open the buy menu if in a buy zone (just as if you pressed the 'buy' key).",
      "flags": "clientdll archive userinfo per_user"
  },
  {
      "name": "cl_silencer_mode",
      "description": "0: cannot detach; 1: press secondary fire to detach",
      "flags": "clientdll archive userinfo per_user"
  },
  {
      "name": "cl_autohelp",
      "description": "Auto-help",
      "flags": "clientdll archive userinfo"
  },
  {
      "name": "closeonbuy",
      "description": "Set non-zero to close the buy menu after buying something",
      "flags": "clientdll archive per_user"
  },
  {
      "name": "cl_join_advertise",
      "description": "Advertise joinable game in progress to Steam friends, otherwise need a Steam invite (2: all servers, 1: official servers, 0: none)",
      "flags": "clientdll archive"
  },
  {
      "name": "composite_material_cache_count_max",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_replay_post_effect",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "leaderboards_cache_duration",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_predictioncopy_runs",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "pwatchent",
      "description": "Entity to watch for prediction system changes.",
      "flags": "clientdll cheat"
  },
  {
      "name": "pwatchvar",
      "description": "Entity variable to watch in prediction system for changes.",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_pred_build_verbose",
      "description": "Verbose spew when building prediction optimized data runs.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "dllverification_sendmessage",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_panel_freeze_time_after_press",
      "description": "time to freeze mouse/pointer motion after a mouse button press",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "panorama_focus_world_panels",
      "description": "when set request key focus when a world panel is enabled",
      "flags": "clientdll archive"
  },
  {
      "name": "panorama_async_compute_mipgen",
      "description": "use asynchronous compute for mipmap generation.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "panorama_worldpanel_update_culling",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "panorama_worldpanel_update_cull_distance",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "panorama_worldpanel_update_cull_size_threshold",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "ui_hud_dist",
      "description": "distance from the player to the hud",
      "flags": "developmentonly clientdll replicated"
  },
  {
      "name": "point_hint_ui_dpi",
      "description": "",
      "flags": "developmentonly clientdll replicated"
  },
  {
      "name": "point_hint_ui_width",
      "description": "",
      "flags": "developmentonly clientdll replicated"
  },
  {
      "name": "point_hint_ui_height",
      "description": "",
      "flags": "developmentonly clientdll replicated"
  },
  {
      "name": "point_hint_ui_large_width",
      "description": "",
      "flags": "developmentonly clientdll replicated"
  },
  {
      "name": "point_hint_ui_large_height",
      "description": "",
      "flags": "developmentonly clientdll replicated"
  },
  {
      "name": "cl_ent_pivot_size",
      "description": "",
      "flags": "clientdll archive cheat"
  },
  {
      "name": "cl_debug_overlay_fullposition",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_ent_text_no_name_really_i_mean_it",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_show_contexts",
      "description": "Show entity contexts in ent_text display",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_ent_text_flags_active",
      "description": "",
      "flags": "clientdll archive cheat"
  },
  {
      "name": "buildcubemaps_renderdoc_capture",
      "description": "Capture a specific cubemap with RenderDoc during buildcubemaps.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "show_visibility_boxes",
      "description": "Enable or Disable debug display of visibility boxes",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_skip_update_animations",
      "description": "Enable to skip game animations",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_massreport",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_lightquery_debug",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_phys_enabled",
      "description": "Enable all physics simulation",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_phys_stop_at_collision",
      "description": "",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_phys_sleep_enable",
      "description": "Enable sleeping for dynamic physics bodies.",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_phys_animated_hierarchy",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_phys_block_fraction",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_phys_block_dist",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cloth_sim_on_tick",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_phys_timescale",
      "description": "Scale time for physics",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cloth_update_bones_on_ticks",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_phys_visualize_awake",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "phys_batch_ray_test",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_phys_debug_callback_entities",
      "description": "Print all entities that get touch callbacks. Each entity is printed only once.",
      "flags": "clientdll cheat"
  },
  {
      "name": "cl_hitbox_debug",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_strip_invisible_during_sceneobject_update",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_threaded_scene_object_update",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "r_freeze_sceneobjects",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "@panorama_early_anim_dispatch",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_script_break_in_native_debugger_on_error",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "cl_script_attach_debugger_at_startup",
      "description": "",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "spec_replay_review_sound",
      "description": "When set to non-0, a sound effect is played during Killer Replay",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "spec_replay_rate_slowdown",
      "description": "The part of Killer Replay right before death is played at this rate",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "spec_replay_rate_slowdown_length",
      "description": "The part of Killer Replay right before death is played at this rate",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "spec_replay_fadein",
      "description": "Amount of time in seconds it takes to visually fade into replay, or into real-time after replay",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "spec_replay_fadeout",
      "description": "Amount of time in seconds it takes to visually fade out of replay, or out of real-time before replay",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "spec_replay_sound_fadein",
      "description": "Amount of time in seconds it takes to fade in the audio before or after replay",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "spec_replay_sound_fadeout",
      "description": "Amount of time in seconds it takes to fade out the audio before or after replay",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "spec_replay_cache_ragdolls",
      "description": "when set to 0, ragdolls will settle dynamically before and after Killer Replay",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "spec_replay_others_experimental",
      "description": "Replay the last death of the round, if possible. Disabled on official servers by default. Experimental.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "spec_replay_autostart",
      "description": "Auto-start Killer Replay when available",
      "flags": "clientdll archive"
  },
  {
      "name": "spec_replay_victim_pov",
      "description": "Killer Replay - replay from victim's point of view (1); the default is killer's (0). Experimental.",
      "flags": "developmentonly clientdll"
  },
  {
      "name": "mm_player_search_requests_limit",
      "description": "How many friend requests are displayed.",
      "flags": "developmentonly"
  },
  {
      "name": "mm_player_search_update_interval",
      "description": "Interval between players searches.",
      "flags": "developmentonly"
  },
  {
      "name": "mm_player_search_lan_ping_interval",
      "description": "Interval between LAN discovery pings.",
      "flags": "developmentonly"
  },
  {
      "name": "mm_player_search_lan_ping_duration",
      "description": "Duration of LAN discovery ping phase.",
      "flags": "developmentonly"
  },
  {
      "name": "mm_events_listeners_validation",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "net_allow_multicast",
      "description": "",
      "flags": "archive release"
  },
  {
      "name": "cl_names_debug",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mm_player_search_count",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mm_ignored_sessions_forget_time",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mm_ignored_sessions_forget_pass",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mm_server_search_update_interval",
      "description": "Interval between servers updates.",
      "flags": "developmentonly"
  },
  {
      "name": "mm_server_search_inet_ping_interval",
      "description": "How long to wait between pinging internet server details.",
      "flags": "developmentonly"
  },
  {
      "name": "mm_server_search_inet_ping_timeout",
      "description": "How long to wait for internet server details.",
      "flags": "developmentonly"
  },
  {
      "name": "mm_server_search_inet_ping_window",
      "description": "How many servers can be pinged for server details in a batch.",
      "flags": "developmentonly"
  },
  {
      "name": "mm_server_search_inet_ping_refresh",
      "description": "How often to refresh a listed server.",
      "flags": "developmentonly"
  },
  {
      "name": "mm_server_search_server_lifetime",
      "description": "How long until a server is no longer returned by the master till we remove it.",
      "flags": "developmentonly"
  },
  {
      "name": "mm_server_search_lan_ping_interval",
      "description": "Interval between LAN discovery pings.",
      "flags": "developmentonly"
  },
  {
      "name": "mm_server_search_lan_ping_duration",
      "description": "Duration of LAN discovery ping phase.",
      "flags": "developmentonly"
  },
  {
      "name": "mm_server_search_lan_ports",
      "description": "Ports to scan during LAN games discovery. Also used to discover and correctly connect to dedicated LAN servers behind NATs.",
      "flags": "archive release"
  },
  {
      "name": "mm_datacenter_update_interval",
      "description": "Interval between datacenter stats updates.",
      "flags": "developmentonly"
  },
  {
      "name": "mm_datacenter_retry_interval",
      "description": "Interval between datacenter stats retries.",
      "flags": "developmentonly"
  },
  {
      "name": "mm_datacenter_query_delay",
      "description": "Delay after datacenter update is enabled before data is actually queried.",
      "flags": "developmentonly"
  },
  {
      "name": "mm_session_sys_delay_create",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mm_session_sys_delay_create_host",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mm_session_sys_connect_timeout",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mm_session_team_res_timeout",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mm_session_voice_loading",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mm_session_sys_ranking_timeout",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mm_session_sys_slots_guaranteed",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mm_session_sys_pkey",
      "description": "",
      "flags": "release"
  },
  {
      "name": "mm_session_sys_kick_ban_duration",
      "description": "",
      "flags": "release"
  },
  {
      "name": "voice_test_log_send",
      "description": "",
      "flags": "release"
  },
  {
      "name": "mm_dlcs_mask_fake",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mm_dlcs_mask_extras",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mm_tu_string",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mm_dedicated_allow",
      "description": "1 = allow searches for dedicated servers",
      "flags": "developmentonly"
  },
  {
      "name": "mm_dedicated_fake",
      "description": "1 = pretend like search is going, but abort after some time",
      "flags": "developmentonly"
  },
  {
      "name": "mm_dedicated_force_servers",
      "description": "Comma delimited list of ip:port of servers used to search for dedicated servers instead of searching for public servers..Use syntax \"publicip1:port|privateip1:port,publicip2:port|privateip2:port\" if your server is behind NAT..If the server is behind NAT, you can specify \"0.0.0.0|privateip:port\" and if server port is in the list of \"mm_server_search_lan_ports\" its public address should be automatically detected.",
      "flags": "release"
  },
  {
      "name": "mm_dedicated_ip",
      "description": "IP address of dedicated servers to consider available",
      "flags": "developmentonly"
  },
  {
      "name": "mm_dedicated_timeout_request",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mm_dedicated_search_maxping",
      "description": "Longest preferred ping to dedicated servers for games",
      "flags": "archive"
  },
  {
      "name": "mm_dedicated_search_maxresults",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mm_teamsearch_errortime",
      "description": "Time team search is in error state until it self-cancels",
      "flags": "developmentonly"
  },
  {
      "name": "mm_teamsearch_nostart",
      "description": "Team search will fake cancel before searching for server",
      "flags": "developmentonly"
  },
  {
      "name": "sv_search_team_key",
      "description": "When initiating team search, set this key to match with known opponents team",
      "flags": "release"
  },
  {
      "name": "mm_session_search_num_results",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mm_session_search_qos_timeout",
      "description": "",
      "flags": "release"
  },
  {
      "name": "mm_match_search_update_interval",
      "description": "Interval between matchsearcher updates.",
      "flags": "developmentonly"
  },
  {
      "name": "mm_sv_load_test",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "mm_title_debug_version",
      "description": "This matchmaking version will override .res file version for isolating matchmaking",
      "flags": "developmentonly"
  },
  {
      "name": "mm_csgo_community_search_players_min",
      "description": "When performing CSGO community matchmaking look for servers with at least so many human players",
      "flags": "archive release"
  },
  {
      "name": "diffcheck_playerslot",
      "description": "",
      "flags": "developmentonly"
  },
  {
      "name": "diffcheck_spew",
      "description": "Actually show diffcheck results.",
      "flags": "developmentonly"
  },
  {
      "name": "diffcheck_spew_diff_only",
      "description": "Show diff only.",
      "flags": "developmentonly"
  },
  {
      "name": "diffcheck_spew_diff_filter",
      "description": "Show diff with matching filter substring only.",
      "flags": "developmentonly"
  },
  {
      "name": "diffcheck",
      "description": "Activate diffcheck system.",
      "flags": "developmentonly"
  },
  {
      "name": "nav_gen_true",
      "description": "Always true",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_false",
      "description": "Always false",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_match_ground",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_opt_to_quads",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_opt_to_quads_angle_limit",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_opt_to_quads_planar_deviation_limit",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_opt_to_quads_num_steps",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_opt_to_quads_se_limit_start",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_opt_to_quads_se_limit_end",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_opt_to_quads_weld_limit_start",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_opt_to_quads_weld_limit_end",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_degen_limit",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_markup_split_tol_base",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_markup_split_tol_nonentity",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_markup_split_tol_nonav",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_markup_split_expand",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_max_edge_len_do_clip",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_max_edge_len",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_max_edge_len_split_tol",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_max_bottleneck_width_do_clip",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_max_bottleneck_width",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_island_removal",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_island_removal_all_hulls",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_tri_reduce_all",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_connect_dist_a",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_connect_dist_b",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_connect_dist_z_mult",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_connect_angle",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_connect_angle_ignore_z",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_connect_overlap",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_connect_allow_multiple",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_add_jumps",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_vertical_limit",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_remove_vertical_polys",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_split_boundary_polys",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_split_multi_connection_polys",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_split_multi_connection_polys_tol",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_clip_polys_to_clearance",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_clip_polys_to_clearance_debug",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_join_nonzup",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_agent_radius_buffer",
      "description": "Buffer to add to agent radius before passing to nav gen",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_jump_connection_min_overlap_ratio",
      "description": "Minimum edge overlap required for jump connection consideration as a percentage of agent radius",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_tr_max_acceptable_cost_1",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_gen_tr_max_acceptable_cost_2",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "recast_partitioning",
      "description": "0 = watershed, 1 = monotone, 2 = layers",
      "flags": "replicated cheat"
  },
  {
      "name": "recast_mark_overhang",
      "description": "Enable/disable overhang detection",
      "flags": "replicated cheat"
  },
  {
      "name": "tr_epsilon_t_junction",
      "description": "",
      "flags": "replicated cheat"
  },
  {
      "name": "tr_openedge_penalty",
      "description": "",
      "flags": "replicated cheat"
  },
  {
      "name": "tr_max_acceptable_edge_length",
      "description": "",
      "flags": "replicated cheat"
  },
  {
      "name": "tr_do_reduce",
      "description": "",
      "flags": "replicated cheat"
  },
  {
      "name": "nav_split_place_on_ground",
      "description": "If true, nav areas will be placed flush with the ground when split.",
      "flags": "cheat"
  },
  {
      "name": "nav_max_vis_delta_list_length",
      "description": "",
      "flags": "cheat"
  },
  {
      "name": "nav_corner_adjust_adjacent",
      "description": "radius used to raise/lower corners in nearby areas when raising/lowering corners.",
      "flags": "cheat"
  },
  {
      "name": "nav_show_potentially_visible",
      "description": "Show areas that are potentially visible from the current nav area",
      "flags": "cheat"
  },
  {
      "name": "nav_validate",
      "description": "Level of validation for nav system.  Higher will be slower.",
      "flags": "cheat"
  }
]